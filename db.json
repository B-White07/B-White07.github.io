{"meta":{"version":1,"warehouse":"5.0.0"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/Znormalization.png","path":"img/Znormalization.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/alipay.jpg","path":"img/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/avatar.JPG","path":"img/avatar.JPG","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/brew源.png","path":"img/brew源.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/brew源2.png","path":"img/brew源2.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/cloud.png","path":"img/cloud.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/divideMax.png","path":"img/divideMax.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/googlenews.png","path":"img/googlenews.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/lion.png","path":"img/lion.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/meannormalization.png","path":"img/meannormalization.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/nomoney.png","path":"img/nomoney.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/origin.png","path":"img/origin.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/stablediffusion1.png","path":"img/stablediffusion1.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/stablediffusion2.png","path":"img/stablediffusion2.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/wallpaper.jpg","path":"img/wallpaper.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/wechat.jpg","path":"img/wechat.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/font/fzkt.ttf","path":"font/fzkt.ttf","modified":0,"renderable":0},{"_id":"source/img/2404131.PNG","path":"img/2404131.PNG","modified":0,"renderable":0},{"_id":"source/img/24041310.png","path":"img/24041310.png","modified":0,"renderable":0},{"_id":"source/img/24041311.png","path":"img/24041311.png","modified":0,"renderable":0},{"_id":"source/img/2404132.gif","path":"img/2404132.gif","modified":0,"renderable":0},{"_id":"source/img/2404133.png","path":"img/2404133.png","modified":0,"renderable":0},{"_id":"source/img/2404134.png","path":"img/2404134.png","modified":0,"renderable":0},{"_id":"source/img/2404135.png","path":"img/2404135.png","modified":0,"renderable":0},{"_id":"source/img/2404136.png","path":"img/2404136.png","modified":0,"renderable":0},{"_id":"source/img/2404137.png","path":"img/2404137.png","modified":0,"renderable":0},{"_id":"source/img/2404138.png","path":"img/2404138.png","modified":0,"renderable":0},{"_id":"source/img/2404139.png","path":"img/2404139.png","modified":0,"renderable":0},{"_id":"source/img/2404141.png","path":"img/2404141.png","modified":0,"renderable":0},{"_id":"source/img/2404151.png","path":"img/2404151.png","modified":0,"renderable":0},{"_id":"source/img/2404152.png","path":"img/2404152.png","modified":0,"renderable":0},{"_id":"source/img/24042401.png","path":"img/24042401.png","modified":0,"renderable":0},{"_id":"source/img/24042402.png","path":"img/24042402.png","modified":0,"renderable":0},{"_id":"source/img/24042403.png","path":"img/24042403.png","modified":0,"renderable":0},{"_id":"source/img/24042404.png","path":"img/24042404.png","modified":0,"renderable":0},{"_id":"source/img/24042405.png","path":"img/24042405.png","modified":0,"renderable":0},{"_id":"source/img/24042406.png","path":"img/24042406.png","modified":0,"renderable":0},{"_id":"source/img/24042407.png","path":"img/24042407.png","modified":0,"renderable":0},{"_id":"source/img/24042408.png","path":"img/24042408.png","modified":0,"renderable":0},{"_id":"source/img/24042501.png","path":"img/24042501.png","modified":0,"renderable":0},{"_id":"source/img/24042502.png","path":"img/24042502.png","modified":0,"renderable":0},{"_id":"source/img/24042503.png","path":"img/24042503.png","modified":0,"renderable":0},{"_id":"source/img/24042504.png","path":"img/24042504.png","modified":0,"renderable":0},{"_id":"source/img/24042505.png","path":"img/24042505.png","modified":0,"renderable":0},{"_id":"source/img/24042506.png","path":"img/24042506.png","modified":0,"renderable":0},{"_id":"source/img/24042507.png","path":"img/24042507.png","modified":0,"renderable":0},{"_id":"source/img/24042508.png","path":"img/24042508.png","modified":0,"renderable":0},{"_id":"source/img/24042801.png","path":"img/24042801.png","modified":0,"renderable":0},{"_id":"source/img/24042802.png","path":"img/24042802.png","modified":0,"renderable":0},{"_id":"source/img/24042803.png","path":"img/24042803.png","modified":0,"renderable":0},{"_id":"source/img/24043001.png","path":"img/24043001.png","modified":0,"renderable":0},{"_id":"source/img/24043002.png","path":"img/24043002.png","modified":0,"renderable":0},{"_id":"source/img/24043003.png","path":"img/24043003.png","modified":0,"renderable":0},{"_id":"source/img/24043004.png","path":"img/24043004.png","modified":0,"renderable":0},{"_id":"source/img/24043005.png","path":"img/24043005.png","modified":0,"renderable":0},{"_id":"source/img/24050600.png","path":"img/24050600.png","modified":0,"renderable":0},{"_id":"source/img/24050601.png","path":"img/24050601.png","modified":0,"renderable":0},{"_id":"source/img/24050602.png","path":"img/24050602.png","modified":0,"renderable":0},{"_id":"source/img/24050603.png","path":"img/24050603.png","modified":0,"renderable":0},{"_id":"source/img/24050604.png","path":"img/24050604.png","modified":0,"renderable":0},{"_id":"source/img/24050605.png","path":"img/24050605.png","modified":0,"renderable":0},{"_id":"source/img/24050606.png","path":"img/24050606.png","modified":0,"renderable":0},{"_id":"source/img/24050607.png","path":"img/24050607.png","modified":0,"renderable":0},{"_id":"source/img/24050608.png","path":"img/24050608.png","modified":0,"renderable":0},{"_id":"source/img/24050609.png","path":"img/24050609.png","modified":0,"renderable":0},{"_id":"source/img/24050610.png","path":"img/24050610.png","modified":0,"renderable":0},{"_id":"source/img/24050611.png","path":"img/24050611.png","modified":0,"renderable":0},{"_id":"source/img/24050612.png","path":"img/24050612.png","modified":0,"renderable":0},{"_id":"source/img/24050613.png","path":"img/24050613.png","modified":0,"renderable":0},{"_id":"source/img/24050614.png","path":"img/24050614.png","modified":0,"renderable":0},{"_id":"source/img/24050615.png","path":"img/24050615.png","modified":0,"renderable":0},{"_id":"source/img/24050701.png","path":"img/24050701.png","modified":0,"renderable":0},{"_id":"source/img/24050702.png","path":"img/24050702.png","modified":0,"renderable":0},{"_id":"source/img/24050703.png","path":"img/24050703.png","modified":0,"renderable":0},{"_id":"source/img/24050704.png","path":"img/24050704.png","modified":0,"renderable":0},{"_id":"source/img/24050705.png","path":"img/24050705.png","modified":0,"renderable":0},{"_id":"source/img/24050706.png","path":"img/24050706.png","modified":0,"renderable":0},{"_id":"source/img/24050707.png","path":"img/24050707.png","modified":0,"renderable":0},{"_id":"source/img/24050708.png","path":"img/24050708.png","modified":0,"renderable":0},{"_id":"source/img/24050709.png","path":"img/24050709.png","modified":0,"renderable":0},{"_id":"source/img/24050800.png","path":"img/24050800.png","modified":0,"renderable":0},{"_id":"source/img/24050801.png","path":"img/24050801.png","modified":0,"renderable":0},{"_id":"source/img/24050802.png","path":"img/24050802.png","modified":0,"renderable":0},{"_id":"source/img/24050805.png","path":"img/24050805.png","modified":0,"renderable":0},{"_id":"source/img/24050803.png","path":"img/24050803.png","modified":0,"renderable":0},{"_id":"source/img/24050804.png","path":"img/24050804.png","modified":0,"renderable":0},{"_id":"source/img/24050806.png","path":"img/24050806.png","modified":0,"renderable":0},{"_id":"source/img/24050807.png","path":"img/24050807.png","modified":0,"renderable":0},{"_id":"source/img/24050808.png","path":"img/24050808.png","modified":0,"renderable":0},{"_id":"source/img/24050809.png","path":"img/24050809.png","modified":0,"renderable":0},{"_id":"source/img/24050900.png","path":"img/24050900.png","modified":0,"renderable":0},{"_id":"source/img/24050901.png","path":"img/24050901.png","modified":0,"renderable":0},{"_id":"source/img/24050902.png","path":"img/24050902.png","modified":0,"renderable":0},{"_id":"source/img/24050903.png","path":"img/24050903.png","modified":0,"renderable":0},{"_id":"source/img/24051200.png","path":"img/24051200.png","modified":0,"renderable":0},{"_id":"source/img/24051201.png","path":"img/24051201.png","modified":0,"renderable":0},{"_id":"source/img/24051202.png","path":"img/24051202.png","modified":0,"renderable":0},{"_id":"source/img/24051300.png","path":"img/24051300.png","modified":0,"renderable":0},{"_id":"source/img/24051301.png","path":"img/24051301.png","modified":0,"renderable":0},{"_id":"source/img/24051302.png","path":"img/24051302.png","modified":0,"renderable":0},{"_id":"source/img/24051303.png","path":"img/24051303.png","modified":0,"renderable":0},{"_id":"source/img/24051304.png","path":"img/24051304.png","modified":0,"renderable":0},{"_id":"source/img/24051305.png","path":"img/24051305.png","modified":0,"renderable":0},{"_id":"source/img/24051400.png","path":"img/24051400.png","modified":0,"renderable":0},{"_id":"source/img/24051401.png","path":"img/24051401.png","modified":0,"renderable":0},{"_id":"source/img/24051402.png","path":"img/24051402.png","modified":0,"renderable":0},{"_id":"source/img/24051403.png","path":"img/24051403.png","modified":0,"renderable":0},{"_id":"source/img/24051404.png","path":"img/24051404.png","modified":0,"renderable":0},{"_id":"source/img/24051500.png","path":"img/24051500.png","modified":0,"renderable":0},{"_id":"source/img/24051501.png","path":"img/24051501.png","modified":0,"renderable":0},{"_id":"source/img/24051502.png","path":"img/24051502.png","modified":0,"renderable":0},{"_id":"source/img/24051700.png","path":"img/24051700.png","modified":0,"renderable":0},{"_id":"source/img/24051701.png","path":"img/24051701.png","modified":0,"renderable":0},{"_id":"source/img/24051702.png","path":"img/24051702.png","modified":0,"renderable":0},{"_id":"source/img/24051703.png","path":"img/24051703.png","modified":0,"renderable":0},{"_id":"source/img/24051704.png","path":"img/24051704.png","modified":0,"renderable":0},{"_id":"source/img/24051705.png","path":"img/24051705.png","modified":0,"renderable":0},{"_id":"source/img/24051706.png","path":"img/24051706.png","modified":0,"renderable":0},{"_id":"source/img/24051707.png","path":"img/24051707.png","modified":0,"renderable":0},{"_id":"source/img/24051708.png","path":"img/24051708.png","modified":0,"renderable":0},{"_id":"source/img/24051800.png","path":"img/24051800.png","modified":0,"renderable":0},{"_id":"source/img/24051801.png","path":"img/24051801.png","modified":0,"renderable":0},{"_id":"source/img/24051802.png","path":"img/24051802.png","modified":0,"renderable":0},{"_id":"source/img/24051803.png","path":"img/24051803.png","modified":0,"renderable":0},{"_id":"source/img/24051804.png","path":"img/24051804.png","modified":0,"renderable":0},{"_id":"source/img/24051805.png","path":"img/24051805.png","modified":0,"renderable":0},{"_id":"source/img/24052800.png","path":"img/24052800.png","modified":0,"renderable":0},{"_id":"source/img/24052801.png","path":"img/24052801.png","modified":0,"renderable":0},{"_id":"source/img/24052802.png","path":"img/24052802.png","modified":0,"renderable":0},{"_id":"source/img/24052803.png","path":"img/24052803.png","modified":0,"renderable":0},{"_id":"source/img/24052804.png","path":"img/24052804.png","modified":0,"renderable":0},{"_id":"source/img/24052805.png","path":"img/24052805.png","modified":0,"renderable":0},{"_id":"source/img/24052806.png","path":"img/24052806.png","modified":0,"renderable":0},{"_id":"source/img/24053100.png","path":"img/24053100.png","modified":0,"renderable":0},{"_id":"source/img/24053101.png","path":"img/24053101.png","modified":0,"renderable":0},{"_id":"source/img/24053102.png","path":"img/24053102.png","modified":0,"renderable":0},{"_id":"source/img/24053103.png","path":"img/24053103.png","modified":0,"renderable":0},{"_id":"source/img/24053104.png","path":"img/24053104.png","modified":0,"renderable":0},{"_id":"source/img/24060200.png","path":"img/24060200.png","modified":0,"renderable":0},{"_id":"source/img/24060201.png","path":"img/24060201.png","modified":0,"renderable":0},{"_id":"source/img/24060202.png","path":"img/24060202.png","modified":0,"renderable":0},{"_id":"source/img/24060203.png","path":"img/24060203.png","modified":0,"renderable":0},{"_id":"source/img/24060204.png","path":"img/24060204.png","modified":0,"renderable":0},{"_id":"source/img/24060205.png","path":"img/24060205.png","modified":0,"renderable":0},{"_id":"source/img/24060206.png","path":"img/24060206.png","modified":0,"renderable":0},{"_id":"source/img/24060207.png","path":"img/24060207.png","modified":0,"renderable":0},{"_id":"source/img/24060208.png","path":"img/24060208.png","modified":0,"renderable":0},{"_id":"source/img/24060209.png","path":"img/24060209.png","modified":0,"renderable":0},{"_id":"source/img/24060210.png","path":"img/24060210.png","modified":0,"renderable":0},{"_id":"source/img/24060211.png","path":"img/24060211.png","modified":0,"renderable":0},{"_id":"source/img/24060212.png","path":"img/24060212.png","modified":0,"renderable":0},{"_id":"source/img/24060300.png","path":"img/24060300.png","modified":0,"renderable":0},{"_id":"source/img/24060301.png","path":"img/24060301.png","modified":0,"renderable":0},{"_id":"source/img/24060302.png","path":"img/24060302.png","modified":0,"renderable":0},{"_id":"source/img/24060303.png","path":"img/24060303.png","modified":0,"renderable":0},{"_id":"source/img/24060304.png","path":"img/24060304.png","modified":0,"renderable":0},{"_id":"source/img/24060305.png","path":"img/24060305.png","modified":0,"renderable":0},{"_id":"source/img/24060306.png","path":"img/24060306.png","modified":0,"renderable":0},{"_id":"source/img/24060400.png","path":"img/24060400.png","modified":0,"renderable":0},{"_id":"source/img/24060401.png","path":"img/24060401.png","modified":0,"renderable":0},{"_id":"source/img/24060402.png","path":"img/24060402.png","modified":0,"renderable":0},{"_id":"source/img/24060403.png","path":"img/24060403.png","modified":0,"renderable":0},{"_id":"source/img/24060404.png","path":"img/24060404.png","modified":0,"renderable":0},{"_id":"source/img/24060405.png","path":"img/24060405.png","modified":0,"renderable":0},{"_id":"source/img/24060406.png","path":"img/24060406.png","modified":0,"renderable":0},{"_id":"source/img/24060407.png","path":"img/24060407.png","modified":0,"renderable":0},{"_id":"source/img/24060500.png","path":"img/24060500.png","modified":0,"renderable":0},{"_id":"source/img/24060501.png","path":"img/24060501.png","modified":0,"renderable":0},{"_id":"source/img/24060502.png","path":"img/24060502.png","modified":0,"renderable":0},{"_id":"source/img/24060503.png","path":"img/24060503.png","modified":0,"renderable":0},{"_id":"source/img/24060504.png","path":"img/24060504.png","modified":0,"renderable":0},{"_id":"source/img/24060505.png","path":"img/24060505.png","modified":0,"renderable":0},{"_id":"source/img/24060506.png","path":"img/24060506.png","modified":0,"renderable":0},{"_id":"source/img/24060600.png","path":"img/24060600.png","modified":0,"renderable":0},{"_id":"source/img/24060601.png","path":"img/24060601.png","modified":0,"renderable":0},{"_id":"source/img/24060602.png","path":"img/24060602.png","modified":0,"renderable":0},{"_id":"source/img/24071701.png","path":"img/24071701.png","modified":0,"renderable":0},{"_id":"source/img/24071702.png","path":"img/24071702.png","modified":0,"renderable":0},{"_id":"source/img/24071703.png","path":"img/24071703.png","modified":0,"renderable":0},{"_id":"source/img/24071704.png","path":"img/24071704.png","modified":0,"renderable":0},{"_id":"source/img/24072000.png","path":"img/24072000.png","modified":0,"renderable":0},{"_id":"source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":0},{"_id":"source/img/Znormalization.png","path":"img/Znormalization.png","modified":0,"renderable":0},{"_id":"source/img/alipay.jpg","path":"img/alipay.jpg","modified":0,"renderable":0},{"_id":"source/img/avatar.JPG","path":"img/avatar.JPG","modified":0,"renderable":0},{"_id":"source/img/cloud.png","path":"img/cloud.png","modified":0,"renderable":0},{"_id":"source/img/cloudflare1.png","path":"img/cloudflare1.png","modified":0,"renderable":0},{"_id":"source/img/cloudflare2.png","path":"img/cloudflare2.png","modified":0,"renderable":0},{"_id":"source/img/cloudflare3.png","path":"img/cloudflare3.png","modified":0,"renderable":0},{"_id":"source/img/cloudflareDNS.png","path":"img/cloudflareDNS.png","modified":0,"renderable":0},{"_id":"source/img/converge.png","path":"img/converge.png","modified":0,"renderable":0},{"_id":"source/img/costfun.png","path":"img/costfun.png","modified":0,"renderable":0},{"_id":"source/img/costfunvs.png","path":"img/costfunvs.png","modified":0,"renderable":0},{"_id":"source/img/decision boundarylog.png","path":"img/decision boundarylog.png","modified":0,"renderable":0},{"_id":"source/img/decisionboundaryline.png","path":"img/decisionboundaryline.png","modified":0,"renderable":0},{"_id":"source/img/divideMax.png","path":"img/divideMax.png","modified":0,"renderable":0},{"_id":"source/img/face1.png","path":"img/face1.png","modified":0,"renderable":0},{"_id":"source/img/face2.png","path":"img/face2.png","modified":0,"renderable":0},{"_id":"source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":0},{"_id":"source/img/googleSearch.png","path":"img/googleSearch.png","modified":0,"renderable":0},{"_id":"source/img/gradientdescent.gif","path":"img/gradientdescent.gif","modified":0,"renderable":0},{"_id":"source/img/gradientdescent1.png","path":"img/gradientdescent1.png","modified":0,"renderable":0},{"_id":"source/img/gradientdescent2.png","path":"img/gradientdescent2.png","modified":0,"renderable":0},{"_id":"source/img/hxjtheta.png","path":"img/hxjtheta.png","modified":0,"renderable":0},{"_id":"source/img/linearmodel1.png","path":"img/linearmodel1.png","modified":0,"renderable":0},{"_id":"source/img/linearmodel2.png","path":"img/linearmodel2.png","modified":0,"renderable":0},{"_id":"source/img/lion.png","path":"img/lion.png","modified":0,"renderable":0},{"_id":"source/img/logistic1.png","path":"img/logistic1.png","modified":0,"renderable":0},{"_id":"source/img/logistic2.png","path":"img/logistic2.png","modified":0,"renderable":0},{"_id":"source/img/loss0.png","path":"img/loss0.png","modified":0,"renderable":0},{"_id":"source/img/loss1.png","path":"img/loss1.png","modified":0,"renderable":0},{"_id":"source/img/meannormalization.png","path":"img/meannormalization.png","modified":0,"renderable":0},{"_id":"source/img/namesilo.png","path":"img/namesilo.png","modified":0,"renderable":0},{"_id":"source/img/namesilo2.png","path":"img/namesilo2.png","modified":0,"renderable":0},{"_id":"source/img/neuralNetwork.png","path":"img/neuralNetwork.png","modified":0,"renderable":0},{"_id":"source/img/nomoney.png","path":"img/nomoney.png","modified":0,"renderable":0},{"_id":"source/img/origin.png","path":"img/origin.png","modified":0,"renderable":0},{"_id":"source/img/polyregression.png","path":"img/polyregression.png","modified":0,"renderable":0},{"_id":"source/img/sigomid.png","path":"img/sigomid.png","modified":0,"renderable":0},{"_id":"source/img/brew源.png","path":"img/brew源.png","modified":0,"renderable":0},{"_id":"source/img/brew源2.png","path":"img/brew源2.png","modified":0,"renderable":0},{"_id":"source/img/stablediffusion1.png","path":"img/stablediffusion1.png","modified":0,"renderable":0},{"_id":"source/img/stablediffusion2.png","path":"img/stablediffusion2.png","modified":0,"renderable":0},{"_id":"source/img/wechat.jpg","path":"img/wechat.jpg","modified":0,"renderable":0},{"_id":"source/img/wallpaper.jpg","path":"img/wallpaper.jpg","modified":0,"renderable":0},{"_id":"source/img/x11.png","path":"img/x11.png","modified":0,"renderable":0},{"_id":"source/img/x1.png","path":"img/x1.png","modified":0,"renderable":0},{"_id":"source/img/x2.png","path":"img/x2.png","modified":0,"renderable":0},{"_id":"source/img/x3.png","path":"img/x3.png","modified":0,"renderable":0},{"_id":"source/img/x22.png","path":"img/x22.png","modified":0,"renderable":0},{"_id":"source/img/googlenews.png","path":"img/googlenews.png","modified":0,"renderable":0},{"_id":"source/img/x33.png","path":"img/x33.png","modified":0,"renderable":0},{"_id":"source/img/x4.png","path":"img/x4.png","modified":0,"renderable":0},{"_id":"source/img/x44.png","path":"img/x44.png","modified":0,"renderable":0},{"_id":"source/img/学习率.png","path":"img/学习率.png","modified":0,"renderable":0},{"_id":"source/diy/widgets/progress.html","path":"diy/widgets/progress.html","modified":0,"renderable":0},{"_id":"source/diy/privacy/CPRA.html","path":"diy/privacy/CPRA.html","modified":0,"renderable":0},{"_id":"source/diy/privacy/GDPR.html","path":"diy/privacy/GDPR.html","modified":0,"renderable":0},{"_id":"source/diy/widgets/2.js","path":"diy/widgets/2.js","modified":0,"renderable":0},{"_id":"source/diy/music/djyqxyy.mp3","path":"diy/music/djyqxyy.mp3","modified":0,"renderable":0},{"_id":"source/diy/file/Cpp.pdf","path":"diy/file/Cpp.pdf","modified":0,"renderable":0},{"_id":"source/diy/widgets/1.js","path":"diy/widgets/1.js","modified":0,"renderable":0},{"_id":"source/diy/eng/241226/241226.mp4","path":"diy/eng/241226/241226.mp4","modified":0,"renderable":0},{"_id":"source/diy/eng/241226/241226转写原文.txt","path":"diy/eng/241226/241226转写原文.txt","modified":0,"renderable":0}],"Cache":[{"_id":"source/CNAME","hash":"d40b0837e60076074450aa37f69cf8dbedb9aa06","modified":1710122385960},{"_id":"source/.DS_Store","hash":"91ede383fb401984ef7d3a7055850a3332ad778a","modified":1735223549233},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1710983978231},{"_id":"source/_posts/240112.md","hash":"b5d43edc0fd671e2f57e3a73263b392b2021dd61","modified":1708499750949},{"_id":"source/_posts/240109.md","hash":"babfb5ac7fee4b65a1eb6d4885c5581b13a4a9ec","modified":1708499722314},{"_id":"source/_posts/C-STL.md","hash":"d62be46f5ea9991f93f34212d175ffd7f5e9d5e3","modified":1718593652412},{"_id":"source/_posts/240208.md","hash":"2a88fa812e757727f954a719851eae74d2f84c5b","modified":1710056135227},{"_id":"source/_posts/CLion实用快捷键.md","hash":"e7a868b694f9244cbf16a06e075c4e1be6dbd2b3","modified":1704792088922},{"_id":"source/_posts/Hexo-GitHub搭建个人网站简要流程及遇到的问题.md","hash":"3bff021e65c596bcc2942db9fc6cc0c67339d7ed","modified":1704792182754},{"_id":"source/_posts/MAC-的一些快捷键.md","hash":"cb75938144fb300c37c81a53ee7690ba2b527ea3","modified":1704792106140},{"_id":"source/_posts/MAC终端实用命令.md","hash":"b226090b6d47e79b48cd626da05dffae33ee4563","modified":1704792118209},{"_id":"source/_posts/ML-Andrew-Ng-0.md","hash":"46e25a89e24edea766a146e552aaccfb40b863f8","modified":1720876166497},{"_id":"source/_posts/ML-Andrew-Ng-1.md","hash":"b8db3f32abb67598233f4b69acb606c80cdcb67c","modified":1715090816296},{"_id":"source/_posts/MarkDown实用语法，Latex公式.md","hash":"d2aa5affab90cdb9eeba636f6de739460bebd18c","modified":1704792133085},{"_id":"source/_posts/hexo主题进阶配置以及遇到的问题.md","hash":"038eb1bac18f1d40fe89f3413e90f5f40b98222c","modified":1710983930426},{"_id":"source/about/index.md","hash":"094be17b8df259b4412cb1b9a681e0b01b82091d","modified":1704795483140},{"_id":"source/_posts/ML-Andrew-Ng-2.md","hash":"0638e533a7db256cfec05cf63ddcf163c34d9d6c","modified":1717679608830},{"_id":"source/_posts/Stable-Diffusion-WebUI本地部署中遇到的一些错误.md","hash":"2da0c4a9537cddbb691ffb4bb0dda78e22852724","modified":1704792299511},{"_id":"source/_posts/homebrew源显示不一致.md","hash":"469fcee03628add5240f53fa38a361f443292d3b","modified":1704792228688},{"_id":"source/_posts/pytorch.md","hash":"78b2b0c9d65d7a6476884b06364ca420a1183623","modified":1721901944001},{"_id":"source/_posts/个人主页番外配置.md","hash":"be607cc6f4470543befa2354b80ad6cd04f28913","modified":1710987512542},{"_id":"source/css/custom-font.css","hash":"359933ee1a58e7af641dea84a747286c25522294","modified":1704526310584},{"_id":"source/tags/index.md","hash":"0147b1c5fb7b5760184c774c0dc5f82037f148b1","modified":1704784911421},{"_id":"source/categories/index.md","hash":"79899523a1d23e6917c388dafe7fe555dfc42317","modified":1704792373909},{"_id":"source/diy/.DS_Store","hash":"b0e39f018ab95791e8e392374a38d76910a3a7d3","modified":1735223566933},{"_id":"source/categories/.DS_Store","hash":"34fe290bc8d934cf4c51deea76c7ec16f3cf4d2f","modified":1704784958550},{"_id":"source/img/2404131.PNG","hash":"c3d21f6ca3945e22a5c9a24b038d07ecc952d30b","modified":1704874349492},{"_id":"source/img/.DS_Store","hash":"b32b85b6f4c8f9aabb980aabebf4ca58c4015c18","modified":1717592339176},{"_id":"source/img/2404151.png","hash":"9cb632391f7595455ac4a2071d303414fd166926","modified":1713152965692},{"_id":"source/img/24071702.png","hash":"2fbd46bb583dd73c7f2305b3f970228df8bc26d1","modified":1721210170826},{"_id":"source/img/24071703.png","hash":"722178b2381c3475ad8cd8445225e5ab7e0950d2","modified":1721210240201},{"_id":"source/img/24071704.png","hash":"5655508e4d7960e47f0ed6f1843d8f1609f65fd5","modified":1721210380304},{"_id":"source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1704454120878},{"_id":"source/img/Znormalization.png","hash":"b7ef3c701912e7fa40f10a09ce881ca70d27f7c2","modified":1705227158475},{"_id":"source/img/avatar.JPG","hash":"f56d498857dd606793ec359bf35509570e8cc7a4","modified":1659367556000},{"_id":"source/img/costfun.png","hash":"4533c3b3347d9c71d797a92d3af0ae94276c980d","modified":1705227478883},{"_id":"source/img/divideMax.png","hash":"47a495df2bc40ed63dcb563a9f4bd5419e833c6a","modified":1705227352083},{"_id":"source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1704454120878},{"_id":"source/img/lion.png","hash":"3726e4f477b1414f602a51a98de4e03e8e34aaa5","modified":1704510886804},{"_id":"source/img/meannormalization.png","hash":"8f5ad37f65b646a7e982bdba3c3f2dd4e9c28fdf","modified":1705227325039},{"_id":"source/img/loss1.png","hash":"ab8e2d8bb3e574dd271687b4c522ce01b06c3cb0","modified":1704874349984},{"_id":"source/img/loss0.png","hash":"0d8f15a6be97f138a7dccbc40b77fbe54e00ef9f","modified":1704874349984},{"_id":"source/img/origin.png","hash":"d80b40ab5da3cee102865ed59059bbeb707d85ed","modified":1705227336750},{"_id":"source/img/namesilo2.png","hash":"dd130994f54ed12f29186fa3a82985688de4e674","modified":1710079619730},{"_id":"source/img/polyregression.png","hash":"408274536ba82a94743e06ad8dd8a900edc3aaa4","modified":1705227610125},{"_id":"source/img/sigomid.png","hash":"02191b231b2b2589089393d8e8fb2c89f52d13df","modified":1706169465198},{"_id":"source/img/stablediffusion1.png","hash":"6357ef01317c240b91ce5f3fc1924b78805bff64","modified":1704636019330},{"_id":"source/img/stablediffusion2.png","hash":"c97ab633eb2ceba9d4485dd0e8e5a308261e57a5","modified":1704636062251},{"_id":"source/diy/eng/.DS_Store","hash":"626f58d4545515f9663641af2ab9c1f0de26f602","modified":1735224048549},{"_id":"source/diy/movie/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1723619211440},{"_id":"source/diy/widgets/progress.html","hash":"169820b792a8628dfb9ee5b97098498ca2405a59","modified":1710986950652},{"_id":"source/diy/file/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1718374581183},{"_id":"source/diy/privacy/CPRA.html","hash":"5d05a0671653848d66d4306fc8f0db6acc06fba0","modified":1710986158472},{"_id":"source/diy/privacy/GDPR.html","hash":"ad84a77435ed0e3367a8b5e66441863ab80bd719","modified":1710986783100},{"_id":"source/diy/music/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1711616022376},{"_id":"source/diy/widgets/1.js","hash":"cbfdf2bd3ef311eae1d25029e18a2775f3a0d330","modified":1710912514104},{"_id":"source/diy/eng/241226/241226转写原文.txt","hash":"11814b4d96844dea430ea216c8091be9a1429346","modified":1735223006434},{"_id":"source/img/24041311.png","hash":"d7f435404b2228dddd6359b14d640dfd46931a34","modified":1713010218533},{"_id":"themes/butterfly/package.json","hash":"5536ed4102cd21ace51478bd11f43db03c040d15","modified":1704782361630},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1704782361622},{"_id":"themes/butterfly/.DS_Store","hash":"63035b7c8778a5a2e5e8c458cdccd50572b17927","modified":1710423099584},{"_id":"themes/butterfly/plugins.yml","hash":"1f8b5e0a533a59f91d760a5f96e61d81a8a9b7d2","modified":1704782361630},{"_id":"themes/butterfly/README_CN.md","hash":"148da187d16033624ceccce8b8561835296f5a5a","modified":1704782361622},{"_id":"themes/butterfly/layout/archive.pug","hash":"bb32c9c476372de747dfa563b83f77d7a917a77d","modified":1704782361623},{"_id":"themes/butterfly/_config.yml","hash":"03dac418e0850caa80edb1f2133eca66476dd23f","modified":1704784215396},{"_id":"themes/butterfly/layout/.DS_Store","hash":"7742a02c467c48e51c7e44c5c292e6ba2508b2c8","modified":1710404539774},{"_id":"themes/butterfly/.github/FUNDING.yml","hash":"da5e77f5e0cdb7e11b36546fb6796d10e3dfbe5d","modified":1704782361622},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1704782361630},{"_id":"themes/butterfly/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1704782361630},{"_id":"themes/butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1704782361623},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1704782361630},{"_id":"themes/butterfly/layout/post.pug","hash":"fc9f45252d78fcd15e4a82bfd144401cba5b169a","modified":1704782361630},{"_id":"themes/butterfly/README.md","hash":"4e01b47448d9f3a02afc04eef644e2321253f6f4","modified":1704782361622},{"_id":"themes/butterfly/languages/default.yml","hash":"90a6dc361de67532437d819a55ec64945ca5404b","modified":1704782361623},{"_id":"themes/butterfly/languages/en.yml","hash":"af5603b1a888f167dc80be6d53a19437b5cf6bef","modified":1704782361623},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"5004faee365139521f161babd66649a8107e4008","modified":1704782361623},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"03629d1d13a7be09d4933aa5dc0dcbe45e79140c","modified":1704782361623},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"6e34b565ea013812d5e363b6de5fa1f9078d4e12","modified":1704782361622},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"7b4831ae8f8f8c55dd1b856781210c517c63e6dd","modified":1704782361622},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"996640605ed1e8e35182f0fd9a60a88783b24b03","modified":1704782361622},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1704782361622},{"_id":"themes/butterfly/scripts/.DS_Store","hash":"59b25e3c2f9e3e23ccd83e414f7447c9fbccd408","modified":1710404522425},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"ac62b989b5550c756e1986fcc68f243170705383","modified":1704782361622},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1704782361623},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1704782361623},{"_id":"themes/butterfly/source/.DS_Store","hash":"8e85c1296386423db897569f4f8dc011bbc69bba","modified":1710423099583},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"ecec62305aaa596bb1dfbb46c13d06fb5a9628cf","modified":1704782361623},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"aca0ec7ef69b21d1f242c62fed389468a0f0e1a2","modified":1704782361623},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"7fa9ae4b70b87fc97e992dde5944681f92b59bea","modified":1704782361624},{"_id":"themes/butterfly/layout/includes/.DS_Store","hash":"8ff6e2f8fecb4562e890dddef53aac27516ab7dc","modified":1710404592666},{"_id":"themes/butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1704782361630},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"5351e0bc09e6b5b3f6d30f333a2520626a28ca3a","modified":1704782361630},{"_id":"themes/butterfly/scripts/events/init.js","hash":"428b94c7b9e83f7ea36227dee66bfe3c23aee4a8","modified":1704782361630},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"21fb5aabe043486d095c4c8cce361ed85ba88a26","modified":1704782361630},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"db275f7fbe4438b54cd813b695f4834e10aa234f","modified":1704782361625},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"4c85de4dea4dca4e5088097a79bd6d7009cbf8ef","modified":1704782361625},{"_id":"themes/butterfly/scripts/events/merge_config.js","hash":"2ac43fd4103ba3c6897da7c13015cb05f39fd695","modified":1704782361630},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"a8eef3f37428436554f58a2b6bac7c255fbdf38d","modified":1704782361631},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"860f967ecf3c6a6ea785b560a7aae4d0757cd18a","modified":1704782361631},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"e196a99733d7f90899bceed5d12488e8234817d5","modified":1704782361630},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"7caf549810f971c34196fb9deac2d992545bdff9","modified":1704782361631},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"96f861151e3b889ef0ffe78821d489ad2625ee43","modified":1704782361631},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"8ad9911b755cba13dde2cc055c3f857a6b0dd20e","modified":1704782361630},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"9f0e9e039f304439007460fa0a7c8ac18e0ffd37","modified":1704782361625},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1704782361631},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"d5c7e61257b08a9648404f6f48ce4d471cd5fa55","modified":1704782361631},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"e2a8a09bfe47da26eab242a36f516e6c452c799a","modified":1704782361631},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"93229d44b35b9da92e647b89d6d3087085974a29","modified":1704782361631},{"_id":"themes/butterfly/scripts/helpers/series.js","hash":"821e973d41f7b3b64cde91e0e836ea49c43e3c06","modified":1704782361631},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"ab62919fa567b95fbe14889517abda649991b1ee","modified":1704782361631},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"418684993a3a3a2ac534257a2d9ecbcead6808c1","modified":1704782361631},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"365db87ddfc582bf8c15cb440c48bed95106e4b1","modified":1704782361631},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"4677be4175da6800c0b3b8c1614e593f73df8831","modified":1704782361631},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"19773218877281ccffed921431e87148413a7c20","modified":1704782361631},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"5c2a07df5874b5377540884e4da14dd21489378f","modified":1704782361632},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"5cb273e95846874e3a58074074c501df23c5e912","modified":1704782361632},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"512c68a22ae4a58d6a6b24b368a0c00c2ccb4fcb","modified":1704782361631},{"_id":"themes/butterfly/scripts/tag/series.js","hash":"830b1d592278b9f676df0cf9a91b1eeda2456aec","modified":1704782361632},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"1acefc59ead75ebd8cafee36efc7da4fa426d088","modified":1704782361632},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"ffc62222f8d7b4d44c1c0726c8a08824a2201039","modified":1704782361632},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4526c75e5bf84609d67e92b6af3524bcb278e852","modified":1704782361632},{"_id":"themes/butterfly/source/css/index.styl","hash":"755490867fd8afe47d5cce24faea2ca172b0c4dd","modified":1704782361635},{"_id":"themes/butterfly/source/css/.DS_Store","hash":"9a414aeabd374bcfa5c97c355474f063933962c1","modified":1710404492347},{"_id":"themes/butterfly/source/css/var.styl","hash":"152b6bd4b6285165541a71f5a1c913f8ee6a602b","modified":1704782361635},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1704454120878},{"_id":"themes/butterfly/source/img/avatar.JPG","hash":"f56d498857dd606793ec359bf35509570e8cc7a4","modified":1659367556000},{"_id":"themes/butterfly/source/img/.DS_Store","hash":"59d1e5572cc4119e0aaa8fdb9dffcc6d6e76b4e6","modified":1704789104229},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1704454120878},{"_id":"themes/butterfly/source/img/lion.png","hash":"3726e4f477b1414f602a51a98de4e03e8e34aaa5","modified":1704510886804},{"_id":"themes/butterfly/source/img/stablediffusion2.png","hash":"c97ab633eb2ceba9d4485dd0e8e5a308261e57a5","modified":1704636062251},{"_id":"themes/butterfly/source/js/.DS_Store","hash":"8120f1bb9e70dd51428298c558a93892dc8b5b63","modified":1710404506725},{"_id":"themes/butterfly/source/img/stablediffusion1.png","hash":"6357ef01317c240b91ce5f3fc1924b78805bff64","modified":1704636019330},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"8aa8d799aedbfd811195b84a451bc4b6e2647c12","modified":1704782361623},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"f8d2e3f31468991a7f5171cbfdb157dfb86d3372","modified":1704782361636},{"_id":"themes/butterfly/source/js/main.js","hash":"0dac585446445e0c419b86eec5580bc9b0657dc6","modified":1704782361636},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"67e1c3b48e4ca7ee0b2c76d3ca7476b9883cf105","modified":1704782361623},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"7df90c8e432e33716517ab918b0a125bc284041b","modified":1704782361624},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1704782361624},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"5208fe1e75d97a05fd9bdd6cc53c59d8b741b94b","modified":1704782361624},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1704782361624},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"63fed4548367a3663cdbaffa1df48167b0a2397b","modified":1704782361624},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1704782361624},{"_id":"themes/butterfly/source/js/utils.js","hash":"8e6b48d294e7aeaba8ff6348c43b2271cf865547","modified":1704782361636},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"f61659aa457d1a2d1baa3a13157996cfac4d6609","modified":1704782361624},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"944d6e9dd50df3395f3a2c7ad9db667d50dea4ed","modified":1704782361624},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"9e8c5788602b29a527ef35fe8a20076a5fa969bd","modified":1704782361624},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"a5c7d362ae63474c1a4e3eb5cd09804b3684e984","modified":1704782361624},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1704782361624},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"5de9a82032cdad1db3b868b797460921cd775fc2","modified":1704782361624},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"131f344d68b4c241d6e03849b243ee792fcd3cea","modified":1704782361624},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"90554c2ca5ba946f4c02e1bc5fe2859cef1b1594","modified":1704782361625},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"6ab4e301c92586505d6cddce1b3ad23b7c79010d","modified":1704782361624},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"50d1b08367f709e5416140043933e79cd8d77559","modified":1704782361625},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1704782361625},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"f9ce83978b217a71a2eb8761dc14b09866faa3f4","modified":1704782361625},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1704782361625},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"9621991359e22b14049346f1cf87bdedc94edf5a","modified":1704782361625},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"a096ff8eb6b2a22395be881f827ff2a686ba5596","modified":1704782361625},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"5574804fdea5edf7fd52aad2caf030614d5e7f2f","modified":1704782361625},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"1d39670ee6225f85f5c53bf5c84f3fd6e19290e8","modified":1704782361627},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"c7cfade2b160380432c47eef4cd62273b6508c58","modified":1704782361625},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"ffb9ea15a2b54423cd4cd441e2d061b8233e9b58","modified":1704782361628},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"8044b9c18b34b019ffe26b7383e7e80356b5e4b5","modified":1704782361629},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"12e57491e94fa00d953bbda9db0b6d6169e2358c","modified":1704782361628},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"0f024e36b8116118233e10118714bde304e01e12","modified":1704782361628},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1704782361629},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"ae392459ad401a083ca51ee0b27526b3c1e1faed","modified":1704782361629},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1704782361629},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"03c6afabbf1ac729c7fb21c7ec06da0190b0fdc7","modified":1704782361629},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1704782361629},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1704782361629},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"e5aac7b28ed4123d75797263c64e74ac547945bc","modified":1704782361629},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"a658a274c5f7896ee5122725bee45548693bdd66","modified":1704782361629},{"_id":"themes/butterfly/layout/includes/widget/card_post_series.pug","hash":"bd5ad01277f8c6ddf8a3a29af1518e5fe6eed23f","modified":1704782361629},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"7834bf7c711e739fd33cfcd0b53d151013b3d449","modified":1704782361629},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1704782361629},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"eceb4420a64c720f0d2741e89d6229bbb3d87353","modified":1704782361629},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"f19694a42dbe28eda4b39a1696e8fbcd277bc76c","modified":1704782361632},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"66f7a8b0cebc05c575ec3cb70b08d6854029d87a","modified":1704782361630},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"c8ff6ddd5bfe1190b7b8056b68ce41114fd79dcb","modified":1704782361632},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"35ce167c5a275211bfc1fa3d49adfde5b404d98f","modified":1704782361630},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"4dcd468e4d11a0ac75406162678feffcd89fee00","modified":1704782361632},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1704782361633},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f9a5d3f1fc5ed0ed2ee4c1eaa58ed650d11ddebd","modified":1704782361633},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"134811b2d696f9ed2c0cd578f3886f1c60770c0a","modified":1704782361633},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"83a7a70eb0532ea9c4267939fe484af915fca01e","modified":1704782361633},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"029eebbdcb3c682780d1de629fa06858cbe9782b","modified":1704782361633},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"ac2aeee9926f75b2a0098efe1c114126987430f2","modified":1704782361633},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"fad650f88778b33a6358e38cf50dfafc0974d28f","modified":1704782361633},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"a2eb44fa5eaea1325319a2064439cf36d0f35a2f","modified":1704782361633},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"d6cf26ffb8a0343eda1cde65b6b73b0ddbe8fcfc","modified":1704782361633},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1704782361633},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"f845b9b4efdee750f70c023aab27432611f83059","modified":1704782361633},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"b7a6a585dbc38d177c9aba75df3a467415d0488a","modified":1704782361633},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"5556c9bf4f53a90cb9b4945cd76a8849bd67f3f3","modified":1704782361633},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"0db591a1f4ed5adcb8668a549bbee5c9d62682cf","modified":1704782361634},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1704782361634},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"e549d24ad81a7d93326a509ff8dcfcc58c80729e","modified":1704782361634},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"c9e98027f2dd730ce389c2047f62ebb748955fcf","modified":1704782361634},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1704782361634},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"98d755b686ee833e9da10afaa40c4ec2bd66c19a","modified":1704782361634},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"4e320e16d49bc18085045937681f7331a1e243ca","modified":1704782361634},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1704782361634},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"d4ebc41b5c855dd75f47de7345d62f85ce7cf073","modified":1704782361634},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"649a054e73278b6724bd4dd9b94724791ec5c928","modified":1704782361634},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"20a3134e1302b62bfc881f4ec43f398267111f22","modified":1704782361634},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"45f0c32bdea117540f6b14ebac6450d7142bd710","modified":1704782361634},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"5cddbb5f4eae695a26685e415d821b523e0f17bf","modified":1704782361635},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"fb9f78bfbb79579f1d752cb73fb6d25c8418e0fd","modified":1704782361633},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1704782361635},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"ce489ca2e249e2a3cf71584e20d84bdb022e3475","modified":1704782361635},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1704782361635},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"909bb5079b26b6ee68177919f522566503654058","modified":1704782361635},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"2d02e52b360f6e6cae47c293ae57ed78e2554663","modified":1704782361635},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"f071156d439556e7463ed4bc61ceee87170d5d08","modified":1704782361635},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1704782361635},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"108988d046da9a4716148df43b3975217c8ceaae","modified":1704782361636},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"66c59e193d794cdb02cca7bd1dc4aea5a19d7e84","modified":1704782361635},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"f7299f9fef5bf94bb58c8cd3be8ee660ad2f9cd4","modified":1704782361625},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"f58f1648d2d71311bafca4833f20b605bb5f18c8","modified":1704782361625},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"5f86add36eeffbed61d11f08972a13697b4d9437","modified":1704782361625},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"c5f7081ca29db8cc80f808dfc29e36d5fa22fd7e","modified":1704782361626},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"0344477a2cf38698318ead2681c63ac12f01586e","modified":1704782361626},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"56c028ba0ea8fac19f0125114d765dfc56ce2b48","modified":1704782361626},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"001e8be47854b891efe04013c240c38fed4185eb","modified":1704782361626},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"b2d274db84ef22fbd6d5ea8f4404821898934209","modified":1704782361626},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"3a5ccfc69bd8ccb4b8f3ce3502023f7914f2a022","modified":1704782361626},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"e1f60ebac53a3f596fd0a4769b4f9275c48c6542","modified":1704782361636},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"39427e107230a10790972349c9dd4c4f31d55eb7","modified":1704782361626},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"961589da3c0a532c4709a4a4ea96bd579257f766","modified":1704782361634},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"ddce8352b371a1fb426bdb6c33f587eb37a69647","modified":1704782361626},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"9b57a8e13de8fc51a5f550854e47164fd8ac1be8","modified":1704782361626},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"2fb098a7aa45010a8cd212dc0bd5308c6e7c63e3","modified":1704782361626},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"618e1b7f9204049b07beb9e1363c844a78a9ace3","modified":1704782361626},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"dd61eca6e9a45f63e09bdefba89fe285a81ba096","modified":1704782361626},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e39a9c37adf4cb15a2ba3b2cc65542ffea88650d","modified":1704782361626},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"62f16a602e57e5f7f7c5249dd37b42d436dc032a","modified":1704782361626},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"46aec6466959baec1c3d71a5dbc510fbeb00c91d","modified":1704782361627},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"0d378ee8a671982a46213a4bfb223b4f3409aea9","modified":1704782361627},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"3bc4c1b91568561f0491bdac65b75aa0bfd01f27","modified":1704782361626},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"a9709905593d960954e2dd572f09f48a6c2b1ef7","modified":1704782361627},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"63cea2b5c8f7b59f5919379d61a2bb2ce8ed7623","modified":1704782361627},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"00ed91c52939b9675b316137f854d13684c895a6","modified":1704782361627},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f15699abb8c7a255aabad0222ae53eee387c66a3","modified":1704782361627},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"1995a654ba7ad62775a0a6e2922209cd1a85f2e3","modified":1704782361627},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"46865e3f52096acb07d0212174b4e8751b123aea","modified":1704782361627},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"894bf60ff5170cf1e4f276a8cedaf8301bceb824","modified":1704782361627},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"9b70eea4b1ff083e2b8769493a5b5aea71a02318","modified":1704782361627},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"dfcbd9881be569ea420eff1a6b00e4f4dbe2138e","modified":1704782361627},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1704782361627},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"6b67982bb7a3713b5bffd6a23ba2810425c504d0","modified":1704782361627},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"fc072ac839401174b5d3cf9acd3b694246c23a55","modified":1704782361627},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"9a3617f5e90c4e4176aa2ee2e904c22466e9663b","modified":1704782361628},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"2609bc2656aaaa9b59e8d575e711776512a62192","modified":1704782361628},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"0f0b46d637a9a1b6ae35148923abecc80b866276","modified":1704782361628},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"4ec0642f2d5444acfab570a6f8c7868e7ff43fde","modified":1704782361628},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"de2c4d02b520dd49a0a59fc0f33295e5bbb2c624","modified":1704782361628},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"4104f96faa6040f111ebfb9a90eeb470857c3b86","modified":1704782361628},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"5c2bf7d7a4b9df3fb2794b0b32e96158f0de673f","modified":1704782361626},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"24804ab6da9727ed793655c1262fa3f1a9746f70","modified":1704782361628},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"9c3c109a12d2b6916e8b4965cca12f521510ead9","modified":1704782361628},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"1f9f51023e9e33081c2add2ca73643c0edc5e9d5","modified":1704782361628},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"a99a41334387ee9a46c6f8e8212331a29a10d159","modified":1704782361628},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"3335024ba91f55ccf3858571b7898f46881c455c","modified":1704782361628},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"3ba49cfe186e9ca05faf9f0d0113611ec47e9b38","modified":1704782361629},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"b928be14d1b47a9fadb1bcc5f5072a7328752d4b","modified":1704782361628},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"85c92f8a7e44d7cd1c86f089a05be438535e5362","modified":1704782361629},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"cf1fae641c927621a4df1be5ca4a853b9b526e23","modified":1704782361632},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"c7dd2b2ae9b23aa0a60fffd7df9e9f76ef52033e","modified":1704782361629},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1704782361632},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"25914321762e30aacc610bc4dfb9de3e1cb556a3","modified":1704782361633},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1704782361633},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"2d7b0b09678adba09481e3152e0b32962677f650","modified":1704782361627},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"5dc2e0bcae9a54bfb9bdcc82d02ae5a3cf1ca97d","modified":1704782361633},{"_id":"source/img/24050602.png","hash":"fdca6cd48fd00c26602d61badb74ad5e9cc6681f","modified":1714995345106},{"_id":"source/img/24071701.png","hash":"30b3d727ef0317e7361c6d10f3317dbfece4b3c5","modified":1721209863904},{"_id":"source/img/24072000.png","hash":"54d708a0b1a0f5aaac71f0a47b0335f6ecdca469","modified":1721473538124},{"_id":"source/img/cloudflare1.png","hash":"0e45cb07bd0ae15c0ae75ff3c84ca59d71acb28e","modified":1710079099535},{"_id":"source/img/cloudflare3.png","hash":"8abe3cd64f50d803b42f3aa7254cd0d1c881d969","modified":1710079403622},{"_id":"source/img/decision boundarylog.png","hash":"fb7043ba53bc53ee152324c9941771e6deb0c09f","modified":1706174047953},{"_id":"source/img/decisionboundaryline.png","hash":"5f9b2d873318ecb126c855c006cb4874611541e3","modified":1706172418026},{"_id":"source/img/linearmodel2.png","hash":"e028049a663fb114536bd560428968e5689ec777","modified":1706167463026},{"_id":"source/img/linearmodel1.png","hash":"86974f32e0f9ffd7f99d4fb4c35f6a8aafd029ed","modified":1706167240412},{"_id":"source/img/logistic1.png","hash":"1bf9177a049d9d0d5de3d38f9f55ffb9c5e1a5e0","modified":1706167745763},{"_id":"source/img/logistic2.png","hash":"3ab31e8bf6da02c859d3c8563e4e8b0e6593a478","modified":1706167772441},{"_id":"source/img/nomoney.png","hash":"a330d03684b9b50ada1f68442e1944c7c9820388","modified":1705227760095},{"_id":"source/img/brew源2.png","hash":"e927a86ada2d2e583097e8f2ce610bf56422df99","modified":1704635025111},{"_id":"source/img/brew源.png","hash":"40e72d888b82bfd8599597fa40685a56eb17b4f3","modified":1704634086019},{"_id":"source/img/x1.png","hash":"028aa220fe6d80e031d42f2991ff1c54a98ac1db","modified":1706519105692},{"_id":"source/img/x11.png","hash":"4f0ae549b7a7080f96e091bed87ff4b1da585bf7","modified":1706520460129},{"_id":"source/img/wechat.jpg","hash":"d97b9211fe6b7af9cb6bd1f38ebfaea153171241","modified":1704620186378},{"_id":"source/diy/widgets/2.js","hash":"ed3b5aa98afff5ec333d4c94246ccba08db56491","modified":1710912893221},{"_id":"themes/butterfly/source/img/brew源2.png","hash":"e927a86ada2d2e583097e8f2ce610bf56422df99","modified":1704635025111},{"_id":"themes/butterfly/source/img/divideMax.png","hash":"59676fcdf8be2a83fbc0905907ef8a196a32bcf1","modified":1705153454950},{"_id":"themes/butterfly/source/img/meannormalization.png","hash":"57644c0cfc3457837b05e9f01802d28b312cf1da","modified":1705153527671},{"_id":"themes/butterfly/source/img/origin.png","hash":"0c3988bbcfec6eace632b5a1e265ca0be59411ab","modified":1705153423710},{"_id":"themes/butterfly/source/img/brew源.png","hash":"40e72d888b82bfd8599597fa40685a56eb17b4f3","modified":1704634086019},{"_id":"themes/butterfly/source/img/nomoney.png","hash":"96c145d57c9d05dd614485b6c731339d3417f465","modified":1704620388201},{"_id":"themes/butterfly/source/img/wechat.jpg","hash":"d97b9211fe6b7af9cb6bd1f38ebfaea153171241","modified":1704620186378},{"_id":"themes/butterfly/source/img/Znormalization.png","hash":"65407b104e189e7d4c03216bd78389a7b922e515","modified":1705153571244},{"_id":"source/img/24050603.png","hash":"9635f6ce4d6eff6b87815364d62692c33a9c4908","modified":1714995355332},{"_id":"source/img/24050804.png","hash":"029c208dc71e7b5773bff70a600cb5a0f4233138","modified":1715171617113},{"_id":"source/img/24060502.png","hash":"07873fc1696c7fa0e1bcf731c8fdcdb27b4c6fc0","modified":1717590216219},{"_id":"source/img/alipay.jpg","hash":"2c777989d8e1e40542779ad9645916c04b9e509b","modified":1704620488985},{"_id":"source/img/cloudflareDNS.png","hash":"4826b31c3a080aaf1d1483c33a9f571615ef8177","modified":1710120879142},{"_id":"source/img/converge.png","hash":"c89ffa1913bb087a326876a2306b80089c8487fa","modified":1705227627705},{"_id":"source/img/x2.png","hash":"9823729b8dc3056e0c07150e0810ffe69a78be42","modified":1706519411053},{"_id":"source/img/x3.png","hash":"69d4ab117279aa1a7b4464bf8c00cbb5709f49b2","modified":1706519434556},{"_id":"source/img/x33.png","hash":"360fd576ba111a1dc0376604627ef0571f0b4d59","modified":1706520483784},{"_id":"source/img/x22.png","hash":"803218393636a5db16b86260824decf6c4ec1e56","modified":1706520473656},{"_id":"source/img/x4.png","hash":"ab38bb1da24b3c684b5014a0c300fd741794deda","modified":1706519459568},{"_id":"source/img/2404135.png","hash":"7ad6b994b05ee59c28ed58d48770264bde9801a7","modified":1712493995870},{"_id":"source/img/x44.png","hash":"39bccce5c024de85f26f7e9988092f996c52e3d0","modified":1706520495483},{"_id":"themes/butterfly/source/img/alipay.jpg","hash":"2c777989d8e1e40542779ad9645916c04b9e509b","modified":1704620488985},{"_id":"source/img/24050601.png","hash":"65e51d884a9c66cad05ec638c1513cabea1558c7","modified":1714994436842},{"_id":"source/img/24050604.png","hash":"cd2106dbb88154e1fcfd6fdc73bbf76936db40b0","modified":1714995331323},{"_id":"source/img/24050801.png","hash":"1728b18b5e9fcd56923b8fc6f0dc821af2a9d55e","modified":1715170807563},{"_id":"source/img/24050802.png","hash":"877647493d955f3530f6360011c06dc9a37efe73","modified":1715171167755},{"_id":"source/img/24050803.png","hash":"5a53a53c97412bcdd17303dc50c3b994904af0b2","modified":1715171369186},{"_id":"source/img/24053103.png","hash":"69161fb2d886f7088073bf60587d039dde489a07","modified":1717162305666},{"_id":"source/img/24060202.png","hash":"68f9a15ada10600f3aba53f052b3653609024adf","modified":1717330914943},{"_id":"source/img/24060207.png","hash":"5246d8a2dc831ca8626189eade5a2df28cce9164","modified":1717333028168},{"_id":"source/img/24060304.png","hash":"765c6347c023bb4000be8ae5f64208df4587332c","modified":1717420995800},{"_id":"source/img/24060306.png","hash":"bd6aa83b40688f05c87b2bc2fe5b0accfe5eb6b1","modified":1717422573463},{"_id":"source/img/24060501.png","hash":"279167f8c7b261169dfbbb63659243e43ef0196a","modified":1717590133658},{"_id":"source/img/24060406.png","hash":"075f3d2767e60bd532adfd41464e2cb1464fef2f","modified":1717507046383},{"_id":"source/img/24060407.png","hash":"85742fea7a92db630b6ed947228b61b2f3d6791a","modified":1717507197373},{"_id":"source/img/24060300.png","hash":"2e941d07c011cff86345e4c9c50f5dabac699917","modified":1717416302391},{"_id":"source/img/cloudflare2.png","hash":"fee18cbb2cd510c20021ea7002e1c48e9ea0ffa9","modified":1710079258271},{"_id":"source/img/googleSearch.png","hash":"290bd18bfbf806cbe7c439ce902ac48ab8520005","modified":1710423070862},{"_id":"source/img/学习率.png","hash":"50b3164413ae72fb777f804a8c07bafa2caed1c4","modified":1705227645743},{"_id":"source/img/2404134.png","hash":"2231b3546e309a1976d0c8dc61d94bcd8a64cda1","modified":1712493917533},{"_id":"source/img/24050701.png","hash":"d1e41ae590681e7106cb5bbc9a87d452c1bc0c39","modified":1715083381852},{"_id":"source/img/24050706.png","hash":"b1097b5a0f3a5250dfb946268de8705374f92ded","modified":1715087121599},{"_id":"source/img/24050808.png","hash":"a10f6377e7d234c9c6f5c762149942b5db221aa9","modified":1715174648290},{"_id":"source/img/24050902.png","hash":"823d374e272784d2a9836e22e9bf8dbd0438f47a","modified":1715260954158},{"_id":"source/img/24051707.png","hash":"f1567ce3c170b2c69f974dbb0b6badfc0cd79121","modified":1715951231660},{"_id":"source/img/24052806.png","hash":"c73101adefd61c3ecc47ce69b3fb72813b517328","modified":1716903607091},{"_id":"source/img/24060201.png","hash":"4af7d8ee34d0cbdb5ba5154fab72bb8b3510dc76","modified":1717330693015},{"_id":"source/img/24060203.png","hash":"7fce9166a93274e12d4df75db45e519bf997bf89","modified":1717331207229},{"_id":"source/img/costfunvs.png","hash":"cb89a95c5023fe4ef83a96bf5ee66c6314ed63b8","modified":1706175317989},{"_id":"source/img/gradientdescent1.png","hash":"ad3d67ff9de1d622af0274029001405e1e456d93","modified":1705227517404},{"_id":"source/img/2404133.png","hash":"c1b2ecef86ea092702ddd5c7f546a38a8d63fe1c","modified":1712407752037},{"_id":"source/img/24042501.png","hash":"73c5957ee49384cb15e6f70383c6bd68d5002cc1","modified":1714045979567},{"_id":"source/img/24042505.png","hash":"9a8245d68c4f4574f06e5e89ad39cfdf6e22bab8","modified":1714049763102},{"_id":"source/img/24050606.png","hash":"b74461c8c5d0b4b4550441ff25d7e1ac40c09159","modified":1714996961236},{"_id":"source/img/24050610.png","hash":"e5389efbb03e4b8f9dd633feed4aae10d701a032","modified":1715000720038},{"_id":"source/img/24050615.png","hash":"9efc5d5e8b30c64ed59ffdde500803e115f88e54","modified":1715003858648},{"_id":"source/img/24050703.png","hash":"07cadd4bb61afff3e8d72fe9cd57702151ff6e70","modified":1715085130353},{"_id":"source/img/24050708.png","hash":"9876d7196edc3dff629fdd15239d85cf3a70c676","modified":1715088526481},{"_id":"source/img/24050900.png","hash":"31be3190703c1fc8e96261d6f7a5214d800c7b1a","modified":1715260048116},{"_id":"source/img/24051202.png","hash":"85addcca9493ab4fe51b9176220e6d977766b157","modified":1715520894968},{"_id":"source/img/24051301.png","hash":"ae91752d7aecf3be365627bda58e9320c54e2083","modified":1715604393769},{"_id":"source/img/24051804.png","hash":"e11185efd350a6e5a226b17f28e249f97f05e7f8","modified":1716031406932},{"_id":"source/img/24053104.png","hash":"11f49d46725ba63d132bd1a09651a1d0a0d9c515","modified":1717162590436},{"_id":"source/img/24060204.png","hash":"acd2d27d88ad655526eb3ba7cee2270f370d6685","modified":1717331687343},{"_id":"source/img/24060302.png","hash":"ccf9bc7e445abd44fcad03bdcec3ad6e20038935","modified":1717419526903},{"_id":"source/img/24060301.png","hash":"1f9020db047aad3e5c022fc419ec0f139039b3bd","modified":1717417038171},{"_id":"source/img/24060212.png","hash":"365e66ace90960690cf5d3fd8e5dc675e3cf6d7d","modified":1717335120013},{"_id":"source/img/24060402.png","hash":"3f7b0e5d3224547c4b5c850a3eac99fef6b89536","modified":1717505033891},{"_id":"source/img/24060500.png","hash":"37f2fa94c7d0e7a91f4e57c5f2c31d166f68309d","modified":1717589471988},{"_id":"source/img/24060503.png","hash":"0d03812251dcb99bc53c8b78c8930836bb8e7879","modified":1717591376431},{"_id":"source/img/24060600.png","hash":"b1230a41c53daa8ac3609c029198010564bc2b64","modified":1717677094911},{"_id":"source/img/24060210.png","hash":"948ece046b07f72a2e7a6f699ea8f8c046babad4","modified":1717334406646},{"_id":"source/img/24060602.png","hash":"242884c192c8f855ae80f504f9c9a601f5f023d2","modified":1717678050988},{"_id":"source/img/hxjtheta.png","hash":"0bcd60950729d534968f7f332ed94432bbf15070","modified":1704717412910},{"_id":"source/img/namesilo.png","hash":"96f8a55ee78735f46e63bc5464dc36ff563c9e44","modified":1710078543937},{"_id":"source/img/gradientdescent2.png","hash":"417f04ea9274be928a7488ac8f9fd03cad4756d8","modified":1705227528092},{"_id":"source/img/2404138.png","hash":"5d602b9632fe245fa208d6ddac0da00d7823a1e2","modified":1712567115011},{"_id":"source/img/24042402.png","hash":"699896911923f99355ec2487236b25b7ba088b3b","modified":1713963344703},{"_id":"source/img/24042401.png","hash":"3bffe65213532716c11f512c9044b049421fb4d9","modified":1713962646342},{"_id":"source/img/24042404.png","hash":"cda526ab7200b448c317e9936607aeea248ff837","modified":1713963934884},{"_id":"source/img/24043002.png","hash":"637d0d70d627b125c4c483cb175ad39b64096085","modified":1714476209333},{"_id":"source/img/24050608.png","hash":"79e9c99ac228175394e13a903c714693f0f19bd5","modified":1714999484848},{"_id":"source/img/24050611.png","hash":"357e26104be81b66701538e84bad4a398b327294","modified":1715001046561},{"_id":"source/img/24050614.png","hash":"01cbc52c04438869038ee9ec323c7799150166f4","modified":1715003815814},{"_id":"source/img/24050702.png","hash":"403e4629879149db2c05b3abd603a333f24d091d","modified":1715084371367},{"_id":"source/img/24050705.png","hash":"08040c4a0000cbe6ae83eb3667fecbcd3052ac8d","modified":1715086605171},{"_id":"source/img/24050807.png","hash":"05220b16aec3889588fbb5fafc9e33aba879b6ee","modified":1715174313036},{"_id":"source/img/24050901.png","hash":"13d4f6b87e51b77330276b37df80ba17f86d55a9","modified":1715260472550},{"_id":"source/img/24051201.png","hash":"7543947a67686e8141563594d84061f34d5836fc","modified":1715520628463},{"_id":"source/img/24051200.png","hash":"fe3ef1e3d8f2d222851391cb9ac2704bb1d78635","modified":1715520071956},{"_id":"source/img/24051402.png","hash":"c4b17ad40652e07a09a006678b67d643d917f7bd","modified":1715691742225},{"_id":"source/img/24051304.png","hash":"53f92e50979ca71347d2d31c47a181da62e38bb0","modified":1715608381249},{"_id":"source/img/24051404.png","hash":"06d812b239c95cb0efad3bb807edc2f5be60aace","modified":1715694536769},{"_id":"source/img/24051502.png","hash":"b6c1f7f594f79a1ac8c5c1b882cf7464bd213870","modified":1715780418221},{"_id":"source/img/24051501.png","hash":"4c1ed9530210b9315f8da1a5a8292ef199f677a9","modified":1715779917846},{"_id":"source/img/24051703.png","hash":"ecd3ed0fc066f3e677ed42fc695daa56a25e5a0e","modified":1715947122440},{"_id":"source/img/24051805.png","hash":"59d85e9668e6fb6b1f8d1ee913c0ecdd0c09c977","modified":1716031746155},{"_id":"source/img/24052800.png","hash":"19eb87a7998338318e9adbe9e886356d1b5ca634","modified":1716887999084},{"_id":"source/img/24052803.png","hash":"3ce77fcceabd9a59fde266af8d55b101c0187e4f","modified":1716896576758},{"_id":"source/img/24060200.png","hash":"e8a73812cbc031f3917cae0dbbea2c8daffb9521","modified":1717330464460},{"_id":"source/img/24060211.png","hash":"29a7c20e86af3bd0f3e3b0a6457aea068e64236d","modified":1717334788040},{"_id":"source/img/24060209.png","hash":"ad0bd02e1b7cca25e743445e00f5fd6d10c61244","modified":1717333970339},{"_id":"source/img/24060206.png","hash":"6aaff08edeec7b5734b602ef7fab5d153a6e2773","modified":1717332834255},{"_id":"source/img/24060305.png","hash":"4a3bdefae33ee33e4c92462bd339c8698c07a439","modified":1717422147554},{"_id":"source/img/24060303.png","hash":"e1e60a1405e96c52589e318c04873f06a8e08357","modified":1717420203689},{"_id":"source/img/24060401.png","hash":"7ea69cbd0c5d250498a47d6b41f7bb8ac32c8d74","modified":1717503910072},{"_id":"source/img/24060405.png","hash":"79cc101ff2c53712643f8b824f190feb7bc76f01","modified":1717506160431},{"_id":"source/img/24060505.png","hash":"59ec2fd23bfa8eecd12c49c0b4cef4ea960782df","modified":1717593314623},{"_id":"source/img/24060506.png","hash":"23a237bfa7ed63dd0fc1b5541fdd2dcfae897e0a","modified":1717593956089},{"_id":"source/img/24060601.png","hash":"83e9cffe801d45a06d8bf5cd852830f5fef4ab9e","modified":1717677576161},{"_id":"source/img/gradientdescent.gif","hash":"a9b22084b8a376869693df15ed6448256a4faabe","modified":1704772623126},{"_id":"source/img/neuralNetwork.png","hash":"cc91972b29b36973bb3ee5c63d0a5193b7d38a95","modified":1711887436095},{"_id":"source/img/2404136.png","hash":"22e6db3b25bda2912f2352f8512cf6b0f0ad9af1","modified":1712495767062},{"_id":"source/img/24042406.png","hash":"49d142002f498a534171d7ab483f12d553f37633","modified":1713966385497},{"_id":"source/img/24042408.png","hash":"a60c47a0c6c12b800f2254e250c818a19f4fe5b4","modified":1713966754210},{"_id":"source/img/24043005.png","hash":"70dba8bf972a7c5b7e837c3204137ec5653a6977","modified":1714482987397},{"_id":"source/img/24050600.png","hash":"8f73a47d627a6aa27519fe5aca4fcea21778a3f8","modified":1715002131985},{"_id":"source/img/24050612.png","hash":"2a8046267c2e907bf9986789b2205694b54df306","modified":1715002411221},{"_id":"source/img/24050609.png","hash":"b1c5773a9cdd228919e7f10a559cafb2f5c7bca5","modified":1715000336460},{"_id":"source/img/24050613.png","hash":"faa67e95b3e5bf94e48b6a890840f53ffbc75079","modified":1715002647640},{"_id":"source/img/24050707.png","hash":"5ff10afd5190b80e1923d7340b8828ff33167b63","modified":1715087992337},{"_id":"source/img/24050806.png","hash":"ceb9076a65bd92fd7d006961da32bd7fa484d223","modified":1715173244275},{"_id":"source/img/24050805.png","hash":"e1de2f10f5671855acc10b7f70ffb3f27321ab7c","modified":1715172827960},{"_id":"source/img/24050809.png","hash":"fa2a217fcaf7465d2ea2daee651ccdabc8e5f517","modified":1715175676101},{"_id":"source/img/24051300.png","hash":"4ea9942c9dda676d5e5e887ac1db9bf8ac4ab2c0","modified":1715604199564},{"_id":"source/img/24050903.png","hash":"c65edd538e3b3cab9319ea2865311b03a64e9711","modified":1715262028256},{"_id":"source/img/24051700.png","hash":"63d6e5888b26abb4bd766db92a97de10636e4433","modified":1715945649426},{"_id":"source/img/24051500.png","hash":"217a40ea0dae7a6180e02bff72e8e22c3e4404ed","modified":1715779277678},{"_id":"source/img/24051702.png","hash":"d2c3caa8038d49ccd9ca13201947cbce746a45c4","modified":1715946702940},{"_id":"source/img/24051705.png","hash":"cbf77c3a735969f9cad27526de152e66ad7dfd24","modified":1715948510902},{"_id":"source/img/24051800.png","hash":"24a2271bda0b95e30a3d60fb346869507721bf96","modified":1716018574608},{"_id":"source/img/24052801.png","hash":"e8a6e5ec1ee72bf2627b18a8e0118d60401719e2","modified":1716888831384},{"_id":"source/img/24052802.png","hash":"144d609e5f0c811389e9f572051ee89734ccbb48","modified":1716896168212},{"_id":"source/img/24053102.png","hash":"8ce17e275afa47eff1051ccdd31a5691cb04beb5","modified":1717162086147},{"_id":"source/img/24060208.png","hash":"65b5fa043a533070dd697428da3a0899d377365d","modified":1717333252492},{"_id":"source/img/24060403.png","hash":"23b7276deb0406fede04fad24bd5b2d906d21758","modified":1717505395643},{"_id":"source/img/2404141.png","hash":"29455db9f66ac771e03e3da0185e393267338d2b","modified":1713082472471},{"_id":"source/img/24042403.png","hash":"e3378a71db5ffa249e024fe8457a8eb34ee4d35c","modified":1713963723245},{"_id":"source/img/2404152.png","hash":"eaca04cbe0b3ced4b7268c72198870693c5335ef","modified":1713166940686},{"_id":"source/img/24042502.png","hash":"2ede8f16f6b68021592baffd276b7f5a6eb49c62","modified":1714046863228},{"_id":"source/img/24042503.png","hash":"8eec5b6dc8254e1fdcdc19d0c065b9d02c7056ca","modified":1714049266255},{"_id":"source/img/24042802.png","hash":"3f29af6da4350c981471a5f14f052ee6add7d5c5","modified":1714311845166},{"_id":"source/img/24050607.png","hash":"3d6557e8d861b4b234d6c60b359f454bade5cf38","modified":1714997947793},{"_id":"source/img/24050704.png","hash":"21d60b5c8eb692828d8812d7858f02ead61b7f60","modified":1715085759640},{"_id":"source/img/24050709.png","hash":"f4f8c7f54b49f7983b0c0d2187cabbe639f46e16","modified":1715089350043},{"_id":"source/img/24051302.png","hash":"dff30f30e967271876d93c5f7997446892a7194f","modified":1715605549735},{"_id":"source/img/24051303.png","hash":"706889ca150d6ca46b953a17fd41006b5f194104","modified":1715606428089},{"_id":"source/img/24051401.png","hash":"fe616385e1e76b7c617df8f57d972abef9ede0b0","modified":1715691536951},{"_id":"source/img/24051305.png","hash":"fb582a748c29a39d0d5902ab6c90afb7721c8a66","modified":1715607986677},{"_id":"source/img/24051400.png","hash":"7b0cac23b8c374bcb4181afb4d44c4bc2e679c6a","modified":1715690524098},{"_id":"source/img/24051708.png","hash":"63ff04ebcead8e338718c35817e3a55aa09028a1","modified":1715951463265},{"_id":"source/img/24053100.png","hash":"e55c2c1d9d876aa7c4e0fe96c430fcfbc92a00c3","modified":1717161173419},{"_id":"source/img/24060205.png","hash":"e84ffcce65cf84ac528dc477bc096f319427b403","modified":1717332030702},{"_id":"source/img/24060400.png","hash":"dd54e68136fa2ac815dc1066b6e2f0a4a034ecc7","modified":1717501542522},{"_id":"source/img/24060404.png","hash":"5fa5ba855e5b296cc57dd55f987eb383220b6e93","modified":1717505911616},{"_id":"source/img/24041310.png","hash":"6a3a78c48efb85e91d80fa44de05e58d862973ad","modified":1712497395109},{"_id":"source/img/2404139.png","hash":"ba7f0f15b5663113b84052087f453096ec9a38f0","modified":1712583428841},{"_id":"source/img/24042405.png","hash":"5506390a05692a1de3624ceb866324025a1e5bec","modified":1713965023498},{"_id":"source/img/24042504.png","hash":"82e97a06efe29fac0325dd11bbd84ff4b504b4e3","modified":1714049519967},{"_id":"source/img/24043003.png","hash":"a79ca72fc9a0039c47f03bca4a883bd1c757a3e5","modified":1714479928407},{"_id":"source/img/24043001.png","hash":"69f51c3587ae1352924369b01491164a4f860b6a","modified":1714475757817},{"_id":"source/img/24050605.png","hash":"fd4c3e4ec4deb05faec76b5594abe4a24635b758","modified":1714996021767},{"_id":"source/img/24051701.png","hash":"e1f9616f85eb857ec790eff032b857a9013fe894","modified":1715946238778},{"_id":"source/img/24053101.png","hash":"202ee1b756e08c0e6faf069793ee6d2f780b40d3","modified":1717161709716},{"_id":"source/img/24060504.png","hash":"f64aa2e0d47b9ad578967fae5eb3792f6a992d2e","modified":1717592429563},{"_id":"source/img/24042407.png","hash":"5719d11a8578197fd93f9e23f4833a1255886f00","modified":1713966602901},{"_id":"source/img/24042506.png","hash":"f814e24acbc9bcfac71169a322e7875b14bb0f51","modified":1714050823167},{"_id":"source/img/24042801.png","hash":"13283f7514ad074a24a7f429b1a92adaf2966fb1","modified":1714311678495},{"_id":"source/img/24042803.png","hash":"f62b508d5032106649694ec0d256daa84906552a","modified":1714312072742},{"_id":"source/img/24043004.png","hash":"d92d4f6fd8d418a159e049839d32826c30fb9c4d","modified":1714481052130},{"_id":"source/img/24051403.png","hash":"79f51283cb5d2da5cf5ab07509093dcc3ed8c371","modified":1715693937294},{"_id":"source/img/24051706.png","hash":"3129a2f3fd3b4ceae312decd6b52b5ac47e5a62f","modified":1715948764209},{"_id":"source/img/24051803.png","hash":"ec26158a7e0d9635df96c034857acbdd9d64ac02","modified":1716026148440},{"_id":"source/img/2404137.png","hash":"641546eb352c493cdc1aa8eee0dc08e99b47c8a7","modified":1712566187851},{"_id":"source/img/24042507.png","hash":"24340ed92398deebf5da37242577addde3093058","modified":1714051984868},{"_id":"source/img/24042508.png","hash":"74601d3660728476faee0fa8e02b1f64d66d3e8f","modified":1714053143946},{"_id":"source/img/face1.png","hash":"b957b15a635bc27b02479ebb7b03086029d22e46","modified":1711893178961},{"_id":"source/img/face2.png","hash":"1c0bf22380da13e8b40671331ae9382e3349c3ea","modified":1711893063747},{"_id":"source/img/24051704.png","hash":"b6726fd1060e174c75132c94309187ea65211ec5","modified":1715948081691},{"_id":"source/img/cloud.png","hash":"7a85885cd9dd960d210a1ea65384434be2553b7f","modified":1685184326951},{"_id":"themes/butterfly/source/img/cloud.png","hash":"7a85885cd9dd960d210a1ea65384434be2553b7f","modified":1685184326951},{"_id":"source/img/24050800.png","hash":"8d69f15441d3f783a2f547160572780d8c1cebef","modified":1715170150825},{"_id":"source/img/24052805.png","hash":"57659e7cb8887643e945de19ba0759238b7fee57","modified":1716897899380},{"_id":"source/img/googlenews.png","hash":"9d72b302f0adf833db3c4f7cbd549c87ef15a1fa","modified":1704709209727},{"_id":"themes/butterfly/source/img/googlenews.png","hash":"9d72b302f0adf833db3c4f7cbd549c87ef15a1fa","modified":1704709209727},{"_id":"source/img/24051801.png","hash":"bf6dce4ad8542ecfb1eb45c8df069eceac7450b0","modified":1716019563634},{"_id":"source/img/24052804.png","hash":"7414854a2cd8ef17492538a1dbad5afdcc777304","modified":1716897857983},{"_id":"source/img/wallpaper.jpg","hash":"84cb19871e93a34d2cdf674a9ae39dfb17851eed","modified":1685180796794},{"_id":"themes/butterfly/source/img/wallpaper.jpg","hash":"84cb19871e93a34d2cdf674a9ae39dfb17851eed","modified":1685180796794},{"_id":"source/img/24051802.png","hash":"f2ab47e4d269ed7f3fae00978fae6cfb1435e0da","modified":1716025858218},{"_id":"source/diy/file/Cpp.pdf","hash":"1cd52df677dd36c438c219752fb540677adec364","modified":1550019932000},{"_id":"source/diy/music/djyqxyy.mp3","hash":"91f04aedfcba8008349d366e2485bd7eb151e830","modified":1711615991868},{"_id":"source/font/fzkt.ttf","hash":"8e153ec0f6ccb6ea99f4e6e1e54747e9fe094d0a","modified":1497929880000},{"_id":"source/img/2404132.gif","hash":"145a5b482af3ec6556558fbb3f2709b3db685153","modified":1704874349516},{"_id":"source/diy/eng/241226/241226.mp4","hash":"b1c8122aadd15994b6e854942629ff8ae3554744","modified":1735222902268},{"_id":"public/css/custom-font.css","hash":"359933ee1a58e7af641dea84a747286c25522294","modified":1735224885981},{"_id":"public/search.xml","hash":"869b032c0bf2d788c25651f18da82d268c046b8d","modified":1735224885981},{"_id":"public/sitemap.xml","hash":"862b85470698dc585b470a7855cd2201063bec9c","modified":1735224885981},{"_id":"public/404.html","hash":"76e1f0069bf096d5f5f68539489d30cc1358b271","modified":1735224885981},{"_id":"public/about/index.html","hash":"10ccfabe5c6c570bf1793201089f8ede09d8e427","modified":1735224885981},{"_id":"public/tags/index.html","hash":"404a23efb2afb7d98a4be6a4e945740abe598a0b","modified":1735224885981},{"_id":"public/categories/index.html","hash":"368748d4ec13027bce1b82db5e8731a38a9bd283","modified":1735224885981},{"_id":"public/posts/68f29f36.html","hash":"30011c63b42d96611314bfd902893b2bf5129799","modified":1735224885981},{"_id":"public/posts/366bea49.html","hash":"bc4eeaca58d44918e45b924df9f4e764e236057c","modified":1735224885981},{"_id":"public/posts/4ded3bd7.html","hash":"c263baed65068b0314c799b56227985360aeb275","modified":1735224885981},{"_id":"public/posts/8c515e71.html","hash":"9ea7096aeb1002e826c2c40c6cd1950e692ecb48","modified":1735224885981},{"_id":"public/posts/1ca572.html","hash":"3f495ac68ef506e065b87f699eb47985a386858d","modified":1735224885981},{"_id":"public/posts/9915f4c8.html","hash":"906e80edd6b42d24bd728ba766d9e4bb552d7307","modified":1735224885981},{"_id":"public/posts/77d93877.html","hash":"e55a52c26cad8ff89b72badea050f11dbec8e271","modified":1735224885981},{"_id":"public/posts/f910d0be.html","hash":"9c947d314a32edb812b5b08f05f94eab7ffe2e2d","modified":1735224885981},{"_id":"public/posts/acf03113.html","hash":"6a527bfd17cbd78946fe778d01528714c4b36298","modified":1735224885981},{"_id":"public/posts/2e5955c9.html","hash":"3f85f08570f3a39e95a19c8a9dedd16d640922e5","modified":1735224885981},{"_id":"public/posts/89c9b15c.html","hash":"e84b166ce2a79616aa8010726b89be69f833e628","modified":1735224885981},{"_id":"public/posts/9138967b.html","hash":"0dbbf818afc227fc185c102ae0fb62dfb8f44c15","modified":1735224885981},{"_id":"public/posts/694b06f0.html","hash":"b6bb365cb36888c3b132664efe7e2d6450923ba4","modified":1735224885981},{"_id":"public/posts/813976ae.html","hash":"b26db48d4923074d448f98cd6259d5c942f66a61","modified":1735224885981},{"_id":"public/posts/e2acb477.html","hash":"d0639c9df8c47d191660bf430c93579b4686998f","modified":1735224885981},{"_id":"public/posts/a0829425.html","hash":"7b49389af75b3dfcd2e72e1a68b3364e682330fd","modified":1735224885981},{"_id":"public/posts/bb3a64f2.html","hash":"4d9f068d6b996704e360e3f97a9e45f0e924cd49","modified":1735224885981},{"_id":"public/archives/index.html","hash":"19dbc24a1b6d054314e87e28f3a04cf0d58567e3","modified":1735224885981},{"_id":"public/archives/page/2/index.html","hash":"d537a48da6431ce18504cfb28752362a0b65e1ed","modified":1735224885981},{"_id":"public/archives/2024/index.html","hash":"984e731fe01c7f9e9fd6e3b820c2c32cf1cb858e","modified":1735224885981},{"_id":"public/archives/2024/page/2/index.html","hash":"714853f0b16549cd8fb009d8380ebaaad6ec24d9","modified":1735224885981},{"_id":"public/archives/2024/01/index.html","hash":"3a53de3370d3b1a20b627d9ca15146786cd54143","modified":1735224885981},{"_id":"public/archives/2024/01/page/2/index.html","hash":"b53d945d160bda04aaffa16008c3316e298b797e","modified":1735224885981},{"_id":"public/archives/2024/02/index.html","hash":"f2d92bd960c717088a508fb4ce65b79881528cfe","modified":1735224885981},{"_id":"public/archives/2024/03/index.html","hash":"9d67fa6d0ee6b764f5713bfe5c4a35d5e9068a8d","modified":1735224885981},{"_id":"public/archives/2024/06/index.html","hash":"cc109fd2f516a6f7c24637a3830ffd23f2cab5ec","modified":1735224885981},{"_id":"public/archives/2024/07/index.html","hash":"6e8d419c5f0db3bbfb64226ec3a964e39db83f56","modified":1735224885981},{"_id":"public/index.html","hash":"ab06267e17451f267230ab9c2a751e47cb9aa11c","modified":1735224885981},{"_id":"public/page/2/index.html","hash":"c421d339d81482b8caf824a033e86f2590e4a944","modified":1735224885981},{"_id":"public/categories/想起来就写的diary/index.html","hash":"0c88a43e0b6d2f7cac5616391a45a6ab1daa501a","modified":1735224885981},{"_id":"public/categories/DIY/index.html","hash":"5690cccb87a0aab485a3cdd797e93ca34f5fe538","modified":1735224885981},{"_id":"public/categories/shortcut/index.html","hash":"94334256f4296cc81179822d77a9006c045eccb7","modified":1735224885981},{"_id":"public/categories/STL/index.html","hash":"a50f38cf4a8c767a16c016efbb21b2b82e145e67","modified":1735224885981},{"_id":"public/categories/Machine-Learning/index.html","hash":"2f16bb2934862ff6d0b382cdeb7eea68f0f8d11d","modified":1735224885981},{"_id":"public/categories/tools/index.html","hash":"a27d2a77de078581566dc984693af56a4538568e","modified":1735224885981},{"_id":"public/categories/python/index.html","hash":"5a26e4688871bebc6f6e3a5363bb3cb02f64999e","modified":1735224885981},{"_id":"public/tags/diary/index.html","hash":"5fff018d60f3c0e74d6c088e01e9d892b083e153","modified":1735224885981},{"_id":"public/tags/hexo/index.html","hash":"3660bfe6aaa4e7fcd0b3e6cb3cfc64142ccdb153","modified":1735224885981},{"_id":"public/tags/GitHub/index.html","hash":"b41706c1e3d0e8c56c994e44eef269997db607c6","modified":1735224885981},{"_id":"public/tags/博客搭建/index.html","hash":"cfe7e071ddafeab1132f90b1ccf340e2b15258d4","modified":1735224885981},{"_id":"public/tags/shortcut/index.html","hash":"c20861ca036057e122b46b2ad9b7e54ce26cbfab","modified":1735224885981},{"_id":"public/tags/STL/index.html","hash":"14a71027f7f4d2fc59352f2db53f065c6c286e93","modified":1735224885981},{"_id":"public/tags/C/index.html","hash":"7774a46b390b06e0237faf8082bdcd1cd6029317","modified":1735224885981},{"_id":"public/tags/algorithm/index.html","hash":"e15ffcec0cb11f79cc03ffb67583949266795d66","modified":1735224885981},{"_id":"public/tags/macos/index.html","hash":"a05dd9492de80bdc4448212b575bac9bd08537ea","modified":1735224885981},{"_id":"public/tags/AI/index.html","hash":"27b241ca4cf8c179c676bfd0e52b3927c2eb5754","modified":1735224885981},{"_id":"public/tags/homebrew/index.html","hash":"e85bcd6746f7f3c3634a5b4884e5be9fa26b3d46","modified":1735224885981},{"_id":"public/tags/machine-learning/index.html","hash":"dd8a6acd659043ca1986f29b4e6fcd9b34b2f79b","modified":1735224885981},{"_id":"public/tags/python/index.html","hash":"eddb9850bee28e2e0f4f44d41948bc129eab7722","modified":1735224885981},{"_id":"public/img/Znormalization.png","hash":"b7ef3c701912e7fa40f10a09ce881ca70d27f7c2","modified":1735224885981},{"_id":"public/img/avatar.JPG","hash":"f56d498857dd606793ec359bf35509570e8cc7a4","modified":1735224885981},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1735224885981},{"_id":"public/img/divideMax.png","hash":"47a495df2bc40ed63dcb563a9f4bd5419e833c6a","modified":1735224885981},{"_id":"public/img/lion.png","hash":"3726e4f477b1414f602a51a98de4e03e8e34aaa5","modified":1735224885981},{"_id":"public/img/meannormalization.png","hash":"8f5ad37f65b646a7e982bdba3c3f2dd4e9c28fdf","modified":1735224885981},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1735224885981},{"_id":"public/img/stablediffusion2.png","hash":"c97ab633eb2ceba9d4485dd0e8e5a308261e57a5","modified":1735224885981},{"_id":"public/img/origin.png","hash":"d80b40ab5da3cee102865ed59059bbeb707d85ed","modified":1735224885981},{"_id":"public/CNAME","hash":"d40b0837e60076074450aa37f69cf8dbedb9aa06","modified":1735224885981},{"_id":"public/img/stablediffusion1.png","hash":"6357ef01317c240b91ce5f3fc1924b78805bff64","modified":1735224885981},{"_id":"public/img/2404131.PNG","hash":"c3d21f6ca3945e22a5c9a24b038d07ecc952d30b","modified":1735224885981},{"_id":"public/img/2404151.png","hash":"9cb632391f7595455ac4a2071d303414fd166926","modified":1735224885981},{"_id":"public/img/24071703.png","hash":"722178b2381c3475ad8cd8445225e5ab7e0950d2","modified":1735224885981},{"_id":"public/img/24071702.png","hash":"2fbd46bb583dd73c7f2305b3f970228df8bc26d1","modified":1735224885981},{"_id":"public/img/24071704.png","hash":"5655508e4d7960e47f0ed6f1843d8f1609f65fd5","modified":1735224885981},{"_id":"public/img/costfun.png","hash":"4533c3b3347d9c71d797a92d3af0ae94276c980d","modified":1735224885981},{"_id":"public/img/loss0.png","hash":"0d8f15a6be97f138a7dccbc40b77fbe54e00ef9f","modified":1735224885981},{"_id":"public/img/namesilo2.png","hash":"dd130994f54ed12f29186fa3a82985688de4e674","modified":1735224885981},{"_id":"public/img/loss1.png","hash":"ab8e2d8bb3e574dd271687b4c522ce01b06c3cb0","modified":1735224885981},{"_id":"public/img/polyregression.png","hash":"408274536ba82a94743e06ad8dd8a900edc3aaa4","modified":1735224885981},{"_id":"public/img/sigomid.png","hash":"02191b231b2b2589089393d8e8fb2c89f52d13df","modified":1735224885981},{"_id":"public/diy/widgets/progress.html","hash":"169820b792a8628dfb9ee5b97098498ca2405a59","modified":1735224885981},{"_id":"public/diy/privacy/CPRA.html","hash":"5d05a0671653848d66d4306fc8f0db6acc06fba0","modified":1735224885981},{"_id":"public/diy/privacy/GDPR.html","hash":"ad84a77435ed0e3367a8b5e66441863ab80bd719","modified":1735224885981},{"_id":"public/diy/widgets/1.js","hash":"cbfdf2bd3ef311eae1d25029e18a2775f3a0d330","modified":1735224885981},{"_id":"public/diy/eng/241226/241226转写原文.txt","hash":"11814b4d96844dea430ea216c8091be9a1429346","modified":1735224885981},{"_id":"public/img/brew源.png","hash":"40e72d888b82bfd8599597fa40685a56eb17b4f3","modified":1735224885981},{"_id":"public/img/brew源2.png","hash":"e927a86ada2d2e583097e8f2ce610bf56422df99","modified":1735224885981},{"_id":"public/img/nomoney.png","hash":"a330d03684b9b50ada1f68442e1944c7c9820388","modified":1735224885981},{"_id":"public/img/wechat.jpg","hash":"d97b9211fe6b7af9cb6bd1f38ebfaea153171241","modified":1735224885981},{"_id":"public/img/24041311.png","hash":"d7f435404b2228dddd6359b14d640dfd46931a34","modified":1735224885981},{"_id":"public/css/hbe.style.css","hash":"407bb0f5058fd1d112ef916c931d094fc1488929","modified":1735224885981},{"_id":"public/lib/hbe.js","hash":"fb05fcd82bb28d3b2887d388cabea7f9b1a318eb","modified":1735224885981},{"_id":"public/img/24050602.png","hash":"fdca6cd48fd00c26602d61badb74ad5e9cc6681f","modified":1735224885981},{"_id":"public/css/index.css","hash":"cf97eac7ec62517cd0ad1e9a2d79e9722937bc2f","modified":1735224885981},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1735224885981},{"_id":"public/js/main.js","hash":"0dac585446445e0c419b86eec5580bc9b0657dc6","modified":1735224885981},{"_id":"public/js/tw_cn.js","hash":"f8d2e3f31468991a7f5171cbfdb157dfb86d3372","modified":1735224885981},{"_id":"public/js/search/algolia.js","hash":"108988d046da9a4716148df43b3975217c8ceaae","modified":1735224885981},{"_id":"public/js/utils.js","hash":"8e6b48d294e7aeaba8ff6348c43b2271cf865547","modified":1735224885981},{"_id":"public/js/search/local-search.js","hash":"e1f60ebac53a3f596fd0a4769b4f9275c48c6542","modified":1735224885981},{"_id":"public/img/cloudflare1.png","hash":"0e45cb07bd0ae15c0ae75ff3c84ca59d71acb28e","modified":1735224885981},{"_id":"public/img/24072000.png","hash":"54d708a0b1a0f5aaac71f0a47b0335f6ecdca469","modified":1735224885981},{"_id":"public/img/24071701.png","hash":"30b3d727ef0317e7361c6d10f3317dbfece4b3c5","modified":1735224885981},{"_id":"public/img/decision boundarylog.png","hash":"fb7043ba53bc53ee152324c9941771e6deb0c09f","modified":1735224885981},{"_id":"public/img/decisionboundaryline.png","hash":"5f9b2d873318ecb126c855c006cb4874611541e3","modified":1735224885981},{"_id":"public/img/cloudflare3.png","hash":"8abe3cd64f50d803b42f3aa7254cd0d1c881d969","modified":1735224885981},{"_id":"public/img/logistic1.png","hash":"1bf9177a049d9d0d5de3d38f9f55ffb9c5e1a5e0","modified":1735224885981},{"_id":"public/img/logistic2.png","hash":"3ab31e8bf6da02c859d3c8563e4e8b0e6593a478","modified":1735224885981},{"_id":"public/img/linearmodel2.png","hash":"e028049a663fb114536bd560428968e5689ec777","modified":1735224885981},{"_id":"public/img/linearmodel1.png","hash":"86974f32e0f9ffd7f99d4fb4c35f6a8aafd029ed","modified":1735224885981},{"_id":"public/img/x1.png","hash":"028aa220fe6d80e031d42f2991ff1c54a98ac1db","modified":1735224885981},{"_id":"public/img/x11.png","hash":"4f0ae549b7a7080f96e091bed87ff4b1da585bf7","modified":1735224885981},{"_id":"public/diy/widgets/2.js","hash":"ed3b5aa98afff5ec333d4c94246ccba08db56491","modified":1735224885981},{"_id":"public/img/alipay.jpg","hash":"2c777989d8e1e40542779ad9645916c04b9e509b","modified":1735224885981},{"_id":"public/img/24050603.png","hash":"9635f6ce4d6eff6b87815364d62692c33a9c4908","modified":1735224885981},{"_id":"public/img/24050804.png","hash":"029c208dc71e7b5773bff70a600cb5a0f4233138","modified":1735224885981},{"_id":"public/img/24060502.png","hash":"07873fc1696c7fa0e1bcf731c8fdcdb27b4c6fc0","modified":1735224885981},{"_id":"public/img/converge.png","hash":"c89ffa1913bb087a326876a2306b80089c8487fa","modified":1735224885981},{"_id":"public/img/cloudflareDNS.png","hash":"4826b31c3a080aaf1d1483c33a9f571615ef8177","modified":1735224885981},{"_id":"public/img/x2.png","hash":"9823729b8dc3056e0c07150e0810ffe69a78be42","modified":1735224885981},{"_id":"public/img/x22.png","hash":"803218393636a5db16b86260824decf6c4ec1e56","modified":1735224885981},{"_id":"public/img/x3.png","hash":"69d4ab117279aa1a7b4464bf8c00cbb5709f49b2","modified":1735224885981},{"_id":"public/img/x4.png","hash":"ab38bb1da24b3c684b5014a0c300fd741794deda","modified":1735224885981},{"_id":"public/img/x44.png","hash":"39bccce5c024de85f26f7e9988092f996c52e3d0","modified":1735224885981},{"_id":"public/img/x33.png","hash":"360fd576ba111a1dc0376604627ef0571f0b4d59","modified":1735224885981},{"_id":"public/img/2404135.png","hash":"7ad6b994b05ee59c28ed58d48770264bde9801a7","modified":1735224885981},{"_id":"public/img/24050601.png","hash":"65e51d884a9c66cad05ec638c1513cabea1558c7","modified":1735224885981},{"_id":"public/img/24050604.png","hash":"cd2106dbb88154e1fcfd6fdc73bbf76936db40b0","modified":1735224885981},{"_id":"public/img/24050801.png","hash":"1728b18b5e9fcd56923b8fc6f0dc821af2a9d55e","modified":1735224885981},{"_id":"public/img/24050802.png","hash":"877647493d955f3530f6360011c06dc9a37efe73","modified":1735224885981},{"_id":"public/img/24050803.png","hash":"5a53a53c97412bcdd17303dc50c3b994904af0b2","modified":1735224885981},{"_id":"public/img/24053103.png","hash":"69161fb2d886f7088073bf60587d039dde489a07","modified":1735224885981},{"_id":"public/img/24060202.png","hash":"68f9a15ada10600f3aba53f052b3653609024adf","modified":1735224885981},{"_id":"public/img/24060207.png","hash":"5246d8a2dc831ca8626189eade5a2df28cce9164","modified":1735224885981},{"_id":"public/img/24060300.png","hash":"2e941d07c011cff86345e4c9c50f5dabac699917","modified":1735224885981},{"_id":"public/img/24060304.png","hash":"765c6347c023bb4000be8ae5f64208df4587332c","modified":1735224885981},{"_id":"public/img/24060306.png","hash":"bd6aa83b40688f05c87b2bc2fe5b0accfe5eb6b1","modified":1735224885981},{"_id":"public/img/24060406.png","hash":"075f3d2767e60bd532adfd41464e2cb1464fef2f","modified":1735224885981},{"_id":"public/img/24060407.png","hash":"85742fea7a92db630b6ed947228b61b2f3d6791a","modified":1735224885981},{"_id":"public/img/24060501.png","hash":"279167f8c7b261169dfbbb63659243e43ef0196a","modified":1735224885981},{"_id":"public/img/cloudflare2.png","hash":"fee18cbb2cd510c20021ea7002e1c48e9ea0ffa9","modified":1735224885981},{"_id":"public/img/googleSearch.png","hash":"290bd18bfbf806cbe7c439ce902ac48ab8520005","modified":1735224885981},{"_id":"public/img/学习率.png","hash":"50b3164413ae72fb777f804a8c07bafa2caed1c4","modified":1735224885981},{"_id":"public/img/2404134.png","hash":"2231b3546e309a1976d0c8dc61d94bcd8a64cda1","modified":1735224885981},{"_id":"public/img/24050701.png","hash":"d1e41ae590681e7106cb5bbc9a87d452c1bc0c39","modified":1735224885981},{"_id":"public/img/24050706.png","hash":"b1097b5a0f3a5250dfb946268de8705374f92ded","modified":1735224885981},{"_id":"public/img/24050808.png","hash":"a10f6377e7d234c9c6f5c762149942b5db221aa9","modified":1735224885981},{"_id":"public/img/24050902.png","hash":"823d374e272784d2a9836e22e9bf8dbd0438f47a","modified":1735224885981},{"_id":"public/img/24051707.png","hash":"f1567ce3c170b2c69f974dbb0b6badfc0cd79121","modified":1735224885981},{"_id":"public/img/24060201.png","hash":"4af7d8ee34d0cbdb5ba5154fab72bb8b3510dc76","modified":1735224885981},{"_id":"public/img/24052806.png","hash":"c73101adefd61c3ecc47ce69b3fb72813b517328","modified":1735224885981},{"_id":"public/img/24060203.png","hash":"7fce9166a93274e12d4df75db45e519bf997bf89","modified":1735224885981},{"_id":"public/img/costfunvs.png","hash":"cb89a95c5023fe4ef83a96bf5ee66c6314ed63b8","modified":1735224885981},{"_id":"public/img/gradientdescent1.png","hash":"ad3d67ff9de1d622af0274029001405e1e456d93","modified":1735224885981},{"_id":"public/img/2404133.png","hash":"c1b2ecef86ea092702ddd5c7f546a38a8d63fe1c","modified":1735224885981},{"_id":"public/img/24042501.png","hash":"73c5957ee49384cb15e6f70383c6bd68d5002cc1","modified":1735224885981},{"_id":"public/img/24042505.png","hash":"9a8245d68c4f4574f06e5e89ad39cfdf6e22bab8","modified":1735224885981},{"_id":"public/img/24050606.png","hash":"b74461c8c5d0b4b4550441ff25d7e1ac40c09159","modified":1735224885981},{"_id":"public/img/24050610.png","hash":"e5389efbb03e4b8f9dd633feed4aae10d701a032","modified":1735224885981},{"_id":"public/img/24050615.png","hash":"9efc5d5e8b30c64ed59ffdde500803e115f88e54","modified":1735224885981},{"_id":"public/img/24050703.png","hash":"07cadd4bb61afff3e8d72fe9cd57702151ff6e70","modified":1735224885981},{"_id":"public/img/24050708.png","hash":"9876d7196edc3dff629fdd15239d85cf3a70c676","modified":1735224885981},{"_id":"public/img/24050900.png","hash":"31be3190703c1fc8e96261d6f7a5214d800c7b1a","modified":1735224885981},{"_id":"public/img/24051202.png","hash":"85addcca9493ab4fe51b9176220e6d977766b157","modified":1735224885981},{"_id":"public/img/24051301.png","hash":"ae91752d7aecf3be365627bda58e9320c54e2083","modified":1735224885981},{"_id":"public/img/24051804.png","hash":"e11185efd350a6e5a226b17f28e249f97f05e7f8","modified":1735224885981},{"_id":"public/img/24053104.png","hash":"11f49d46725ba63d132bd1a09651a1d0a0d9c515","modified":1735224885981},{"_id":"public/img/24060204.png","hash":"acd2d27d88ad655526eb3ba7cee2270f370d6685","modified":1735224885981},{"_id":"public/img/24060210.png","hash":"948ece046b07f72a2e7a6f699ea8f8c046babad4","modified":1735224885981},{"_id":"public/img/24060212.png","hash":"365e66ace90960690cf5d3fd8e5dc675e3cf6d7d","modified":1735224885981},{"_id":"public/img/24060301.png","hash":"1f9020db047aad3e5c022fc419ec0f139039b3bd","modified":1735224885981},{"_id":"public/img/24060302.png","hash":"ccf9bc7e445abd44fcad03bdcec3ad6e20038935","modified":1735224885981},{"_id":"public/img/24060402.png","hash":"3f7b0e5d3224547c4b5c850a3eac99fef6b89536","modified":1735224885981},{"_id":"public/img/24060500.png","hash":"37f2fa94c7d0e7a91f4e57c5f2c31d166f68309d","modified":1735224885981},{"_id":"public/img/24060503.png","hash":"0d03812251dcb99bc53c8b78c8930836bb8e7879","modified":1735224885981},{"_id":"public/img/24060600.png","hash":"b1230a41c53daa8ac3609c029198010564bc2b64","modified":1735224885981},{"_id":"public/img/24060602.png","hash":"242884c192c8f855ae80f504f9c9a601f5f023d2","modified":1735224885981},{"_id":"public/img/gradientdescent2.png","hash":"417f04ea9274be928a7488ac8f9fd03cad4756d8","modified":1735224885981},{"_id":"public/img/namesilo.png","hash":"96f8a55ee78735f46e63bc5464dc36ff563c9e44","modified":1735224885981},{"_id":"public/img/hxjtheta.png","hash":"0bcd60950729d534968f7f332ed94432bbf15070","modified":1735224885981},{"_id":"public/img/2404138.png","hash":"5d602b9632fe245fa208d6ddac0da00d7823a1e2","modified":1735224885981},{"_id":"public/img/24042401.png","hash":"3bffe65213532716c11f512c9044b049421fb4d9","modified":1735224885981},{"_id":"public/img/24042402.png","hash":"699896911923f99355ec2487236b25b7ba088b3b","modified":1735224885981},{"_id":"public/img/24042404.png","hash":"cda526ab7200b448c317e9936607aeea248ff837","modified":1735224885981},{"_id":"public/img/24043002.png","hash":"637d0d70d627b125c4c483cb175ad39b64096085","modified":1735224885981},{"_id":"public/img/24050608.png","hash":"79e9c99ac228175394e13a903c714693f0f19bd5","modified":1735224885981},{"_id":"public/img/24050611.png","hash":"357e26104be81b66701538e84bad4a398b327294","modified":1735224885981},{"_id":"public/img/24050614.png","hash":"01cbc52c04438869038ee9ec323c7799150166f4","modified":1735224885981},{"_id":"public/img/24050702.png","hash":"403e4629879149db2c05b3abd603a333f24d091d","modified":1735224885981},{"_id":"public/img/24050705.png","hash":"08040c4a0000cbe6ae83eb3667fecbcd3052ac8d","modified":1735224885981},{"_id":"public/img/24050807.png","hash":"05220b16aec3889588fbb5fafc9e33aba879b6ee","modified":1735224885981},{"_id":"public/img/24051201.png","hash":"7543947a67686e8141563594d84061f34d5836fc","modified":1735224885981},{"_id":"public/img/24050901.png","hash":"13d4f6b87e51b77330276b37df80ba17f86d55a9","modified":1735224885981},{"_id":"public/img/24051200.png","hash":"fe3ef1e3d8f2d222851391cb9ac2704bb1d78635","modified":1735224885981},{"_id":"public/img/24051304.png","hash":"53f92e50979ca71347d2d31c47a181da62e38bb0","modified":1735224885981},{"_id":"public/img/24051402.png","hash":"c4b17ad40652e07a09a006678b67d643d917f7bd","modified":1735224885981},{"_id":"public/img/24051404.png","hash":"06d812b239c95cb0efad3bb807edc2f5be60aace","modified":1735224885981},{"_id":"public/img/24051501.png","hash":"4c1ed9530210b9315f8da1a5a8292ef199f677a9","modified":1735224885981},{"_id":"public/img/24051502.png","hash":"b6c1f7f594f79a1ac8c5c1b882cf7464bd213870","modified":1735224885981},{"_id":"public/img/24051703.png","hash":"ecd3ed0fc066f3e677ed42fc695daa56a25e5a0e","modified":1735224885981},{"_id":"public/img/24052803.png","hash":"3ce77fcceabd9a59fde266af8d55b101c0187e4f","modified":1735224885981},{"_id":"public/img/24052800.png","hash":"19eb87a7998338318e9adbe9e886356d1b5ca634","modified":1735224885981},{"_id":"public/img/24051805.png","hash":"59d85e9668e6fb6b1f8d1ee913c0ecdd0c09c977","modified":1735224885981},{"_id":"public/img/24060200.png","hash":"e8a73812cbc031f3917cae0dbbea2c8daffb9521","modified":1735224885981},{"_id":"public/img/24060206.png","hash":"6aaff08edeec7b5734b602ef7fab5d153a6e2773","modified":1735224885981},{"_id":"public/img/24060211.png","hash":"29a7c20e86af3bd0f3e3b0a6457aea068e64236d","modified":1735224885981},{"_id":"public/img/24060209.png","hash":"ad0bd02e1b7cca25e743445e00f5fd6d10c61244","modified":1735224885981},{"_id":"public/img/24060305.png","hash":"4a3bdefae33ee33e4c92462bd339c8698c07a439","modified":1735224885981},{"_id":"public/img/24060303.png","hash":"e1e60a1405e96c52589e318c04873f06a8e08357","modified":1735224885981},{"_id":"public/img/24060401.png","hash":"7ea69cbd0c5d250498a47d6b41f7bb8ac32c8d74","modified":1735224885981},{"_id":"public/img/24060405.png","hash":"79cc101ff2c53712643f8b824f190feb7bc76f01","modified":1735224885981},{"_id":"public/img/24060506.png","hash":"23a237bfa7ed63dd0fc1b5541fdd2dcfae897e0a","modified":1735224885981},{"_id":"public/img/24060505.png","hash":"59ec2fd23bfa8eecd12c49c0b4cef4ea960782df","modified":1735224885981},{"_id":"public/img/24060601.png","hash":"83e9cffe801d45a06d8bf5cd852830f5fef4ab9e","modified":1735224885981},{"_id":"public/img/gradientdescent.gif","hash":"a9b22084b8a376869693df15ed6448256a4faabe","modified":1735224885981},{"_id":"public/img/neuralNetwork.png","hash":"cc91972b29b36973bb3ee5c63d0a5193b7d38a95","modified":1735224885981},{"_id":"public/img/2404136.png","hash":"22e6db3b25bda2912f2352f8512cf6b0f0ad9af1","modified":1735224885981},{"_id":"public/img/24042406.png","hash":"49d142002f498a534171d7ab483f12d553f37633","modified":1735224885981},{"_id":"public/img/24042408.png","hash":"a60c47a0c6c12b800f2254e250c818a19f4fe5b4","modified":1735224885981},{"_id":"public/img/24043005.png","hash":"70dba8bf972a7c5b7e837c3204137ec5653a6977","modified":1735224885981},{"_id":"public/img/24050600.png","hash":"8f73a47d627a6aa27519fe5aca4fcea21778a3f8","modified":1735224885981},{"_id":"public/img/24050609.png","hash":"b1c5773a9cdd228919e7f10a559cafb2f5c7bca5","modified":1735224885981},{"_id":"public/img/24050612.png","hash":"2a8046267c2e907bf9986789b2205694b54df306","modified":1735224885981},{"_id":"public/img/24050613.png","hash":"faa67e95b3e5bf94e48b6a890840f53ffbc75079","modified":1735224885981},{"_id":"public/img/24050707.png","hash":"5ff10afd5190b80e1923d7340b8828ff33167b63","modified":1735224885981},{"_id":"public/img/24050809.png","hash":"fa2a217fcaf7465d2ea2daee651ccdabc8e5f517","modified":1735224885981},{"_id":"public/img/24050806.png","hash":"ceb9076a65bd92fd7d006961da32bd7fa484d223","modified":1735224885981},{"_id":"public/img/24050903.png","hash":"c65edd538e3b3cab9319ea2865311b03a64e9711","modified":1735224885981},{"_id":"public/img/24051300.png","hash":"4ea9942c9dda676d5e5e887ac1db9bf8ac4ab2c0","modified":1735224885981},{"_id":"public/img/24050805.png","hash":"e1de2f10f5671855acc10b7f70ffb3f27321ab7c","modified":1735224885981},{"_id":"public/img/24051500.png","hash":"217a40ea0dae7a6180e02bff72e8e22c3e4404ed","modified":1735224885981},{"_id":"public/img/24051700.png","hash":"63d6e5888b26abb4bd766db92a97de10636e4433","modified":1735224885981},{"_id":"public/img/24051702.png","hash":"d2c3caa8038d49ccd9ca13201947cbce746a45c4","modified":1735224885981},{"_id":"public/img/24051705.png","hash":"cbf77c3a735969f9cad27526de152e66ad7dfd24","modified":1735224885981},{"_id":"public/img/24051800.png","hash":"24a2271bda0b95e30a3d60fb346869507721bf96","modified":1735224885981},{"_id":"public/img/24052802.png","hash":"144d609e5f0c811389e9f572051ee89734ccbb48","modified":1735224885981},{"_id":"public/img/24052801.png","hash":"e8a6e5ec1ee72bf2627b18a8e0118d60401719e2","modified":1735224885981},{"_id":"public/img/24053102.png","hash":"8ce17e275afa47eff1051ccdd31a5691cb04beb5","modified":1735224885981},{"_id":"public/img/24060208.png","hash":"65b5fa043a533070dd697428da3a0899d377365d","modified":1735224885981},{"_id":"public/img/24060403.png","hash":"23b7276deb0406fede04fad24bd5b2d906d21758","modified":1735224885981},{"_id":"public/img/2404141.png","hash":"29455db9f66ac771e03e3da0185e393267338d2b","modified":1735224885981},{"_id":"public/img/2404152.png","hash":"eaca04cbe0b3ced4b7268c72198870693c5335ef","modified":1735224885981},{"_id":"public/img/24042403.png","hash":"e3378a71db5ffa249e024fe8457a8eb34ee4d35c","modified":1735224885981},{"_id":"public/img/24042502.png","hash":"2ede8f16f6b68021592baffd276b7f5a6eb49c62","modified":1735224885981},{"_id":"public/img/24042503.png","hash":"8eec5b6dc8254e1fdcdc19d0c065b9d02c7056ca","modified":1735224885981},{"_id":"public/img/24042802.png","hash":"3f29af6da4350c981471a5f14f052ee6add7d5c5","modified":1735224885981},{"_id":"public/img/24050607.png","hash":"3d6557e8d861b4b234d6c60b359f454bade5cf38","modified":1735224885981},{"_id":"public/img/24050704.png","hash":"21d60b5c8eb692828d8812d7858f02ead61b7f60","modified":1735224885981},{"_id":"public/img/24050709.png","hash":"f4f8c7f54b49f7983b0c0d2187cabbe639f46e16","modified":1735224885981},{"_id":"public/img/24051303.png","hash":"706889ca150d6ca46b953a17fd41006b5f194104","modified":1735224885981},{"_id":"public/img/24051302.png","hash":"dff30f30e967271876d93c5f7997446892a7194f","modified":1735224885981},{"_id":"public/img/24051400.png","hash":"7b0cac23b8c374bcb4181afb4d44c4bc2e679c6a","modified":1735224885981},{"_id":"public/img/24051305.png","hash":"fb582a748c29a39d0d5902ab6c90afb7721c8a66","modified":1735224885981},{"_id":"public/img/24051401.png","hash":"fe616385e1e76b7c617df8f57d972abef9ede0b0","modified":1735224885981},{"_id":"public/img/24051708.png","hash":"63ff04ebcead8e338718c35817e3a55aa09028a1","modified":1735224885981},{"_id":"public/img/24053100.png","hash":"e55c2c1d9d876aa7c4e0fe96c430fcfbc92a00c3","modified":1735224885981},{"_id":"public/img/24060205.png","hash":"e84ffcce65cf84ac528dc477bc096f319427b403","modified":1735224885981},{"_id":"public/img/24060400.png","hash":"dd54e68136fa2ac815dc1066b6e2f0a4a034ecc7","modified":1735224885981},{"_id":"public/img/24060404.png","hash":"5fa5ba855e5b296cc57dd55f987eb383220b6e93","modified":1735224885981},{"_id":"public/img/24041310.png","hash":"6a3a78c48efb85e91d80fa44de05e58d862973ad","modified":1735224885981},{"_id":"public/img/2404139.png","hash":"ba7f0f15b5663113b84052087f453096ec9a38f0","modified":1735224885981},{"_id":"public/img/24042405.png","hash":"5506390a05692a1de3624ceb866324025a1e5bec","modified":1735224885981},{"_id":"public/img/24042504.png","hash":"82e97a06efe29fac0325dd11bbd84ff4b504b4e3","modified":1735224885981},{"_id":"public/img/24043001.png","hash":"69f51c3587ae1352924369b01491164a4f860b6a","modified":1735224885981},{"_id":"public/img/24043003.png","hash":"a79ca72fc9a0039c47f03bca4a883bd1c757a3e5","modified":1735224885981},{"_id":"public/img/24050605.png","hash":"fd4c3e4ec4deb05faec76b5594abe4a24635b758","modified":1735224885981},{"_id":"public/img/24051701.png","hash":"e1f9616f85eb857ec790eff032b857a9013fe894","modified":1735224885981},{"_id":"public/img/24053101.png","hash":"202ee1b756e08c0e6faf069793ee6d2f780b40d3","modified":1735224885981},{"_id":"public/img/24060504.png","hash":"f64aa2e0d47b9ad578967fae5eb3792f6a992d2e","modified":1735224885981},{"_id":"public/img/24042407.png","hash":"5719d11a8578197fd93f9e23f4833a1255886f00","modified":1735224885981},{"_id":"public/img/24042506.png","hash":"f814e24acbc9bcfac71169a322e7875b14bb0f51","modified":1735224885981},{"_id":"public/img/24042801.png","hash":"13283f7514ad074a24a7f429b1a92adaf2966fb1","modified":1735224885981},{"_id":"public/img/24042803.png","hash":"f62b508d5032106649694ec0d256daa84906552a","modified":1735224885981},{"_id":"public/img/24043004.png","hash":"d92d4f6fd8d418a159e049839d32826c30fb9c4d","modified":1735224885981},{"_id":"public/img/24051403.png","hash":"79f51283cb5d2da5cf5ab07509093dcc3ed8c371","modified":1735224885981},{"_id":"public/img/24051706.png","hash":"3129a2f3fd3b4ceae312decd6b52b5ac47e5a62f","modified":1735224885981},{"_id":"public/img/24051803.png","hash":"ec26158a7e0d9635df96c034857acbdd9d64ac02","modified":1735224885981},{"_id":"public/img/2404137.png","hash":"641546eb352c493cdc1aa8eee0dc08e99b47c8a7","modified":1735224885981},{"_id":"public/img/24042507.png","hash":"24340ed92398deebf5da37242577addde3093058","modified":1735224885981},{"_id":"public/img/24042508.png","hash":"74601d3660728476faee0fa8e02b1f64d66d3e8f","modified":1735224885981},{"_id":"public/img/face1.png","hash":"b957b15a635bc27b02479ebb7b03086029d22e46","modified":1735224885981},{"_id":"public/img/face2.png","hash":"1c0bf22380da13e8b40671331ae9382e3349c3ea","modified":1735224885981},{"_id":"public/img/cloud.png","hash":"7a85885cd9dd960d210a1ea65384434be2553b7f","modified":1735224885981},{"_id":"public/img/24051704.png","hash":"b6726fd1060e174c75132c94309187ea65211ec5","modified":1735224885981},{"_id":"public/img/24050800.png","hash":"8d69f15441d3f783a2f547160572780d8c1cebef","modified":1735224885981},{"_id":"public/img/googlenews.png","hash":"9d72b302f0adf833db3c4f7cbd549c87ef15a1fa","modified":1735224885981},{"_id":"public/img/24052805.png","hash":"57659e7cb8887643e945de19ba0759238b7fee57","modified":1735224885981},{"_id":"public/img/24051801.png","hash":"bf6dce4ad8542ecfb1eb45c8df069eceac7450b0","modified":1735224885981},{"_id":"public/img/24052804.png","hash":"7414854a2cd8ef17492538a1dbad5afdcc777304","modified":1735224885981},{"_id":"public/img/wallpaper.jpg","hash":"84cb19871e93a34d2cdf674a9ae39dfb17851eed","modified":1735224885981},{"_id":"public/img/24051802.png","hash":"f2ab47e4d269ed7f3fae00978fae6cfb1435e0da","modified":1735224885981},{"_id":"public/diy/file/Cpp.pdf","hash":"1cd52df677dd36c438c219752fb540677adec364","modified":1735224885981},{"_id":"public/diy/music/djyqxyy.mp3","hash":"91f04aedfcba8008349d366e2485bd7eb151e830","modified":1735224885981},{"_id":"public/font/fzkt.ttf","hash":"8e153ec0f6ccb6ea99f4e6e1e54747e9fe094d0a","modified":1735224885981},{"_id":"public/img/2404132.gif","hash":"145a5b482af3ec6556558fbb3f2709b3db685153","modified":1735224885981},{"_id":"public/diy/eng/241226/241226.mp4","hash":"b1c8122aadd15994b6e854942629ff8ae3554744","modified":1735224885981}],"Category":[{"name":"想起来就写的diary","_id":"cm55g3gat0004biub54gedomx"},{"name":"DIY","_id":"cm55g3gay000mbiubhtal3xlk"},{"name":"shortcut","_id":"cm55g3gay000tbiub5lx3c1w4"},{"name":"STL","_id":"cm55g3gaz000xbiubgs6798sz"},{"name":"Machine Learning","_id":"cm55g3gb0001ebiubfauob3yg"},{"name":"tools","_id":"cm55g3gb2002bbiub6mljbda1"},{"name":"python","_id":"cm55g3gb3002kbiubgat4dm6m"}],"Data":[],"Page":[{"title":"about","date":"2024-01-09T10:11:07.000Z","type":"about","_content":"\n#  我没什么好about的，多about about自己和身边人吧兄弟们\n\n\n\n##  本站全面搭配楷体，体现了站长高超的审美水平\n\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2024-01-09 18:11:07\ntype: \"about\"\n---\n\n#  我没什么好about的，多about about自己和身边人吧兄弟们\n\n\n\n##  本站全面搭配楷体，体现了站长高超的审美水平\n\n","updated":"2024-01-09T10:18:03.140Z","path":"about/index.html","comments":1,"layout":"page","_id":"cm55g3gaq0000biub17bh3zgd","content":"<h1>我没什么好about的，多about about自己和身边人吧兄弟们</h1>\n<h2 id=\"本站全面搭配楷体，体现了站长高超的审美水平\">本站全面搭配楷体，体现了站长高超的审美水平</h2>\n","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":"<h1>我没什么好about的，多about about自己和身边人吧兄弟们</h1>\n<h2 id=\"本站全面搭配楷体，体现了站长高超的审美水平\">本站全面搭配楷体，体现了站长高超的审美水平</h2>\n"},{"_content":"@font-face {\n  font-family: 'fzkt'; \n  src: url('../font/fzkt.ttf') format('truetype');\n}\n","source":"css/custom-font.css","raw":"@font-face {\n  font-family: 'fzkt'; \n  src: url('../font/fzkt.ttf') format('truetype');\n}\n","date":"2024-01-24T11:34:47.038Z","updated":"2024-01-06T07:31:50.584Z","path":"css/custom-font.css","layout":"false","title":"","comments":1,"_id":"cm55g3gat0002biubforgfydg","content":"@font-face {\n  font-family: 'fzkt'; \n  src: url('../font/fzkt.ttf') format('truetype');\n}\n"},{"title":"tags","date":"2024-01-09T07:20:30.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2024-01-09 15:20:30\ntype: \"tags\" \n---\n","updated":"2024-01-09T07:21:51.421Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cm55g3gau0006biub05ru8qfi","content":"","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":""},{"title":"categories","date":"2024-01-09T07:20:52.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2024-01-09 15:20:52\ntype: \"categories\"\n---\n","updated":"2024-01-09T09:26:13.909Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cm55g3gav0008biubalkg8nuq","content":"","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":""}],"Post":[{"title":"240109","password":990725,"description":"又是折磨人的一天","abbrlink":"f910d0be","date":"2024-01-09T09:39:55.000Z","_content":"\n​\t经过了大概两天时间，网站已经基本搭建好了，想着添加一些小功能，就开始了DIY。\n\n​\t一开始一切都比较顺利，然后我用hexo cl命令时发现用不了了，也许是不小心删了什么配置文件，也许是不小心改了什么json设置，总之我第一时间面向chatgpt,重新初始化了blog,检查了很多配置文件，也重新生成了json文件，也重新完成了映射，虽然不知道有没有成功，我感觉没有成功，不然应该可以解决问题。很多方法都试了，没办法还是不行，我又不想完全从零开始再搭建一下，想着能不能保存一下配置文件，初始化一个Blog后把配置文件替换一下。很明显我又失败了。没办法了，只能从零开始再搭建一次了，好在有了经验，这次搭建很快就完成了，好像就用了几个小时，现在已经快18:00了，又要到了吃饭的时间。\n\n​\t这个时间食堂的人太多了，想晚点儿去。哎又想起来今天起来晚了，上午好像十点多才到学校。倒不是那个时候才醒，醒的挺早，就是墨迹墨迹不愿意走。可能还是醒的不够早，醒的时间太暧昧了，吃早饭食堂应该没有了，午饭还太早，只能墨迹墨迹到中午再来，这样直接去食堂就可以，不用先去图书馆再去食堂，不用走重复的路，效率能高一点儿。只能这样安慰自己。\n\n​\t希望今天能早点儿睡。\n\n​\t\t\t\t\t\t\t\t\t\t\t\t\t\t二四年一月九日，于复旦大学李兆基图书馆\n","source":"_posts/240109.md","raw":"---\ntitle: 240109\npassword: 990725\ntags: diary\ncategories: 想起来就写的diary\ndescription: 又是折磨人的一天\nabbrlink: f910d0be\ndate: 2024-01-09 17:39:55\n---\n\n​\t经过了大概两天时间，网站已经基本搭建好了，想着添加一些小功能，就开始了DIY。\n\n​\t一开始一切都比较顺利，然后我用hexo cl命令时发现用不了了，也许是不小心删了什么配置文件，也许是不小心改了什么json设置，总之我第一时间面向chatgpt,重新初始化了blog,检查了很多配置文件，也重新生成了json文件，也重新完成了映射，虽然不知道有没有成功，我感觉没有成功，不然应该可以解决问题。很多方法都试了，没办法还是不行，我又不想完全从零开始再搭建一下，想着能不能保存一下配置文件，初始化一个Blog后把配置文件替换一下。很明显我又失败了。没办法了，只能从零开始再搭建一次了，好在有了经验，这次搭建很快就完成了，好像就用了几个小时，现在已经快18:00了，又要到了吃饭的时间。\n\n​\t这个时间食堂的人太多了，想晚点儿去。哎又想起来今天起来晚了，上午好像十点多才到学校。倒不是那个时候才醒，醒的挺早，就是墨迹墨迹不愿意走。可能还是醒的不够早，醒的时间太暧昧了，吃早饭食堂应该没有了，午饭还太早，只能墨迹墨迹到中午再来，这样直接去食堂就可以，不用先去图书馆再去食堂，不用走重复的路，效率能高一点儿。只能这样安慰自己。\n\n​\t希望今天能早点儿睡。\n\n​\t\t\t\t\t\t\t\t\t\t\t\t\t\t二四年一月九日，于复旦大学李兆基图书馆\n","slug":"240109","published":1,"updated":"2024-02-21T07:15:22.314Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gar0001biub7gwkbxp2","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"4d8f3c3c6a86969fc2f89165db14d014b577338ca88571be986506c795c01cc7\">2b09facb9f841186b98af6a7022481696fb9c0a1f5343d2849e1466a2687d79149550282da6d08e08b485ea7b4dcb12dd5a06aceb5e7191336adbc9d4ddb56aa1e2c8fb7bb120238f62b252ccd152d1741260871498788120f60532b9248de730cf8b633e6c93c23a66627705c6846d3ef65ca5df30db101742c801ce312e9ca93f1efa5b901c82993cacd8143b06ddd9e7cdcbe7e1db32e939a31a94ae1325c31cc645bb68b284471e8b1cc51a22e1985402905ead7d564c3cd3b25488069307e72e2a1e3cf7be6be3870fa64a79fc6c6aee34300e87fdf101a4ca47a89f149e5142f890a7a5eaec2fb9b44087f2e8d354bf5435c21e0d936e00279e92759d6c9375e7517f54a321f0d45b7f78e91a6049f29c93d5190ecf6d3a03531bad9f6ab9ae750bdb9f8ab9feefbfa7f1a82ff8c7ccb2a8923fd2a1644ca61456eed6fc0a785e4cfc81226db19281c821c0f621e9a891076e9ff294ab33234f6d4e22de493e40fd8a76427902e24721aa2b2fe4c4e80acf06b239477cc6f02f1da3b31999a2146e61e84631210a7f80dcbdf3474467fd6716c539386f78513ea46dac19557a51bd70e1a21239f3243e9bd0c6142b7936598947b49f8874a12d448ca5cc45c9039cb5ebe5eeef56c27d81572dd261827db3236129996a86cedf17abbff0b1f06ab512df3d9af2308bafacbeb40328194b7bc6c93570bc029faf200e67d37ef8d1e95f2afabb9d790f049c1728c90e93d086653b7c22cc23cecbe5c5aecd8494772c50f8d24deccc3dec2b68a7fd1fa23c1c6dd3498f2b28e11df542a9fca9b52c54fb3f7d98ded2b82f89bf7f11bf5c5ed2988b584c2328855b06364a8043cff8d9eb632a49030c9aa620c933738417b141cd5372d116161ef5f4232d60a0fd24c3e11c03d1b8c0ce48263575beca498442159eb088e55b0b9403295089b1d8cbfc1f4d2cd29f9ec58078e8b84fd33a5e144cc558743497547e9f2cfeaa2831d9dd2d5fa18b3072d1a90d7c115b6f16b6baf167750919dd4bdd6ec1ea1f3cc1820a1c9b067aed1315b0c2f15d9fb7a9b3449db6ad75a04c5df55043cd2c2f41f69a9935e65974f7219da6c117d58c2e506e834d4da63a9fdf4017741328d005f5dde0ddcf1b35ddc832b793fd11ef8f16c0c05a09659c4d9a02ee1eeffba213d7cfb35883f7c95a284176d5b12b76b940b407b5688184b81f9ebb234ba8f1b264f58c404d582aa4922eff600561ca909c5f46e933f9c760e833b9af0d77da619e223b853fb7995aa8df3960f79b4249a4279db1ffdb2011e471f8161e9b5d970114935bdeb228f17e7de13451efcffcc8ac3fe9c00ed3ee9ff34263616cdaa44c48ebaae9a8d9b3bdb1611ecb5e8c7630b92023467eff2c0d7c3e983f38c00dfa8c0cb70e2fe64fff1e01d8808e3d19668b790bdca179934758aac4a1127714f2fa7e619ada11f8f54c0d5dbbb53830c1cc9eb61e264402cac498bf3caa87318d1fc79faa23687987f37042a4e7883c673b89bcf91e93e021541e067199a4906b664d931e423406e533a5c1c39ed86e6257edca8096bd36bc7b14c016c757c4ca4dce02b0aefe66830f7ddb04a10544dc2d2f661d57780300fb0aef5c7aa56633483862f7fe0cffe1ae02b14262fe19382e76449b9659d1e8c45d27c62e562a35c14cc00c28a995a04aa043fb7401f5e7f86212a8bfb95231334629f2c823d29a5b794f0259bbd3c67f99054d1841b39edd47b605fec5a97318f0b31c4e7059b7126712a6633d53d5ffc77e04fb2af7b122e110966cd1ac37c12faba11a58c8995550c626179ecba11d01bafb416d75400b55576ccab08a2166422021c53da341c92befae940a1ddc4caf9a4e1baf449543e671fb541763a7be19a1457328fc9874bce779ede39f5c3ee5d7f1140fb75073981db25d93a98bd4451662a3be2d889f96c1cf2b2124a239e60486909a720ef689afd4093ab3e324057f749bcad60c84acda8ecd583dbd4dad84122ea7e209a72f2ad953599d91a77e180f1462c5415ad1b9c4cfc0f5e7140ec435a1b50e92ee95fe35a89fcbb695f4a3af29a26ee097852599e232b65eca6f86f2a8b0c1cf789faeaa1e0a52db1958c06f77cd12e3a3c4b2c3752e866153c4d4711e74a73a6ac48d8595ee39549aee561c3ca1b6f208440df28a85da3bf872f58f4a0f8a2f4d31634e1bc2a2fff6122aeb134876e7f35227cde899001eb74092b7a5133d75a4f3e9db6643716d7906590e14d5fb9e8d10ccabc8f8b27eba4ed9d72</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">Hey, password is required here.</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"Here's something encrypted, password is required to continue reading.","more":"Here's something encrypted, password is required to continue reading.","origin":"<p>​\t经过了大概两天时间，网站已经基本搭建好了，想着添加一些小功能，就开始了DIY。</p>\n<p>​\t一开始一切都比较顺利，然后我用hexo cl命令时发现用不了了，也许是不小心删了什么配置文件，也许是不小心改了什么json设置，总之我第一时间面向chatgpt,重新初始化了blog,检查了很多配置文件，也重新生成了json文件，也重新完成了映射，虽然不知道有没有成功，我感觉没有成功，不然应该可以解决问题。很多方法都试了，没办法还是不行，我又不想完全从零开始再搭建一下，想着能不能保存一下配置文件，初始化一个Blog后把配置文件替换一下。很明显我又失败了。没办法了，只能从零开始再搭建一次了，好在有了经验，这次搭建很快就完成了，好像就用了几个小时，现在已经快18:00了，又要到了吃饭的时间。</p>\n<p>​\t这个时间食堂的人太多了，想晚点儿去。哎又想起来今天起来晚了，上午好像十点多才到学校。倒不是那个时候才醒，醒的挺早，就是墨迹墨迹不愿意走。可能还是醒的不够早，醒的时间太暧昧了，吃早饭食堂应该没有了，午饭还太早，只能墨迹墨迹到中午再来，这样直接去食堂就可以，不用先去图书馆再去食堂，不用走重复的路，效率能高一点儿。只能这样安慰自己。</p>\n<p>​\t希望今天能早点儿睡。</p>\n<p>​\t\t\t\t\t\t\t\t\t\t\t\t\t\t二四年一月九日，于复旦大学李兆基图书馆</p>\n","encrypt":true},{"title":"240112","password":990725,"abbrlink":"77d93877","date":"2024-01-12T13:11:18.000Z","description":"今天痛失了一道豪华菜！","_content":"\n现在是晚上21:17,距离我吃过晚饭已经两个小时了，但是我现在很饿。实际上我大概半个多小时之前就开始饿了。不知道为什么，晚上饿得那么快，我中午大概十一点多吃的饭，晚上可能五六点才会饿。想起来今天中午排队的时候，食堂已经快没人了，我看到还剩大概两份的西红柿鸡蛋，但根据我的经验，阿姨会把剩下这些所有的都给下一个要的人。我前边也就两三个人排队，我愿意为这份double会是我的。很遗憾，我前边的哥们要了，不出我所料，我亲眼看着梦寐以求的双份鸡蛋进了他的盘子了，oh holy shit!又是开局不顺的一天！\n\n本科生好像都放假了，现在学校里的人越来越少，图书馆的人也很少了，现在完全不需要早起来抢座位，可能这也是我最近总起晚的原因吧。\n\n上海的冬天不冷，风也不大，好像只有十二月中旬冷了几天，其余时间都在10度左右，看了眼天气预报，今天好像是16度，过没几天竟然都20多度了，当然也就那一天。我前几天还在纠结买跑步的速干衣需不需要买个带绒的，感觉不需要了。很久没运动了，现在不知道能跑多远，得慢慢捡起来。现在状态不但不好 in physical,but in mental,我每次看到谁谁因为久坐怎么怎么样了，我就很害怕。最近一次是大概一两个月前吧，看见一个新闻一个学生久坐，有一段时间说是胳膊麻，然后瘫痪了好像是，我真的很害怕。\n\n运动运动运动起来！\n\n","source":"_posts/240112.md","raw":"---\ntitle: 240112\npassword: 990725\ntags: diary\ncategories: 想起来就写的diary\nabbrlink: 77d93877\ndate: 2024-01-12 21:11:18\ndescription: 今天痛失了一道豪华菜！\n---\n\n现在是晚上21:17,距离我吃过晚饭已经两个小时了，但是我现在很饿。实际上我大概半个多小时之前就开始饿了。不知道为什么，晚上饿得那么快，我中午大概十一点多吃的饭，晚上可能五六点才会饿。想起来今天中午排队的时候，食堂已经快没人了，我看到还剩大概两份的西红柿鸡蛋，但根据我的经验，阿姨会把剩下这些所有的都给下一个要的人。我前边也就两三个人排队，我愿意为这份double会是我的。很遗憾，我前边的哥们要了，不出我所料，我亲眼看着梦寐以求的双份鸡蛋进了他的盘子了，oh holy shit!又是开局不顺的一天！\n\n本科生好像都放假了，现在学校里的人越来越少，图书馆的人也很少了，现在完全不需要早起来抢座位，可能这也是我最近总起晚的原因吧。\n\n上海的冬天不冷，风也不大，好像只有十二月中旬冷了几天，其余时间都在10度左右，看了眼天气预报，今天好像是16度，过没几天竟然都20多度了，当然也就那一天。我前几天还在纠结买跑步的速干衣需不需要买个带绒的，感觉不需要了。很久没运动了，现在不知道能跑多远，得慢慢捡起来。现在状态不但不好 in physical,but in mental,我每次看到谁谁因为久坐怎么怎么样了，我就很害怕。最近一次是大概一两个月前吧，看见一个新闻一个学生久坐，有一段时间说是胳膊麻，然后瘫痪了好像是，我真的很害怕。\n\n运动运动运动起来！\n\n","slug":"240112","published":1,"updated":"2024-02-21T07:15:50.949Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gat0003biubbpg76xbx","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"575e42a46dc9400bc625a16bed9863ea793ca7f182951b99b0199ed6106c97eb\">2b09facb9f841186b98af6a7022481699ccc5251af630ee1173bbaeb65ae208998472cc1fa1e72b9661f754cfbce69ce240b010f42bdb90403f4c933f73401d879446f63ea2d668703bdac5164d79b6794848d1e6b83f66ffca08170ac3acbf6cc57fc90de3e268ea8e04a42abb08486cd272dab43c43e4b452ba2b88444a3569ad476fe5dd6bf67b35437376d512e7675c9fe641e6857d7995a5b992bbcd87fe66dbfac59e042f17050444ec06ae3137aa7765842da5b809143458fb6db0a23e2504974817599efd8fea250be30460f2397ecaf8d3b3009fad96181728537718a96a4287fb53d9f34130cda01d86246705985a96552171ae2173dda80b9f700330c7793902b7137f53b2f9d0e4da1e9b1f5fd0e4b03b05e26d62e79428301bf1e70ebbe6d8b53b7242996eb86a8325e19a315dea748b857db0893ed0290bab53f548113b1500c4427d84384939a08a15f7b2da797202519b4a7af672438ed85cd94f302341c54b499e798d4d0e684c995c7b1eca9c8bc9e75f0a35cb45f3de146bf0247331174ede708cd0eb68e3d853c2a5dee44a5cce9284c64bff3db5663609707cf3fbbe7cee4f106011f035ce1772fa2163cf694c29d7c43bfe2269ec50d790b06b50a04e7644eec58f93b7fc4d4fe51d711819df6faee3e7c540c55b09e713f50249f954cc0ad4ffeb4822edcb6c75fa68bec252eedd702d33aa8519ca59795da4e7d7dcf17fb661882fc6c254248860e88ff11608d1a446e0893be53236e62e02e1313a841de235bdf1a897615fb37c82c0ea02a34b6fe87e950517490c30373dc9cba01484d652801460a4af5f59e8184d312aa815f25210b3226eaede5654410465ecf87675ca263d548a1bf071109809764a81b672e527180308f36a0225a7102efc6d35959ca089acf69480867f37cde4f20a5a9e649eb56dc8c1f250592060a88bf522193a66d424eefb70f1e38d63612f455da67f69c41b46c3ec0308bb1dee2d412d802cc9ebea79da502fae2778c177615de26bf102ac22ece6d992945894eb8ebca793820e2d653af3a5a5b2cb67eb6d1dbc971e689443ff8e4485b4943ee66bcd1fae825636730debd1274054afd0d16c3612f75e572fb09e6c0cacd7d5a902b94673c470b7395a01bb994a68dd9326b1539c103ab4966f3e64ff59aabdc677c705292b1010e38c7cd2c6ba09810aaf5bd375f6d7824217b636c97672deed52c16c76ac33b9b855aef6dfaf3572fd7b025525413b52da173432731aba4b9cf235122231f8d167ee3684f6ad629d35e0172c333598df52222d116b1134410e96de3d8215ce35cf278d62eb16954073d28f0bd67df0ec10772fc6a582a6f1ec8669c7b3df7dc9757c08d387a5092609a48fcf06dda042ab0c9a494a612c103fb920d5dfb169669bb1971d8d6848fe0fe664d3fca3da590257d9136994b21a98336fa5f9b7597047952e7ec7709d75607a85d16c2479b9557e79ad230a17b74f9fb330dc70eaa18f98ab63d6b0340dc9d2f573827483d5b2f58e8b20113bc2ebf6fb8d48c8f3d4405c03f600ed6130ef073bc0f42b6b6c72593c5301a852c632ddbb1b9c18b43b5d8835d35a0c493b6bee58dc5c678f927a5e0bf42d305d1ef1b560d5bc7df3cc74430dbfa347143147ab17d187c45d029caa8110dde0793a7382d9203d165f1fd1b17a34834f2002bf2d25849ec3a366e194dee74907b5558398f9a7be7833b1d852ca8577bb0686d77474ecff7932b26413fe182e5f8cbcd9fa15b93a77369414dfeb8441487a202517b17c33fc03621c13b0b32d32232239d957a7a230674f18a2e6088106be6544d0276b1aa998545149021bcff31b4ad5af3d25b8ef441cce4f5bdaa3ccb2ec8eefffb98911b935bee8787c5a83f10f5912744bfd02e78982b7fb66a54c3daed6edbcf02d03fa20919244809a16316e9a7939ff2079e3ea3c83ff2742ef30db55a5b5121411e0429423b5925c3fe57313c4ed35e90a4a8367af2469335db32f25ce67b4cb175eb16858f9ba6c827a7b22b104535432c0854134739abbab752c6c921de218feab2923685c030f23abb8d0dfd1530d58f7dd5015af91e52a9940195f08c14593017ceb39af0e4aac6ac1444d35d3db08aa824f97ea2b8bb713468aa92c364308509b69ff33632d18c5abc62450d943dcf63d7a19fa00b442c4d9b1b4da35e775e119d72bd2e0b40621d3537d13d03eae8f74093c0c9427c83b4316b60c12fd163f0e77359fa17fddddee6002becfce77623bc83bff38379a90eec861f882dde81af73db3f29eab3efeffd1c4662488570eb5eea</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">Hey, password is required here.</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"Here's something encrypted, password is required to continue reading.","more":"Here's something encrypted, password is required to continue reading.","origin":"<p>现在是晚上21:17,距离我吃过晚饭已经两个小时了，但是我现在很饿。实际上我大概半个多小时之前就开始饿了。不知道为什么，晚上饿得那么快，我中午大概十一点多吃的饭，晚上可能五六点才会饿。想起来今天中午排队的时候，食堂已经快没人了，我看到还剩大概两份的西红柿鸡蛋，但根据我的经验，阿姨会把剩下这些所有的都给下一个要的人。我前边也就两三个人排队，我愿意为这份double会是我的。很遗憾，我前边的哥们要了，不出我所料，我亲眼看着梦寐以求的双份鸡蛋进了他的盘子了，oh holy shit!又是开局不顺的一天！</p>\n<p>本科生好像都放假了，现在学校里的人越来越少，图书馆的人也很少了，现在完全不需要早起来抢座位，可能这也是我最近总起晚的原因吧。</p>\n<p>上海的冬天不冷，风也不大，好像只有十二月中旬冷了几天，其余时间都在10度左右，看了眼天气预报，今天好像是16度，过没几天竟然都20多度了，当然也就那一天。我前几天还在纠结买跑步的速干衣需不需要买个带绒的，感觉不需要了。很久没运动了，现在不知道能跑多远，得慢慢捡起来。现在状态不但不好 in physical,but in mental,我每次看到谁谁因为久坐怎么怎么样了，我就很害怕。最近一次是大概一两个月前吧，看见一个新闻一个学生久坐，有一段时间说是胳膊麻，然后瘫痪了好像是，我真的很害怕。</p>\n<p>运动运动运动起来！</p>\n","encrypt":true},{"title":"240208","password":990725,"description":"重新开始运动了","abbrlink":"8c515e71","date":"2024-02-08T10:50:40.000Z","_content":"几天前把运动需要的一些东西又买了一下，最近也陆续都到了。但天气还是有点儿冷，我还是喜欢在外边跑道上跑步，于是想等几天暖和一点儿再开始跑步。但是我最近睡眠实在是不好，想跑一跑累一下，看能不能改善一下睡眠，于是今天就开始了，只不过去了学校里边的健身房。\n\n健身房里人比较少了，感觉10个人左右吧。我旁边的跑步机上应该是一个教授，问我过年不回去孤单吗。一下子想起来几天前我几个朋友知道我不回去以后，大多都会问过我类似的话。哎，我现在可能最不怕的就是孤单。想起来小学初中的时候，去食堂吃饭都是几个人一起去的，要是我自己一个人的话感觉很不舒服，甚至会觉得脸红丢人。但是现在一个人的时候越来越多，食堂一个人在吃饭也随处可见。对我来说这一切好像过度的都很自然，我没有什么不适，可能是我共情能力比较弱，我觉得这样挺好的。\n\n好像过几天就要过年了，第一次过年没回家，也不知道会是什么感觉。但应该没什么感觉吧，我对这种传统节日没有什么感情，我可以有我自己的春节，但我不喜欢这种被定义好的春节。很固执。\n\n很久没运动后这一次跑步只跑了40分钟，肩膀就酸的有点儿抬不动了，不如我旁边的教授。但是慢慢来吧，只希望自己能坚持下去。\n ","source":"_posts/240208.md","raw":"---\ntitle: 240208\npassword: 990725\ntags: diary\ncategories: 想起来就写的diary\ndescription: 重新开始运动了\nabbrlink: 8c515e71\ndate: 2024-02-08 18:50:40\n---\n几天前把运动需要的一些东西又买了一下，最近也陆续都到了。但天气还是有点儿冷，我还是喜欢在外边跑道上跑步，于是想等几天暖和一点儿再开始跑步。但是我最近睡眠实在是不好，想跑一跑累一下，看能不能改善一下睡眠，于是今天就开始了，只不过去了学校里边的健身房。\n\n健身房里人比较少了，感觉10个人左右吧。我旁边的跑步机上应该是一个教授，问我过年不回去孤单吗。一下子想起来几天前我几个朋友知道我不回去以后，大多都会问过我类似的话。哎，我现在可能最不怕的就是孤单。想起来小学初中的时候，去食堂吃饭都是几个人一起去的，要是我自己一个人的话感觉很不舒服，甚至会觉得脸红丢人。但是现在一个人的时候越来越多，食堂一个人在吃饭也随处可见。对我来说这一切好像过度的都很自然，我没有什么不适，可能是我共情能力比较弱，我觉得这样挺好的。\n\n好像过几天就要过年了，第一次过年没回家，也不知道会是什么感觉。但应该没什么感觉吧，我对这种传统节日没有什么感情，我可以有我自己的春节，但我不喜欢这种被定义好的春节。很固执。\n\n很久没运动后这一次跑步只跑了40分钟，肩膀就酸的有点儿抬不动了，不如我旁边的教授。但是慢慢来吧，只希望自己能坚持下去。\n ","slug":"240208","published":1,"updated":"2024-03-10T07:35:35.227Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gau0007biubfr5e91it","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"402317d56e1ecd9da654025e5fde80de272a4c94f3c6465961fee4685f50aa82\">2b09facb9f841186b98af6a702248169e3feaed4b72b2b2d94b5c9eff11799b3515c46587ede6d2c89f30d1aafd2cd122b702bfd934f313674adda81f0173892417e16afbf143c41c7e28d0d0e775cbfaf83e9f1b03e9f117ed73a7146374d35392c01141d8eacf45320c11936b05b15355ddfc602a3387350fd67d35f3db72fa24fcfc74e0870ca7f357d33493482a5616ef133b0a65c1598ec91419f69388f9e44bf9c446c8ca99ca6ac0442cd53868d273689e4940e84682d5180fd4acd71d2d03ef25f0f4ab1e8834fb006511f15c08b17a68c330ebe0249bc7683ae4f080309e6277818a9c488345ed07c036e3ee81cc9a09f7760501bcb4cc679e46b1d8d72698671cad17805270608242aed3289659a0ab1b0cfe17dd0540f5d48ed3b4fbefabe2a3e304023df150d02d49aaffc5c02e255a0372bafd80e844c461c4d238d96abfbf2b5a03f7fb284a90bded763b0ecf190b19892e9ea81d755623d9abf4742d2132346c2116fbb4eaee5b220c9b9aefa0502e76bdf1d0bc32e59122bc5788b01ac82b9805f6c9e9c397dc30b2e7b3f1ac1179347eafa856852adac7c32ce56d42a69a3c1bf468322162baffffe416944df8412a5aa9fad7363651054b90c536f292eb686d0b373bf4e0a26f3527c88571d441a91cabf7ee3a4cd8a9651bb60cdef50960ee0ab347cfac5afc5cb8c66e1293c4e7463395a0664007c3f0c9bd99d5900d157d7764e28d44be6c2840cf81c55f618f51d4260f7cd51a5483863db7209e593581a227c5c7eff5753dcc44b98ceb9d1bc6872fd7933018818b7630b11e4fbd36c811ad726697761511e5ed1a4a181d4a01381275fab09ebfafeb842e510c42c8769c4cc5a2a2a22ddbce22e17e3dcaee7bd23b406d9837dbb7c4d26d60e17affe05db410fef01a3e78868d4e7e747a5c02454157945f2453413d25fcf178552fe7bba21df56a6fa8a03cd99b967ae1ca21f2a905176e28a31ac18a9a57809fb4f43c49079c16c7e354013ff9a6f9fef5e8e91b4d0320abaf5d82a962c61bde5a42eedd0667828ba2612d2b872bbe311da1483b33178af77a146fc80de90d72efb9a4aa99e0ecb507d3958dcc306f140c48b71578bc09b81353f20bfa0a5c98344493941eeec1b78b44c1f7a402de7698862961933e0ad087018ce06ebc19cbfb49208b830c5f433621a6a8545271c8da292fad7f57de1829fd7829f1993c4d55b882bda4d2868072c6506d864b44c610063c764ef4a91426928fb57c99a444ec1de7b6eb2afc28e97a5237636673e11be781f03559977a5a2413ba63eb551b27bbcc7bbe06ae1a2db6befd290f55e5f9db4a508a47ce62f6988592e1e742c5dca6965214779c9baa116ad0aaf47848e1fb45872ecf17a32926eaaf90e6bcc7f07667d5fc3a6087c2221d2277bde94f44aae2d3c9eac3ed178455f79c291f26da79205c39b625a260653a262067c8053c026a633af96767d6221aa3e97a945fb704c7372583dfa97a5a035a29e0880077f9c31f63e91177b6f7fab4efda1e4e4975d75e6e944596cc59b3b49077fc94317ab0cbf8a2bb9b664061a65d42ba4e47f4d141fe45d6865f7fe75e5ecbba3f18a6c0971e87fd0e6df2a2e589764dee93863d0ae78c774d5c98b5d526ef7b065d32215a677920a806cbeb4fd12d7250d66651fd67a21f4afd67c8515a0af1f24250dd541d0e7dacd967d40abc5d95cc17384e0a529f0153fe1d183ff109b890a2f2384c6ca9795c2c264cf8893198695b35d4aeb4e5f28f36595fb156e1601e8c5d31e5e6bfd944d51a643bf9ced0731f3d922c2cdf9fae31f2fd9dc17da3288d4f1a71418dd09c59379c2003e78668a1acc7f0d7439f22a4d54eab61269dac1d5f04cfba58c522c0bdeab52a59cdcebd842ee89ac5680b1b0ffb08216d2627546ab043f3b772f552bee69ccadf873c8c2533be90f0d9c52f50dd6970943be9c231cd99e5b74be1cbdef86dcba94410254d570e078427f1e97559f51bccaa38def0d35e7c1cdeb5998f2b7a64306569d496280bf84e8cffd155e2cb42cd88465ad3f7b1db739584cda848549f7e89fb5ccad4d078a8943c40b33bed45d1c2bd7413e5967a13b2b8e2359b1543e498614d4ccd0f59d134db2c53a3a20569d0dc2c65b6ff01eb7c67233</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">Hey, password is required here.</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"Here's something encrypted, password is required to continue reading.","more":"Here's something encrypted, password is required to continue reading.","origin":"<p>几天前把运动需要的一些东西又买了一下，最近也陆续都到了。但天气还是有点儿冷，我还是喜欢在外边跑道上跑步，于是想等几天暖和一点儿再开始跑步。但是我最近睡眠实在是不好，想跑一跑累一下，看能不能改善一下睡眠，于是今天就开始了，只不过去了学校里边的健身房。</p>\n<p>健身房里人比较少了，感觉10个人左右吧。我旁边的跑步机上应该是一个教授，问我过年不回去孤单吗。一下子想起来几天前我几个朋友知道我不回去以后，大多都会问过我类似的话。哎，我现在可能最不怕的就是孤单。想起来小学初中的时候，去食堂吃饭都是几个人一起去的，要是我自己一个人的话感觉很不舒服，甚至会觉得脸红丢人。但是现在一个人的时候越来越多，食堂一个人在吃饭也随处可见。对我来说这一切好像过度的都很自然，我没有什么不适，可能是我共情能力比较弱，我觉得这样挺好的。</p>\n<p>好像过几天就要过年了，第一次过年没回家，也不知道会是什么感觉。但应该没什么感觉吧，我对这种传统节日没有什么感情，我可以有我自己的春节，但我不喜欢这种被定义好的春节。很固执。</p>\n<p>很久没运动后这一次跑步只跑了40分钟，肩膀就酸的有点儿抬不动了，不如我旁边的教授。但是慢慢来吧，只希望自己能坚持下去。</p>\n","encrypt":true},{"title":"Hexo+GitHub搭建个人网站简要流程及遇到的问题","abbrlink":"89c9b15c","date":"2024-01-07T13:00:05.000Z","description":"hexo+guthub搭建个人网站","_content":"\n\n#  必要准备\n##  安装配置git和新建GitHub仓库\ngit的安装和配置没什么特别的。\n\n在GitHub中新建一个仓库，命名方式是：`“username.github.io”`，其中username是你的GitHub用户名，这个仓库的名字就是以后你的博客地址。\n\n##  安装配置Node和Hexo\n按照官方的参考文档安装即可，没有出现错误。\nHexo安装好以后，要新建一个博客的根目录Blog，在该目录中使用`hexo init`来初始化该目录（**若无特殊说明，本文后面运行的命令都是在这个根目录下运行的**）。然后就可以通过`hexo s`命令启动本地服务器，访问terminal给出的地址（一般是[http://localhost:4000/](http://localhost:4000/)）就可以浏览一下默认的博客状态\n# 将页面部署到GitHub\n\n正确安装Hexo后，在博客的根目录中有一个`_config.yml`文件，找到下面的位置，将`type`、`repo`、`branch`修改为对应的值，没有则添加。**注意这些标签冒号后面都要有一个空格，然后再输入对应的字符**。\n其中`repo`中的username就是你GitHub的用户名，`branch`要注意是main还是master.\n\n```bash\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\ndeploy:\n  type: git\n  repo: https://github.com/username/username.github.io.git\n  branch: main\n```\n配置好以后，为了方便部署，通过`npm install hexo-deployer-git --save`安装一个部署插件。安装好以后，使用`hexo g`生成静态网页，再通过`hexo d`即可部署到GitHub.\n\n\n\n>***运行`hexo d`时遇到的问题***：第一次部署会让你输入登录GitHub，要注意的是GitHub已经更改了命令行验证身份的方式，此处让你输入的password并不是登录密码，而是令牌。令牌的获取方式如下：\n> \n>GitHub主页——右上角头像——settings——左边导航栏往下滑Developer settings——Personal access tokens——Tokens(classic)——Generate new token(classic)\n>\n>然后会出现创建token的选项：名字随便写；到期时间也随便，过期了再生成一个就行；作用范围我没细看，但为了保证有足够的权限就全选了。有顾虑的朋友可以自己慢慢试一下缩小作用域，感觉只勾第一个应该就够用了。\n>\n>这样就会生成token，记得保存。然后在此运行`hexo d`，此时将刚刚生成的token作为password粘进去就可以了。\n\n若部署的时候还是有问题，看一下错误提示，大概率会是连接不上GitHub的错误，这个也是一直以来存在的问题，可以面向百度一下怎么解决。\n\n#  发布博客\n`Blog根目录/source/_posts/`该目录下的md文件就是你所发布的博客，但是要新发布一篇博客的时候，若简单的右键创建文件会带来麻烦，因此要用命令`hexo n “博客名”`再该目录下创建新md文件，这种方式新建的md文件会遵循默认配置。\n然后再依次运行`hexo cl`、`hexo g`、`hexo d`即可更新部署。\n`hexo cl`:用来清空`hexo g`生成的public缓存文件。当你对配置文件或者主题进行更改的时候，最好运行一下这个命令以保证更改生效。\n`hexo g`:生成public文件，里面存放了博客的相关内容，每次更改博客都要运行使更改生效。\n`hexo s`:启动本地服务器，每次更改时，可以先用这条命令看看是否生效了，如果效果是你想要的，再用`hexo d`部署到远程。\n`hexo d`:部署到远程服务器。\n\n#  生成永久链接\nhexo默认的博客链接是时间+博客名，这也就导致了如果有一天你改了原博客的名字，那之前的url将会失效，因此要更换一种生成链接的方法。\n首先使用`npm install hexo-abbrlink --save`安装要使用的插件，然后在跟目录配置文件`_config.yml`中找到下面的地方，并直接用下面的内容替换原文：\n\n```bash\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\nurl: https://B-White07.github.io.git\npermalink: posts/:abbrlink.html\nabbrlink:\n  alg: crc32      #support crc16(default) and crc32\n  rep: hex        #support dec(default) and hex\n  drafts: false   #(true)Process draft,(false)Do not process draft. false(default) \n```\n这样以后的文章链接就不会出现问题了。\n\n#  更换主题\n\n完成上述四步以后，就可以生成**丑陋的**个人主页了，但丑陋是我所不能接受的，因此需要换个主题。可以到[hexo主题](https://hexo.io/themes/)选择一个自己喜欢的主题，并按照主题说明进行相关配置即可。\n以后想更换主题要更改根目录配置文件`_config.yml`中的`theme`字段，在其后面添加对应的主题即可。另外如果你没有pug以及stylus的渲染器，可以使用`npm install hexo-renderer-pug hexo-renderer-stylus --save`下载安装以便更好的应用主题。\n\n#  配置主题遇到的很多问题\n这里问题就很多了，包括一些进阶设置、字体、标题、样式、背景等等，会专门写在[hexo配置主题遇到的问题](https://b-white07.github.io/posts/2e5955c9.html)中。\n","source":"_posts/Hexo-GitHub搭建个人网站简要流程及遇到的问题.md","raw":"---\ntitle: Hexo+GitHub搭建个人网站简要流程及遇到的问题\ntags:\n  - hexo\n  - GitHub\n  - 博客搭建\nabbrlink: 89c9b15c\ndate: 2024-01-07 21:00:05\ncategories: DIY\ndescription: hexo+guthub搭建个人网站\n---\n\n\n#  必要准备\n##  安装配置git和新建GitHub仓库\ngit的安装和配置没什么特别的。\n\n在GitHub中新建一个仓库，命名方式是：`“username.github.io”`，其中username是你的GitHub用户名，这个仓库的名字就是以后你的博客地址。\n\n##  安装配置Node和Hexo\n按照官方的参考文档安装即可，没有出现错误。\nHexo安装好以后，要新建一个博客的根目录Blog，在该目录中使用`hexo init`来初始化该目录（**若无特殊说明，本文后面运行的命令都是在这个根目录下运行的**）。然后就可以通过`hexo s`命令启动本地服务器，访问terminal给出的地址（一般是[http://localhost:4000/](http://localhost:4000/)）就可以浏览一下默认的博客状态\n# 将页面部署到GitHub\n\n正确安装Hexo后，在博客的根目录中有一个`_config.yml`文件，找到下面的位置，将`type`、`repo`、`branch`修改为对应的值，没有则添加。**注意这些标签冒号后面都要有一个空格，然后再输入对应的字符**。\n其中`repo`中的username就是你GitHub的用户名，`branch`要注意是main还是master.\n\n```bash\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\ndeploy:\n  type: git\n  repo: https://github.com/username/username.github.io.git\n  branch: main\n```\n配置好以后，为了方便部署，通过`npm install hexo-deployer-git --save`安装一个部署插件。安装好以后，使用`hexo g`生成静态网页，再通过`hexo d`即可部署到GitHub.\n\n\n\n>***运行`hexo d`时遇到的问题***：第一次部署会让你输入登录GitHub，要注意的是GitHub已经更改了命令行验证身份的方式，此处让你输入的password并不是登录密码，而是令牌。令牌的获取方式如下：\n> \n>GitHub主页——右上角头像——settings——左边导航栏往下滑Developer settings——Personal access tokens——Tokens(classic)——Generate new token(classic)\n>\n>然后会出现创建token的选项：名字随便写；到期时间也随便，过期了再生成一个就行；作用范围我没细看，但为了保证有足够的权限就全选了。有顾虑的朋友可以自己慢慢试一下缩小作用域，感觉只勾第一个应该就够用了。\n>\n>这样就会生成token，记得保存。然后在此运行`hexo d`，此时将刚刚生成的token作为password粘进去就可以了。\n\n若部署的时候还是有问题，看一下错误提示，大概率会是连接不上GitHub的错误，这个也是一直以来存在的问题，可以面向百度一下怎么解决。\n\n#  发布博客\n`Blog根目录/source/_posts/`该目录下的md文件就是你所发布的博客，但是要新发布一篇博客的时候，若简单的右键创建文件会带来麻烦，因此要用命令`hexo n “博客名”`再该目录下创建新md文件，这种方式新建的md文件会遵循默认配置。\n然后再依次运行`hexo cl`、`hexo g`、`hexo d`即可更新部署。\n`hexo cl`:用来清空`hexo g`生成的public缓存文件。当你对配置文件或者主题进行更改的时候，最好运行一下这个命令以保证更改生效。\n`hexo g`:生成public文件，里面存放了博客的相关内容，每次更改博客都要运行使更改生效。\n`hexo s`:启动本地服务器，每次更改时，可以先用这条命令看看是否生效了，如果效果是你想要的，再用`hexo d`部署到远程。\n`hexo d`:部署到远程服务器。\n\n#  生成永久链接\nhexo默认的博客链接是时间+博客名，这也就导致了如果有一天你改了原博客的名字，那之前的url将会失效，因此要更换一种生成链接的方法。\n首先使用`npm install hexo-abbrlink --save`安装要使用的插件，然后在跟目录配置文件`_config.yml`中找到下面的地方，并直接用下面的内容替换原文：\n\n```bash\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\nurl: https://B-White07.github.io.git\npermalink: posts/:abbrlink.html\nabbrlink:\n  alg: crc32      #support crc16(default) and crc32\n  rep: hex        #support dec(default) and hex\n  drafts: false   #(true)Process draft,(false)Do not process draft. false(default) \n```\n这样以后的文章链接就不会出现问题了。\n\n#  更换主题\n\n完成上述四步以后，就可以生成**丑陋的**个人主页了，但丑陋是我所不能接受的，因此需要换个主题。可以到[hexo主题](https://hexo.io/themes/)选择一个自己喜欢的主题，并按照主题说明进行相关配置即可。\n以后想更换主题要更改根目录配置文件`_config.yml`中的`theme`字段，在其后面添加对应的主题即可。另外如果你没有pug以及stylus的渲染器，可以使用`npm install hexo-renderer-pug hexo-renderer-stylus --save`下载安装以便更好的应用主题。\n\n#  配置主题遇到的很多问题\n这里问题就很多了，包括一些进阶设置、字体、标题、样式、背景等等，会专门写在[hexo配置主题遇到的问题](https://b-white07.github.io/posts/2e5955c9.html)中。\n","slug":"Hexo-GitHub搭建个人网站简要流程及遇到的问题","published":1,"updated":"2024-01-09T09:23:02.754Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gav0009biubhs5o6tef","content":"<h1>必要准备</h1>\n<h2 id=\"安装配置git和新建GitHub仓库\">安装配置git和新建GitHub仓库</h2>\n<p>git的安装和配置没什么特别的。</p>\n<p>在GitHub中新建一个仓库，命名方式是：<code>“username.github.io”</code>，其中username是你的GitHub用户名，这个仓库的名字就是以后你的博客地址。</p>\n<h2 id=\"安装配置Node和Hexo\">安装配置Node和Hexo</h2>\n<p>按照官方的参考文档安装即可，没有出现错误。<br>\nHexo安装好以后，要新建一个博客的根目录Blog，在该目录中使用<code>hexo init</code>来初始化该目录（<strong>若无特殊说明，本文后面运行的命令都是在这个根目录下运行的</strong>）。然后就可以通过<code>hexo s</code>命令启动本地服务器，访问terminal给出的地址（一般是<a href=\"http://localhost:4000/\">http://localhost:4000/</a>）就可以浏览一下默认的博客状态</p>\n<h1>将页面部署到GitHub</h1>\n<p>正确安装Hexo后，在博客的根目录中有一个<code>_config.yml</code>文件，找到下面的位置，将<code>type</code>、<code>repo</code>、<code>branch</code>修改为对应的值，没有则添加。<strong>注意这些标签冒号后面都要有一个空格，然后再输入对应的字符</strong>。<br>\n其中<code>repo</code>中的username就是你GitHub的用户名，<code>branch</code>要注意是main还是master.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">  repo: https://github.com/username/username.github.io.git</span><br><span class=\"line\">  branch: main</span><br></pre></td></tr></table></figure>\n<p>配置好以后，为了方便部署，通过<code>npm install hexo-deployer-git --save</code>安装一个部署插件。安装好以后，使用<code>hexo g</code>生成静态网页，再通过<code>hexo d</code>即可部署到GitHub.</p>\n<blockquote>\n<p><em><strong>运行<code>hexo d</code>时遇到的问题</strong></em>：第一次部署会让你输入登录GitHub，要注意的是GitHub已经更改了命令行验证身份的方式，此处让你输入的password并不是登录密码，而是令牌。令牌的获取方式如下：</p>\n<p>GitHub主页——右上角头像——settings——左边导航栏往下滑Developer settings——Personal access tokens——Tokens(classic)——Generate new token(classic)</p>\n<p>然后会出现创建token的选项：名字随便写；到期时间也随便，过期了再生成一个就行；作用范围我没细看，但为了保证有足够的权限就全选了。有顾虑的朋友可以自己慢慢试一下缩小作用域，感觉只勾第一个应该就够用了。</p>\n<p>这样就会生成token，记得保存。然后在此运行<code>hexo d</code>，此时将刚刚生成的token作为password粘进去就可以了。</p>\n</blockquote>\n<p>若部署的时候还是有问题，看一下错误提示，大概率会是连接不上GitHub的错误，这个也是一直以来存在的问题，可以面向百度一下怎么解决。</p>\n<h1>发布博客</h1>\n<p><code>Blog根目录/source/_posts/</code>该目录下的md文件就是你所发布的博客，但是要新发布一篇博客的时候，若简单的右键创建文件会带来麻烦，因此要用命令<code>hexo n “博客名”</code>再该目录下创建新md文件，这种方式新建的md文件会遵循默认配置。<br>\n然后再依次运行<code>hexo cl</code>、<code>hexo g</code>、<code>hexo d</code>即可更新部署。<br>\n<code>hexo cl</code>:用来清空<code>hexo g</code>生成的public缓存文件。当你对配置文件或者主题进行更改的时候，最好运行一下这个命令以保证更改生效。<br>\n<code>hexo g</code>:生成public文件，里面存放了博客的相关内容，每次更改博客都要运行使更改生效。<br>\n<code>hexo s</code>:启动本地服务器，每次更改时，可以先用这条命令看看是否生效了，如果效果是你想要的，再用<code>hexo d</code>部署到远程。<br>\n<code>hexo d</code>:部署到远程服务器。</p>\n<h1>生成永久链接</h1>\n<p>hexo默认的博客链接是时间+博客名，这也就导致了如果有一天你改了原博客的名字，那之前的url将会失效，因此要更换一种生成链接的方法。<br>\n首先使用<code>npm install hexo-abbrlink --save</code>安装要使用的插件，然后在跟目录配置文件<code>_config.yml</code>中找到下面的地方，并直接用下面的内容替换原文：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class=\"line\">url: https://B-White07.github.io.git</span><br><span class=\"line\">permalink: posts/:abbrlink.html</span><br><span class=\"line\">abbrlink:</span><br><span class=\"line\">  alg: crc32      <span class=\"comment\">#support crc16(default) and crc32</span></span><br><span class=\"line\">  rep: hex        <span class=\"comment\">#support dec(default) and hex</span></span><br><span class=\"line\">  drafts: <span class=\"literal\">false</span>   <span class=\"comment\">#(true)Process draft,(false)Do not process draft. false(default) </span></span><br></pre></td></tr></table></figure>\n<p>这样以后的文章链接就不会出现问题了。</p>\n<h1>更换主题</h1>\n<p>完成上述四步以后，就可以生成<strong>丑陋的</strong>个人主页了，但丑陋是我所不能接受的，因此需要换个主题。可以到<a href=\"https://hexo.io/themes/\">hexo主题</a>选择一个自己喜欢的主题，并按照主题说明进行相关配置即可。<br>\n以后想更换主题要更改根目录配置文件<code>_config.yml</code>中的<code>theme</code>字段，在其后面添加对应的主题即可。另外如果你没有pug以及stylus的渲染器，可以使用<code>npm install hexo-renderer-pug hexo-renderer-stylus --save</code>下载安装以便更好的应用主题。</p>\n<h1>配置主题遇到的很多问题</h1>\n<p>这里问题就很多了，包括一些进阶设置、字体、标题、样式、背景等等，会专门写在<a href=\"https://b-white07.github.io/posts/2e5955c9.html\">hexo配置主题遇到的问题</a>中。</p>\n","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":"<h1>必要准备</h1>\n<h2 id=\"安装配置git和新建GitHub仓库\">安装配置git和新建GitHub仓库</h2>\n<p>git的安装和配置没什么特别的。</p>\n<p>在GitHub中新建一个仓库，命名方式是：<code>“username.github.io”</code>，其中username是你的GitHub用户名，这个仓库的名字就是以后你的博客地址。</p>\n<h2 id=\"安装配置Node和Hexo\">安装配置Node和Hexo</h2>\n<p>按照官方的参考文档安装即可，没有出现错误。<br>\nHexo安装好以后，要新建一个博客的根目录Blog，在该目录中使用<code>hexo init</code>来初始化该目录（<strong>若无特殊说明，本文后面运行的命令都是在这个根目录下运行的</strong>）。然后就可以通过<code>hexo s</code>命令启动本地服务器，访问terminal给出的地址（一般是<a href=\"http://localhost:4000/\">http://localhost:4000/</a>）就可以浏览一下默认的博客状态</p>\n<h1>将页面部署到GitHub</h1>\n<p>正确安装Hexo后，在博客的根目录中有一个<code>_config.yml</code>文件，找到下面的位置，将<code>type</code>、<code>repo</code>、<code>branch</code>修改为对应的值，没有则添加。<strong>注意这些标签冒号后面都要有一个空格，然后再输入对应的字符</strong>。<br>\n其中<code>repo</code>中的username就是你GitHub的用户名，<code>branch</code>要注意是main还是master.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">  repo: https://github.com/username/username.github.io.git</span><br><span class=\"line\">  branch: main</span><br></pre></td></tr></table></figure>\n<p>配置好以后，为了方便部署，通过<code>npm install hexo-deployer-git --save</code>安装一个部署插件。安装好以后，使用<code>hexo g</code>生成静态网页，再通过<code>hexo d</code>即可部署到GitHub.</p>\n<blockquote>\n<p><em><strong>运行<code>hexo d</code>时遇到的问题</strong></em>：第一次部署会让你输入登录GitHub，要注意的是GitHub已经更改了命令行验证身份的方式，此处让你输入的password并不是登录密码，而是令牌。令牌的获取方式如下：</p>\n<p>GitHub主页——右上角头像——settings——左边导航栏往下滑Developer settings——Personal access tokens——Tokens(classic)——Generate new token(classic)</p>\n<p>然后会出现创建token的选项：名字随便写；到期时间也随便，过期了再生成一个就行；作用范围我没细看，但为了保证有足够的权限就全选了。有顾虑的朋友可以自己慢慢试一下缩小作用域，感觉只勾第一个应该就够用了。</p>\n<p>这样就会生成token，记得保存。然后在此运行<code>hexo d</code>，此时将刚刚生成的token作为password粘进去就可以了。</p>\n</blockquote>\n<p>若部署的时候还是有问题，看一下错误提示，大概率会是连接不上GitHub的错误，这个也是一直以来存在的问题，可以面向百度一下怎么解决。</p>\n<h1>发布博客</h1>\n<p><code>Blog根目录/source/_posts/</code>该目录下的md文件就是你所发布的博客，但是要新发布一篇博客的时候，若简单的右键创建文件会带来麻烦，因此要用命令<code>hexo n “博客名”</code>再该目录下创建新md文件，这种方式新建的md文件会遵循默认配置。<br>\n然后再依次运行<code>hexo cl</code>、<code>hexo g</code>、<code>hexo d</code>即可更新部署。<br>\n<code>hexo cl</code>:用来清空<code>hexo g</code>生成的public缓存文件。当你对配置文件或者主题进行更改的时候，最好运行一下这个命令以保证更改生效。<br>\n<code>hexo g</code>:生成public文件，里面存放了博客的相关内容，每次更改博客都要运行使更改生效。<br>\n<code>hexo s</code>:启动本地服务器，每次更改时，可以先用这条命令看看是否生效了，如果效果是你想要的，再用<code>hexo d</code>部署到远程。<br>\n<code>hexo d</code>:部署到远程服务器。</p>\n<h1>生成永久链接</h1>\n<p>hexo默认的博客链接是时间+博客名，这也就导致了如果有一天你改了原博客的名字，那之前的url将会失效，因此要更换一种生成链接的方法。<br>\n首先使用<code>npm install hexo-abbrlink --save</code>安装要使用的插件，然后在跟目录配置文件<code>_config.yml</code>中找到下面的地方，并直接用下面的内容替换原文：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class=\"line\">url: https://B-White07.github.io.git</span><br><span class=\"line\">permalink: posts/:abbrlink.html</span><br><span class=\"line\">abbrlink:</span><br><span class=\"line\">  alg: crc32      <span class=\"comment\">#support crc16(default) and crc32</span></span><br><span class=\"line\">  rep: hex        <span class=\"comment\">#support dec(default) and hex</span></span><br><span class=\"line\">  drafts: <span class=\"literal\">false</span>   <span class=\"comment\">#(true)Process draft,(false)Do not process draft. false(default) </span></span><br></pre></td></tr></table></figure>\n<p>这样以后的文章链接就不会出现问题了。</p>\n<h1>更换主题</h1>\n<p>完成上述四步以后，就可以生成<strong>丑陋的</strong>个人主页了，但丑陋是我所不能接受的，因此需要换个主题。可以到<a href=\"https://hexo.io/themes/\">hexo主题</a>选择一个自己喜欢的主题，并按照主题说明进行相关配置即可。<br>\n以后想更换主题要更改根目录配置文件<code>_config.yml</code>中的<code>theme</code>字段，在其后面添加对应的主题即可。另外如果你没有pug以及stylus的渲染器，可以使用<code>npm install hexo-renderer-pug hexo-renderer-stylus --save</code>下载安装以便更好的应用主题。</p>\n<h1>配置主题遇到的很多问题</h1>\n<p>这里问题就很多了，包括一些进阶设置、字体、标题、样式、背景等等，会专门写在<a href=\"https://b-white07.github.io/posts/2e5955c9.html\">hexo配置主题遇到的问题</a>中。</p>\n"},{"title":"CLion实用快捷键","abbrlink":"813976ae","date":"2024-01-06T07:58:33.000Z","description":null,"_content":"\n<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<table>\n\t<tr>\t<th>功能<th>快捷键</tr>\n\t<tr>\t<td>运行<td>ctrl r</tr>\n\t<tr>\t<td>debug<td>ctrl d</tr>\n\t<tr>\t<td>注释<td>command /</tr>\n\t<tr>\t<td>多行注释<td>shift command /</tr>\n\t<tr>\t<td>格式化代码<td>option command L</tr>\n\t<tr>\t<td>删除当前行<td>command delete</tr>\n\t<tr>\t<td>复制当前行到下一行<td>command d</tr>\n\t<tr>\t<td>整块移动<td>command shift 方向</tr>\n\t<tr>\t<td>缩进<td>shift tab</tr>\n\t<tr>\t<td>搜索<td>shift shift</tr>\n\t<tr>  <td>待更新...<td></tr>\n</table>\n","source":"_posts/CLion实用快捷键.md","raw":"---\ntitle: CLion实用快捷键\nabbrlink: 813976ae\ndate: 2024-01-06 15:58:33\ntags: shortcut\ncategories: shortcut\ndescription: \n---\n\n<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<table>\n\t<tr>\t<th>功能<th>快捷键</tr>\n\t<tr>\t<td>运行<td>ctrl r</tr>\n\t<tr>\t<td>debug<td>ctrl d</tr>\n\t<tr>\t<td>注释<td>command /</tr>\n\t<tr>\t<td>多行注释<td>shift command /</tr>\n\t<tr>\t<td>格式化代码<td>option command L</tr>\n\t<tr>\t<td>删除当前行<td>command delete</tr>\n\t<tr>\t<td>复制当前行到下一行<td>command d</tr>\n\t<tr>\t<td>整块移动<td>command shift 方向</tr>\n\t<tr>\t<td>缩进<td>shift tab</tr>\n\t<tr>\t<td>搜索<td>shift shift</tr>\n\t<tr>  <td>待更新...<td></tr>\n</table>\n","slug":"CLion实用快捷键","published":1,"updated":"2024-01-09T09:21:28.922Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gav000abiub0ie5gvcj","content":"<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<table>\n\t<tr>\t<th>功能<th>快捷键</tr>\n\t<tr>\t<td>运行<td>ctrl r</tr>\n\t<tr>\t<td>debug<td>ctrl d</tr>\n\t<tr>\t<td>注释<td>command /</tr>\n\t<tr>\t<td>多行注释<td>shift command /</tr>\n\t<tr>\t<td>格式化代码<td>option command L</tr>\n\t<tr>\t<td>删除当前行<td>command delete</tr>\n\t<tr>\t<td>复制当前行到下一行<td>command d</tr>\n\t<tr>\t<td>整块移动<td>command shift 方向</tr>\n\t<tr>\t<td>缩进<td>shift tab</tr>\n\t<tr>\t<td>搜索<td>shift shift</tr>\n\t<tr>  <td>待更新...<td></tr>\n</table>\n","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":"<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<table>\n\t<tr>\t<th>功能<th>快捷键</tr>\n\t<tr>\t<td>运行<td>ctrl r</tr>\n\t<tr>\t<td>debug<td>ctrl d</tr>\n\t<tr>\t<td>注释<td>command /</tr>\n\t<tr>\t<td>多行注释<td>shift command /</tr>\n\t<tr>\t<td>格式化代码<td>option command L</tr>\n\t<tr>\t<td>删除当前行<td>command delete</tr>\n\t<tr>\t<td>复制当前行到下一行<td>command d</tr>\n\t<tr>\t<td>整块移动<td>command shift 方向</tr>\n\t<tr>\t<td>缩进<td>shift tab</tr>\n\t<tr>\t<td>搜索<td>shift shift</tr>\n\t<tr>  <td>待更新...<td></tr>\n</table>\n"},{"title":"C++STL","description":"STL常用的几个容器","abbrlink":"366bea49","date":"2024-06-14T13:57:28.000Z","_content":"\n# string 容器\n\n## string 基本概念\n\n**本质：**\n\n- string 是 C++风格的字符串，而 string 本质上是一个类\n\n**string 和 char \\* 区别：**\n\n- char \\* 是一个指针\n- string 是一个类，类内部封装了 char\\*，管理这个字符串，是一个 char\\*型的容器。\n\n**特点：**\n\nstring 类内部封装了很多成员方法\n\n例如：查找 find，拷贝 copy，删除 delete 替换 replace，插入 insert\n\nstring 管理 char\\*所分配的内存，不用担心复制越界和取值越界等，由类内部进行负责\n\n## string 构造函数\n\n构造函数原型：\n\n- `string();` //创建一个空的字符串 例如: string str;\n- `string(const char* s);` //使用字符串 s 初始化\n- `string(const string& str);` //使用一个 string 对象初始化另一个 string 对象\n- `string(int n, char c);` //使用 n 个字符 c 初始化\n\n**示例：**\n\n```C++\n#include <string>\n//string构造\nvoid test01()\n{\n\tstring s1; //创建空字符串，调用无参构造函数\n\tcout << \"str1 = \" << s1 << endl;\n\n\tconst char* str = \"hello world\";\n\tstring s2(str); //把c_string转换成了string\n\n\tcout << \"str2 = \" << s2 << endl;\n\n\tstring s3(s2); //调用拷贝构造函数\n\tcout << \"str3 = \" << s3 << endl;\n\n\tstring s4(10, 'a');\n\tcout << \"str3 = \" << s3 << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：string 的多种构造方式没有可比性，灵活使用即可\n\n## string 赋值操作\n\n功能描述：\n\n- 给 string 字符串进行赋值\n\n赋值的函数原型：\n\n- `string& operator=(const char* s);` //char\\*类型字符串 赋值给当前的字符串\n- `string& operator=(const string &s);` //把字符串 s 赋给当前的字符串\n- `string& operator=(char c);` //字符赋值给当前的字符串\n- `string& assign(const char *s);` //把字符串 s 赋给当前的字符串\n- `string& assign(const char *s, int n);` //把字符串 s 的前 n 个字符赋给当前的字符串\n- `string& assign(const string &s);` //把字符串 s 赋给当前字符串\n- `string& assign(int n, char c);` //用 n 个字符 c 赋给当前字符串\n\n**示例：**\n\n```C++\n//赋值\nvoid test01()\n{\n\tstring str1;\n\tstr1 = \"hello world\";\n\tcout << \"str1 = \" << str1 << endl;\n\n\tstring str2;\n\tstr2 = str1;\n\tcout << \"str2 = \" << str2 << endl;\n\n\tstring str3;\n\tstr3 = 'a';\n\tcout << \"str3 = \" << str3 << endl;\n\n\tstring str4;\n\tstr4.assign(\"hello c++\");\n\tcout << \"str4 = \" << str4 << endl;\n\n\tstring str5;\n\tstr5.assign(\"hello c++\",5);\n\tcout << \"str5 = \" << str5 << endl;\n\n\n\tstring str6;\n\tstr6.assign(str5);\n\tcout << \"str6 = \" << str6 << endl;\n\n\tstring str7;\n\tstr7.assign(5, 'x');\n\tcout << \"str7 = \" << str7 << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n​ string 的赋值方式很多，`operator=` 这种方式是比较实用的\n\n## string 字符串拼接\n\n**功能描述：**\n\n- 实现在字符串末尾拼接字符串\n\n**函数原型：**\n\n- `string& operator+=(const char* str);` //重载+=操作符\n- `string& operator+=(const char c);` //重载+=操作符\n- `string& operator+=(const string& str);` //重载+=操作符\n- `string& append(const char *s); ` //把字符串 s 连接到当前字符串结尾\n- `string& append(const char *s, int n);` //把字符串 s 的前 n 个字符连接到当前字符串结尾\n- `string& append(const string &s);` //同 operator+=(const string& str)\n- `string& append(const string &s, int pos, int n);`//字符串 s 中从 pos 开始的 n 个字符连接到字符串结尾\n\n**示例：**\n\n```C++\n//字符串拼接\nvoid test01()\n{\n\tstring str1 = \"我\";\n\n\tstr1 += \"爱玩游戏\";\n\n\tcout << \"str1 = \" << str1 << endl;\n\n\tstr1 += ':';\n\n\tcout << \"str1 = \" << str1 << endl;\n\n\tstring str2 = \"LOL DNF\";\n\n\tstr1 += str2;\n\n\tcout << \"str1 = \" << str1 << endl;\n\n\tstring str3 = \"I\";\n\tstr3.append(\" love \");\n\tstr3.append(\"game abcde\", 4);\n\t//str3.append(str2);\n\tstr3.append(str2, 4, 3); // 从下标4位置开始 ，截取3个字符，拼接到字符串末尾\n\tcout << \"str3 = \" << str3 << endl;\n}\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：字符串拼接的重载版本很多，初学阶段记住几种即可\n\n## string 查找和替换\n\n**功能描述：**\n\n- 查找：查找指定字符串是否存在\n- 替换：在指定的位置替换字符串\n\n**函数原型：**\n\n- `int find(const string& str, int pos = 0) const;` //查找 str 第一次出现位置,从 pos 开始查找\n- `int find(const char* s, int pos = 0) const; ` //查找 s 第一次出现位置,从 pos 开始查找\n- `int find(const char* s, int pos, int n) const; ` //从 pos 位置查找 s 的前 n 个字符第一次位置\n- `int find(const char c, int pos = 0) const; ` //查找字符 c 第一次出现位置\n- `int rfind(const string& str, int pos = npos) const;` //查找 str 最后一次位置,从 pos 开始查找\n- `int rfind(const char* s, int pos = npos) const;` //查找 s 最后一次出现位置,从 pos 开始查找\n- `int rfind(const char* s, int pos, int n) const;` //从 pos 查找 s 的前 n 个字符最后一次位置\n- `int rfind(const char c, int pos = 0) const;  ` //查找字符 c 最后一次出现位置\n- `string& replace(int pos, int n, const string& str); ` //替换从 pos 开始 n 个字符为字符串 str\n- `string& replace(int pos, int n,const char* s); ` //替换从 pos 开始的 n 个字符为字符串 s\n\n**示例：**\n\n```C++\n//查找和替换\nvoid test01()\n{\n\t//查找\n\tstring str1 = \"abcdefgde\";\n\n\tint pos = str1.find(\"de\");\n\n\tif (pos == -1)\n\t{\n\t\tcout << \"未找到\" << endl;\n\t}\n\telse\n\t{\n\t\tcout << \"pos = \" << pos << endl;\n\t}\n\n\n\tpos = str1.rfind(\"de\");\n\n\tcout << \"pos = \" << pos << endl;\n\n}\n\nvoid test02()\n{\n\t//替换\n\tstring str1 = \"abcdefgde\";\n\tstr1.replace(1, 3, \"1111\");\n\n\tcout << \"str1 = \" << str1 << endl;\n}\n\nint main() {\n\n\t//test01();\n\t//test02();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- find 查找是从左往后，rfind 从右往左\n- find 找到字符串后返回查找的第一个字符位置，找不到返回-1\n- replace 在替换时，要指定从哪个位置起，多少个字符，替换成什么样的字符串\n\n## string 字符串比较\n\n**功能描述：**\n\n- 字符串之间的比较\n\n**比较方式：**\n\n- 字符串比较是按字符的 ASCII 码进行对比\n\n= 返回 0\n\n\\> 返回 1\n\n< 返回 -1\n\n**函数原型：**\n\n- `int compare(const string &s) const; ` //与字符串 s 比较\n- `int compare(const char *s) const;` //与字符串 s 比较\n\n**示例：**\n\n```C++\n//字符串比较\nvoid test01()\n{\n\n\tstring s1 = \"hello\";\n\tstring s2 = \"aello\";\n\n\tint ret = s1.compare(s2);\n\n\tif (ret == 0) {\n\t\tcout << \"s1 等于 s2\" << endl;\n\t}\n\telse if (ret > 0)\n\t{\n\t\tcout << \"s1 大于 s2\" << endl;\n\t}\n\telse\n\t{\n\t\tcout << \"s1 小于 s2\" << endl;\n\t}\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：字符串对比主要是用于比较两个字符串是否相等，判断谁大谁小的意义并不是很大\n\n## string 字符存取\n\nstring 中单个字符存取方式有两种\n\n- `char& operator[](int n); ` //通过[]方式取字符\n- `char& at(int n);   ` //通过 at 方法获取字符\n\n**示例：**\n\n```C++\nvoid test01()\n{\n\tstring str = \"hello world\";\n\n\tfor (int i = 0; i < str.size(); i++)\n\t{\n\t\tcout << str[i] << \" \";\n\t}\n\tcout << endl;\n\n\tfor (int i = 0; i < str.size(); i++)\n\t{\n\t\tcout << str.at(i) << \" \";\n\t}\n\tcout << endl;\n\n\n\t//字符修改\n\tstr[0] = 'x';\n\tstr.at(1) = 'x';\n\tcout << str << endl;\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：string 字符串中单个字符存取有两种方式，利用 [ ] 或 at\n\n## string 插入和删除\n\n**功能描述：**\n\n- 对 string 字符串进行插入和删除字符操作\n\n**函数原型：**\n\n- `string& insert(int pos, const char* s);  ` //插入字符串\n- `string& insert(int pos, const string& str); ` //插入字符串\n- `string& insert(int pos, int n, char c);` //在指定位置插入 n 个字符 c\n- `string& erase(int pos, int n = npos);` //删除从 Pos 开始的 n 个字符\n\n**示例：**\n\n```C++\n//字符串插入和删除\nvoid test01()\n{\n\tstring str = \"hello\";\n\tstr.insert(1, \"111\");\n\tcout << str << endl;\n\n\tstr.erase(1, 3);  //从1号位置开始3个字符\n\tcout << str << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n**总结：**插入和删除的起始下标都是从 0 开始\n\n## string 子串\n\n**功能描述：**\n\n- 从字符串中获取想要的子串\n\n**函数原型：**\n\n- `string substr(int pos = 0, int n = npos) const;` //返回由 pos 开始的 n 个字符组成的字符串\n\n**示例：**\n\n```C++\n//子串\nvoid test01()\n{\n\n\tstring str = \"abcdefg\";\n\tstring subStr = str.substr(1, 3);\n\tcout << \"subStr = \" << subStr << endl;\n\n\tstring email = \"hello@sina.com\";\n\tint pos = email.find(\"@\");\n\tstring username = email.substr(0, pos);\n\tcout << \"username: \" << username << endl;\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n**总结：**灵活的运用求子串功能，可以在实际开发中获取有效的信息\n\n# vector 容器\n\n## vector 基本概念\n\n**功能：**\n\n- vector 数据结构和**数组非常相似**，也称为**单端数组**\n\n**vector 与普通数组区别：**\n\n- 不同之处在于数组是静态空间，而 vector 可以**动态扩展**\n\n**动态扩展：**\n\n- 并不是在原空间之后续接新空间，而是找更大的内存空间，然后将原数据拷贝新空间，释放原空间\n\n- vector 容器的迭代器是支持随机访问的迭代器\n\n## vector 构造函数\n\n**功能描述：**\n\n- 创建 vector 容器\n\n**函数原型：**\n\n- `vector<T> v; ` //采用模板实现类实现，默认构造函数\n- `vector(v.begin(), v.end());   ` //将 v[begin(), end())区间中的元素拷贝给本身。\n- `vector(n, elem);` //构造函数将 n 个 elem 拷贝给本身。\n- `vector(const vector &vec);` //拷贝构造函数。\n\n**示例：**\n\n```C++\n#include <vector>\n\nvoid printVector(vector<int>& v) {\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tvector<int> v1; //无参构造\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv1.push_back(i);\n\t}\n\tprintVector(v1);\n\n\tvector<int> v2(v1.begin(), v1.end());\n\tprintVector(v2);\n\n\tvector<int> v3(10, 100);\n\tprintVector(v3);\n\n\tvector<int> v4(v3);\n\tprintVector(v4);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n**总结：**vector 的多种构造方式没有可比性，灵活使用即可\n\n## vector 赋值操作\n\n**功能描述：**\n\n- 给 vector 容器进行赋值\n\n**函数原型：**\n\n- `vector& operator=(const vector &vec);`//重载等号操作符\n\n- `assign(beg, end);` //将[beg, end)区间中的数据拷贝赋值给本身。\n- `assign(n, elem);` //将 n 个 elem 拷贝赋值给本身。\n\n**示例：**\n\n```C++\n#include <vector>\n\nvoid printVector(vector<int>& v) {\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\n//赋值操作\nvoid test01()\n{\n\tvector<int> v1; //无参构造\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv1.push_back(i);\n\t}\n\tprintVector(v1);\n\n\tvector<int>v2;\n\tv2 = v1;\n\tprintVector(v2);\n\n\tvector<int>v3;\n\tv3.assign(v1.begin(), v1.end());\n\tprintVector(v3);\n\n\tvector<int>v4;\n\tv4.assign(10, 100);\n\tprintVector(v4);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n\n```\n\n总结： vector 赋值方式比较简单，使用 operator=，或者 assign 都可以\n\n## vector 容量和大小\n\n**功能描述：**\n\n- 对 vector 容器的容量和大小操作\n\n**函数原型：**\n\n- `empty(); ` //判断容器是否为空\n\n- `capacity();` //容器的容量\n\n- `size();` //返回容器中元素的个数\n\n- `resize(int num);` //重新指定容器的长度为 num，若容器变长，则以默认值填充新位置。\n\n  ​ //如果容器变短，则末尾超出容器长度的元素被删除。\n\n- `resize(int num, elem);` //重新指定容器的长度为 num，若容器变长，则以 elem 值填充新位置。\n\n  ​ //如果容器变短，则末尾超出容器长度的元素被删除\n\n**示例：**\n\n```C++\n#include <vector>\n\nvoid printVector(vector<int>& v) {\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tvector<int> v1;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv1.push_back(i);\n\t}\n\tprintVector(v1);\n\tif (v1.empty())\n\t{\n\t\tcout << \"v1为空\" << endl;\n\t}\n\telse\n\t{\n\t\tcout << \"v1不为空\" << endl;\n\t\tcout << \"v1的容量 = \" << v1.capacity() << endl;\n\t\tcout << \"v1的大小 = \" << v1.size() << endl;\n\t}\n\n\t//resize 重新指定大小 ，若指定的更大，默认用0填充新位置，可以利用重载版本替换默认填充\n\tv1.resize(15,10);\n\tprintVector(v1);\n\n\t//resize 重新指定大小 ，若指定的更小，超出部分元素被删除\n\tv1.resize(5);\n\tprintVector(v1);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n\n```\n\n总结：\n\n- 判断是否为空 --- empty\n- 返回元素个数 --- size\n- 返回容器容量 --- capacity\n- 重新指定大小 --- resize\n\n## vector 插入和删除\n\n**功能描述：**\n\n- 对 vector 容器进行插入、删除操作\n\n**函数原型：**\n\n- `push_back(ele);` //尾部插入元素 ele\n- `pop_back();` //删除最后一个元素\n- `insert(const_iterator pos, ele);` //迭代器指向位置 pos 插入元素 ele\n- `insert(const_iterator pos, int count,ele);`//迭代器指向位置 pos 插入 count 个元素 ele\n- `erase(const_iterator pos);` //删除迭代器指向的元素\n- `erase(const_iterator start, const_iterator end);`//删除迭代器从 start 到 end 之间的元素\n- `clear();` //删除容器中所有元素\n\n**示例：**\n\n```C++\n\n#include <vector>\n\nvoid printVector(vector<int>& v) {\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\n//插入和删除\nvoid test01()\n{\n\tvector<int> v1;\n\t//尾插\n\tv1.push_back(10);\n\tv1.push_back(20);\n\tv1.push_back(30);\n\tv1.push_back(40);\n\tv1.push_back(50);\n\tprintVector(v1);\n\t//尾删\n\tv1.pop_back();\n\tprintVector(v1);\n\t//插入\n\tv1.insert(v1.begin(), 100);\n\tprintVector(v1);\n\n\tv1.insert(v1.begin(), 2, 1000);\n\tprintVector(v1);\n\n\t//删除\n\tv1.erase(v1.begin());\n\tprintVector(v1);\n\n\t//清空\n\tv1.erase(v1.begin(), v1.end());\n\tv1.clear();\n\tprintVector(v1);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 尾插 --- push_back\n- 尾删 --- pop_back\n- 插入 --- insert (位置迭代器)\n- 删除 --- erase （位置迭代器）\n- 清空 --- clear\n\n## vector 数据存取\n\n**功能描述：**\n\n- 对 vector 中的数据的存取操作\n\n**函数原型：**\n\n- `at(int idx); ` //返回索引 idx 所指的数据\n- `operator[]; ` //返回索引 idx 所指的数据\n- `front(); ` //返回容器中第一个数据元素\n- `back();` //返回容器中最后一个数据元素\n\n**示例：**\n\n```C++\n#include <vector>\n\nvoid test01()\n{\n\tvector<int>v1;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv1.push_back(i);\n\t}\n\n\tfor (int i = 0; i < v1.size(); i++)\n\t{\n\t\tcout << v1[i] << \" \";\n\t}\n\tcout << endl;\n\n\tfor (int i = 0; i < v1.size(); i++)\n\t{\n\t\tcout << v1.at(i) << \" \";\n\t}\n\tcout << endl;\n\n\tcout << \"v1的第一个元素为： \" << v1.front() << endl;\n\tcout << \"v1的最后一个元素为： \" << v1.back() << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 除了用迭代器获取 vector 容器中元素，[ ]和 at 也可以\n- front 返回容器第一个元素\n- back 返回容器最后一个元素\n\n## vector 互换容器\n\n**功能描述：**\n\n- 实现两个容器内元素进行互换\n\n**函数原型：**\n\n- `swap(vec);` // 将 vec 与本身的元素互换\n\n**示例：**\n\n```C++\n#include <vector>\n\nvoid printVector(vector<int>& v) {\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tvector<int>v1;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv1.push_back(i);\n\t}\n\tprintVector(v1);\n\n\tvector<int>v2;\n\tfor (int i = 10; i > 0; i--)\n\t{\n\t\tv2.push_back(i);\n\t}\n\tprintVector(v2);\n\n\t//互换容器\n\tcout << \"互换后\" << endl;\n\tv1.swap(v2);\n\tprintVector(v1);\n\tprintVector(v2);\n}\n\nvoid test02()\n{\n\tvector<int> v;\n\tfor (int i = 0; i < 100000; i++) {\n\t\tv.push_back(i);\n\t}\n\n\tcout << \"v的容量为：\" << v.capacity() << endl;\n\tcout << \"v的大小为：\" << v.size() << endl;\n\n\tv.resize(3);\n\n\tcout << \"v的容量为：\" << v.capacity() << endl;\n\tcout << \"v的大小为：\" << v.size() << endl;\n\n\t//收缩内存\n\tvector<int>(v).swap(v); //匿名对象\n\n\tcout << \"v的容量为：\" << v.capacity() << endl;\n\tcout << \"v的大小为：\" << v.size() << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\ttest02();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n\n```\n\n总结：swap 可以使两个容器互换，可以达到实用的收缩内存效果\n\n## vector 预留空间\n\n**功能描述：**\n\n- 减少 vector 在动态扩展容量时的扩展次数\n\n**函数原型：**\n\n- `reserve(int len);`//容器预留 len 个元素长度，预留位置不初始化，元素不可访问。\n\n  ​\n\n**示例：**\n\n```C++\n#include <vector>\n\nvoid test01()\n{\n\tvector<int> v;\n\n\t//预留空间\n\tv.reserve(100000);\n\n\tint num = 0;\n\tint* p = NULL;\n\tfor (int i = 0; i < 100000; i++) {\n\t\tv.push_back(i);\n\t\tif (p != &v[0]) {\n\t\t\tp = &v[0];\n\t\t\tnum++;\n\t\t}\n\t}\n\n\tcout << \"num:\" << num << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：如果数据量较大，可以一开始利用 reserve 预留空间\n\n# deque 容器\n\n## deque 容器基本概念\n\n**功能：**\n\n- 双端数组，可以对头端进行插入删除操作\n\n**deque 与 vector 区别：**\n\n- vector 对于头部的插入删除效率低，数据量越大，效率越低\n- deque 相对而言，对头部的插入删除速度回比 vector 快\n- vector 访问元素时的速度会比 deque 快,这和两者内部实现有关\n\n![说明: 2015-11-19_204101](assets/clip_image002-1547547642923.jpg)\n\ndeque 内部工作原理:\n\ndeque 内部有个**中控器**，维护每段缓冲区中的内容，缓冲区中存放真实数据\n\n中控器维护的是每个缓冲区的地址，使得使用 deque 时像一片连续的内存空间\n\n![clip_image002-1547547896341](assets/clip_image002-1547547896341.jpg)\n\n- deque 容器的迭代器也是支持随机访问的\n\n## deque 构造函数\n\n**功能描述：**\n\n- deque 容器构造\n\n**函数原型：**\n\n- `deque<T>` deqT; //默认构造形式\n- `deque(beg, end);` //构造函数将[beg, end)区间中的元素拷贝给本身。\n- `deque(n, elem);` //构造函数将 n 个 elem 拷贝给本身。\n- `deque(const deque &deq);` //拷贝构造函数\n\n**示例：**\n\n```C++\n#include <deque>\n\nvoid printDeque(const deque<int>& d)\n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << \" \";\n\n\t}\n\tcout << endl;\n}\n//deque构造\nvoid test01() {\n\n\tdeque<int> d1; //无参构造函数\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\td1.push_back(i);\n\t}\n\tprintDeque(d1);\n\tdeque<int> d2(d1.begin(),d1.end());\n\tprintDeque(d2);\n\n\tdeque<int>d3(10,100);\n\tprintDeque(d3);\n\n\tdeque<int>d4 = d3;\n\tprintDeque(d4);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n**总结：**deque 容器和 vector 容器的构造方式几乎一致，灵活使用即可\n\n## deque 赋值操作\n\n**功能描述：**\n\n- 给 deque 容器进行赋值\n\n**函数原型：**\n\n- `deque& operator=(const deque &deq); ` //重载等号操作符\n\n- `assign(beg, end);` //将[beg, end)区间中的数据拷贝赋值给本身。\n- `assign(n, elem);` //将 n 个 elem 拷贝赋值给本身。\n\n**示例：**\n\n```C++\n#include <deque>\n\nvoid printDeque(const deque<int>& d)\n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << \" \";\n\n\t}\n\tcout << endl;\n}\n//赋值操作\nvoid test01()\n{\n\tdeque<int> d1;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\td1.push_back(i);\n\t}\n\tprintDeque(d1);\n\n\tdeque<int>d2;\n\td2 = d1;\n\tprintDeque(d2);\n\n\tdeque<int>d3;\n\td3.assign(d1.begin(), d1.end());\n\tprintDeque(d3);\n\n\tdeque<int>d4;\n\td4.assign(10, 100);\n\tprintDeque(d4);\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：deque 赋值操作也与 vector 相同，需熟练掌握\n\n## deque 大小操作\n\n**功能描述：**\n\n- 对 deque 容器的大小进行操作\n\n**函数原型：**\n\n- `deque.empty();` //判断容器是否为空\n\n- `deque.size();` //返回容器中元素的个数\n\n- `deque.resize(num);` //重新指定容器的长度为 num,若容器变长，则以默认值填充新位置。\n\n  ​ //如果容器变短，则末尾超出容器长度的元素被删除。\n\n- `deque.resize(num, elem);` //重新指定容器的长度为 num,若容器变长，则以 elem 值填充新位置。\n\n  ​ //如果容器变短，则末尾超出容器长度的元素被删除。\n\n  ​\n\n**示例：**\n\n```C++\n#include <deque>\n\nvoid printDeque(const deque<int>& d)\n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << \" \";\n\n\t}\n\tcout << endl;\n}\n\n//大小操作\nvoid test01()\n{\n\tdeque<int> d1;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\td1.push_back(i);\n\t}\n\tprintDeque(d1);\n\n\t//判断容器是否为空\n\tif (d1.empty()) {\n\t\tcout << \"d1为空!\" << endl;\n\t}\n\telse {\n\t\tcout << \"d1不为空!\" << endl;\n\t\t//统计大小\n\t\tcout << \"d1的大小为：\" << d1.size() << endl;\n\t}\n\n\t//重新指定大小\n\td1.resize(15, 1);\n\tprintDeque(d1);\n\n\td1.resize(5);\n\tprintDeque(d1);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- deque 没有容量的概念\n- 判断是否为空 --- empty\n- 返回元素个数 --- size\n- 重新指定个数 --- resize\n\n## deque 插入和删除\n\n**功能描述：**\n\n- 向 deque 容器中插入和删除数据\n\n**函数原型：**\n\n两端插入操作：\n\n- `push_back(elem);` //在容器尾部添加一个数据\n- `push_front(elem);` //在容器头部插入一个数据\n- `pop_back();` //删除容器最后一个数据\n- `pop_front();` //删除容器第一个数据\n\n指定位置操作：\n\n- `insert(pos,elem);` //在 pos 位置插入一个 elem 元素的拷贝，返回新数据的位置。\n\n- `insert(pos,n,elem);` //在 pos 位置插入 n 个 elem 数据，无返回值。\n\n- `insert(pos,beg,end);` //在 pos 位置插入[beg,end)区间的数据，无返回值。\n\n- `clear();` //清空容器的所有数据\n\n- `erase(beg,end);` //删除[beg,end)区间的数据，返回下一个数据的位置。\n\n- `erase(pos);` //删除 pos 位置的数据，返回下一个数据的位置。\n\n  ​\n\n  ​\n\n**示例：**\n\n```C++\n#include <deque>\n\nvoid printDeque(const deque<int>& d)\n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << \" \";\n\n\t}\n\tcout << endl;\n}\n//两端操作\nvoid test01()\n{\n\tdeque<int> d;\n\t//尾插\n\td.push_back(10);\n\td.push_back(20);\n\t//头插\n\td.push_front(100);\n\td.push_front(200);\n\n\tprintDeque(d);\n\n\t//尾删\n\td.pop_back();\n\t//头删\n\td.pop_front();\n\tprintDeque(d);\n}\n\n//插入\nvoid test02()\n{\n\tdeque<int> d;\n\td.push_back(10);\n\td.push_back(20);\n\td.push_front(100);\n\td.push_front(200);\n\tprintDeque(d);\n\n\td.insert(d.begin(), 1000);\n\tprintDeque(d);\n\n\td.insert(d.begin(), 2,10000);\n\tprintDeque(d);\n\n\tdeque<int>d2;\n\td2.push_back(1);\n\td2.push_back(2);\n\td2.push_back(3);\n\n\td.insert(d.begin(), d2.begin(), d2.end());\n\tprintDeque(d);\n\n}\n\n//删除\nvoid test03()\n{\n\tdeque<int> d;\n\td.push_back(10);\n\td.push_back(20);\n\td.push_front(100);\n\td.push_front(200);\n\tprintDeque(d);\n\n\td.erase(d.begin());\n\tprintDeque(d);\n\n\td.erase(d.begin(), d.end());\n\td.clear();\n\tprintDeque(d);\n}\n\nint main() {\n\n\t//test01();\n\n\t//test02();\n\n    test03();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n\n```\n\n总结：\n\n- 插入和删除提供的位置是迭代器！\n- 尾插 --- push_back\n- 尾删 --- pop_back\n- 头插 --- push_front\n- 头删 --- pop_front\n\n## deque 数据存取\n\n**功能描述：**\n\n- 对 deque 中的数据的存取操作\n\n**函数原型：**\n\n- `at(int idx); ` //返回索引 idx 所指的数据\n- `operator[]; ` //返回索引 idx 所指的数据\n- `front(); ` //返回容器中第一个数据元素\n- `back();` //返回容器中最后一个数据元素\n\n**示例：**\n\n```C++\n#include <deque>\n\nvoid printDeque(const deque<int>& d)\n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << \" \";\n\n\t}\n\tcout << endl;\n}\n\n//数据存取\nvoid test01()\n{\n\n\tdeque<int> d;\n\td.push_back(10);\n\td.push_back(20);\n\td.push_front(100);\n\td.push_front(200);\n\n\tfor (int i = 0; i < d.size(); i++) {\n\t\tcout << d[i] << \" \";\n\t}\n\tcout << endl;\n\n\n\tfor (int i = 0; i < d.size(); i++) {\n\t\tcout << d.at(i) << \" \";\n\t}\n\tcout << endl;\n\n\tcout << \"front:\" << d.front() << endl;\n\n\tcout << \"back:\" << d.back() << endl;\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 除了用迭代器获取 deque 容器中元素，[ ]和 at 也可以\n- front 返回容器第一个元素\n- back 返回容器最后一个元素\n\n## deque 排序\n\n**功能描述：**\n\n- 利用算法实现对 deque 容器进行排序\n\n**算法：**\n\n- `sort(iterator beg, iterator end)` //对 beg 和 end 区间内元素进行排序\n\n**示例：**\n\n```C++\n#include <deque>\n#include <algorithm>\n\nvoid printDeque(const deque<int>& d)\n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << \" \";\n\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\n\tdeque<int> d;\n\td.push_back(10);\n\td.push_back(20);\n\td.push_front(100);\n\td.push_front(200);\n\n\tprintDeque(d);\n\tsort(d.begin(), d.end());\n\tprintDeque(d);\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：sort 算法非常实用，使用时包含头文件 algorithm 即可\n\n# 案例-评委打分\n\n## 案例描述\n\n有 5 名选手：选手 ABCDE，10 个评委分别对每一名选手打分，去除最高分，去除评委中最低分，取平均分。\n\n## 实现步骤\n\n1. 创建五名选手，放到 vector 中\n2. 遍历 vector 容器，取出来每一个选手，执行 for 循环，可以把 10 个评分打分存到 deque 容器中\n3. sort 算法对 deque 容器中分数排序，去除最高和最低分\n4. deque 容器遍历一遍，累加总分\n5. 获取平均分\n\n**示例代码：**\n\n```C++\n//选手类\nclass Person\n{\npublic:\n\tPerson(string name, int score)\n\t{\n\t\tthis->m_Name = name;\n\t\tthis->m_Score = score;\n\t}\n\n\tstring m_Name; //姓名\n\tint m_Score;  //平均分\n};\n\nvoid createPerson(vector<Person>&v)\n{\n\tstring nameSeed = \"ABCDE\";\n\tfor (int i = 0; i < 5; i++)\n\t{\n\t\tstring name = \"选手\";\n\t\tname += nameSeed[i];\n\n\t\tint score = 0;\n\n\t\tPerson p(name, score);\n\n\t\t//将创建的person对象 放入到容器中\n\t\tv.push_back(p);\n\t}\n}\n\n//打分\nvoid setScore(vector<Person>&v)\n{\n\tfor (vector<Person>::iterator it = v.begin(); it != v.end(); it++)\n\t{\n\t\t//将评委的分数 放入到deque容器中\n\t\tdeque<int>d;\n\t\tfor (int i = 0; i < 10; i++)\n\t\t{\n\t\t\tint score = rand() % 41 + 60;  // 60 ~ 100\n\t\t\td.push_back(score);\n\t\t}\n\n\t\t//cout << \"选手： \" << it->m_Name << \" 打分： \" << endl;\n\t\t//for (deque<int>::iterator dit = d.begin(); dit != d.end(); dit++)\n\t\t//{\n\t\t//\tcout << *dit << \" \";\n\t\t//}\n\t\t//cout << endl;\n\n\t\t//排序\n\t\tsort(d.begin(), d.end());\n\n\t\t//去除最高和最低分\n\t\td.pop_back();\n\t\td.pop_front();\n\n\t\t//取平均分\n\t\tint sum = 0;\n\t\tfor (deque<int>::iterator dit = d.begin(); dit != d.end(); dit++)\n\t\t{\n\t\t\tsum += *dit; //累加每个评委的分数\n\t\t}\n\n\t\tint avg = sum / d.size();\n\n\t\t//将平均分 赋值给选手身上\n\t\tit->m_Score = avg;\n\t}\n\n}\n\nvoid showScore(vector<Person>&v)\n{\n\tfor (vector<Person>::iterator it = v.begin(); it != v.end(); it++)\n\t{\n\t\tcout << \"姓名： \" << it->m_Name << \" 平均分： \" << it->m_Score << endl;\n\t}\n}\n\nint main() {\n\n\t//随机数种子\n\tsrand((unsigned int)time(NULL));\n\n\t//1、创建5名选手\n\tvector<Person>v;  //存放选手容器\n\tcreatePerson(v);\n\n\t//测试\n\t//for (vector<Person>::iterator it = v.begin(); it != v.end(); it++)\n\t//{\n\t//\tcout << \"姓名： \" << (*it).m_Name << \" 分数： \" << (*it).m_Score << endl;\n\t//}\n\n\t//2、给5名选手打分\n\tsetScore(v);\n\n\t//3、显示最后得分\n\tshowScore(v);\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n**总结：** 选取不同的容器操作数据，可以提升代码的效率\n\n# stack 容器\n\n## stack 基本概念\n\n**概念：**stack 是一种**先进后出**(First In Last Out,FILO)的数据结构，它只有一个出口\n\n![说明: 2015-11-15_195707](assets/clip_image002-1547604555425.jpg)\n\n栈中只有顶端的元素才可以被外界使用，因此栈不允许有遍历行为\n\n栈中进入数据称为 --- **入栈** `push`\n\n栈中弹出数据称为 --- **出栈** `pop`\n\n生活中的栈：\n\n![img](assets/clip_image002.png)\n\n![img](assets/clip_image002-1547605111510.jpg)\n\n## stack 常用接口\n\n功能描述：栈容器常用的对外接口\n\n构造函数：\n\n- `stack<T> stk;` //stack 采用模板类实现， stack 对象的默认构造形式\n- `stack(const stack &stk);` //拷贝构造函数\n\n赋值操作：\n\n- `stack& operator=(const stack &stk);` //重载等号操作符\n\n数据存取：\n\n- `push(elem);` //向栈顶添加元素\n- `pop();` //从栈顶移除第一个元素\n- `top(); ` //返回栈顶元素\n\n大小操作：\n\n- `empty();` //判断堆栈是否为空\n- `size(); ` //返回栈的大小\n\n**示例：**\n\n```C++\n#include <stack>\n\n//栈容器常用接口\nvoid test01()\n{\n\t//创建栈容器 栈容器必须符合先进后出\n\tstack<int> s;\n\n\t//向栈中添加元素，叫做 压栈 入栈\n\ts.push(10);\n\ts.push(20);\n\ts.push(30);\n\n\twhile (!s.empty()) {\n\t\t//输出栈顶元素\n\t\tcout << \"栈顶元素为： \" << s.top() << endl;\n\t\t//弹出栈顶元素\n\t\ts.pop();\n\t}\n\tcout << \"栈的大小为：\" << s.size() << endl;\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 入栈 --- push\n- 出栈 --- pop\n- 返回栈顶 --- top\n- 判断栈是否为空 --- empty\n- 返回栈大小 --- size\n\n# queue 容器\n\n## queue 基本概念\n\n**概念：**Queue 是一种**先进先出**(First In First Out,FIFO)的数据结构，它有两个出口\n\n![说明: 2015-11-15_214429](assets/clip_image002-1547606475892.jpg)\n\n队列容器允许从一端新增元素，从另一端移除元素\n\n队列中只有队头和队尾才可以被外界使用，因此队列不允许有遍历行为\n\n队列中进数据称为 --- **入队** `push`\n\n队列中出数据称为 --- **出队** `pop`\n\n生活中的队列：\n\n![1547606785041](assets/1547606785041.png)\n\n## queue 常用接口\n\n功能描述：栈容器常用的对外接口\n\n构造函数：\n\n- `queue<T> que;` //queue 采用模板类实现，queue 对象的默认构造形式\n- `queue(const queue &que);` //拷贝构造函数\n\n赋值操作：\n\n- `queue& operator=(const queue &que);` //重载等号操作符\n\n数据存取：\n\n- `push(elem);` //往队尾添加元素\n- `pop();` //从队头移除第一个元素\n- `back();` //返回最后一个元素\n- `front(); ` //返回第一个元素\n\n大小操作：\n\n- `empty();` //判断堆栈是否为空\n- `size(); ` //返回栈的大小\n\n**示例：**\n\n```C++\n#include <queue>\n#include <string>\nclass Person\n{\npublic:\n\tPerson(string name, int age)\n\t{\n\t\tthis->m_Name = name;\n\t\tthis->m_Age = age;\n\t}\n\n\tstring m_Name;\n\tint m_Age;\n};\n\nvoid test01() {\n\n\t//创建队列\n\tqueue<Person> q;\n\n\t//准备数据\n\tPerson p1(\"唐僧\", 30);\n\tPerson p2(\"孙悟空\", 1000);\n\tPerson p3(\"猪八戒\", 900);\n\tPerson p4(\"沙僧\", 800);\n\n\t//向队列中添加元素  入队操作\n\tq.push(p1);\n\tq.push(p2);\n\tq.push(p3);\n\tq.push(p4);\n\n\t//队列不提供迭代器，更不支持随机访问\n\twhile (!q.empty()) {\n\t\t//输出队头元素\n\t\tcout << \"队头元素-- 姓名： \" << q.front().m_Name\n              << \" 年龄： \"<< q.front().m_Age << endl;\n\n\t\tcout << \"队尾元素-- 姓名： \" << q.back().m_Name\n              << \" 年龄： \" << q.back().m_Age << endl;\n\n\t\tcout << endl;\n\t\t//弹出队头元素\n\t\tq.pop();\n\t}\n\n\tcout << \"队列大小为：\" << q.size() << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 入队 --- push\n- 出队 --- pop\n- 返回队头元素 --- front\n- 返回队尾元素 --- back\n- 判断队是否为空 --- empty\n- 返回队列大小 --- size\n\n# list 容器\n\n## list 基本概念\n\n**功能：**将数据进行链式存储\n\n**链表**（list）是一种物理存储单元上非连续的存储结构，数据元素的逻辑顺序是通过链表中的指针链接实现的\n\n链表的组成：链表由一系列**结点**组成\n\n结点的组成：一个是存储数据元素的**数据域**，另一个是存储下一个结点地址的**指针域**\n\nSTL 中的链表是一个双向循环链表\n\n![说明: 2015-11-15_225145](assets/clip_image002-1547608564071.jpg)\n\n由于链表的存储方式并不是连续的内存空间，因此链表 list 中的迭代器只支持前移和后移，属于**双向迭代器**\n\nlist 的优点：\n\n- 采用动态存储分配，不会造成内存浪费和溢出\n- 链表执行插入和删除操作十分方便，修改指针即可，不需要移动大量元素\n\nlist 的缺点：\n\n- 链表灵活，但是空间(指针域) 和 时间（遍历）额外耗费较大\n\nList 有一个重要的性质，插入操作和删除操作都不会造成原有 list 迭代器的失效，这在 vector 是不成立的。\n\n总结：STL 中**List 和 vector 是两个最常被使用的容器**，各有优缺点\n\n## list 构造函数\n\n**功能描述：**\n\n- 创建 list 容器\n\n**函数原型：**\n\n- `list<T> lst;` //list 采用采用模板类实现,对象的默认构造形式：\n- `list(beg,end);` //构造函数将[beg, end)区间中的元素拷贝给本身。\n- `list(n,elem);` //构造函数将 n 个 elem 拷贝给本身。\n- `list(const list &lst);` //拷贝构造函数。\n\n**示例：**\n\n```C++\n#include <list>\n\nvoid printList(const list<int>& L) {\n\n\tfor (list<int>::const_iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tlist<int>L1;\n\tL1.push_back(10);\n\tL1.push_back(20);\n\tL1.push_back(30);\n\tL1.push_back(40);\n\n\tprintList(L1);\n\n\tlist<int>L2(L1.begin(),L1.end());\n\tprintList(L2);\n\n\tlist<int>L3(L2);\n\tprintList(L3);\n\n\tlist<int>L4(10, 1000);\n\tprintList(L4);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：list 构造方式同其他几个 STL 常用容器，熟练掌握即可\n\n## list 赋值和交换\n\n**功能描述：**\n\n- 给 list 容器进行赋值，以及交换 list 容器\n\n**函数原型：**\n\n- `assign(beg, end);` //将[beg, end)区间中的数据拷贝赋值给本身。\n- `assign(n, elem);` //将 n 个 elem 拷贝赋值给本身。\n- `list& operator=(const list &lst);` //重载等号操作符\n- `swap(lst);` //将 lst 与本身的元素互换。\n\n**示例：**\n\n```C++\n#include <list>\n\nvoid printList(const list<int>& L) {\n\n\tfor (list<int>::const_iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\n//赋值和交换\nvoid test01()\n{\n\tlist<int>L1;\n\tL1.push_back(10);\n\tL1.push_back(20);\n\tL1.push_back(30);\n\tL1.push_back(40);\n\tprintList(L1);\n\n\t//赋值\n\tlist<int>L2;\n\tL2 = L1;\n\tprintList(L2);\n\n\tlist<int>L3;\n\tL3.assign(L2.begin(), L2.end());\n\tprintList(L3);\n\n\tlist<int>L4;\n\tL4.assign(10, 100);\n\tprintList(L4);\n\n}\n\n//交换\nvoid test02()\n{\n\n\tlist<int>L1;\n\tL1.push_back(10);\n\tL1.push_back(20);\n\tL1.push_back(30);\n\tL1.push_back(40);\n\n\tlist<int>L2;\n\tL2.assign(10, 100);\n\n\tcout << \"交换前： \" << endl;\n\tprintList(L1);\n\tprintList(L2);\n\n\tcout << endl;\n\n\tL1.swap(L2);\n\n\tcout << \"交换后： \" << endl;\n\tprintList(L1);\n\tprintList(L2);\n\n}\n\nint main() {\n\n\t//test01();\n\n\ttest02();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：list 赋值和交换操作能够灵活运用即可\n\n## list 大小操作\n\n**功能描述：**\n\n- 对 list 容器的大小进行操作\n\n**函数原型：**\n\n- `size(); ` //返回容器中元素的个数\n\n- `empty(); ` //判断容器是否为空\n\n- `resize(num);` //重新指定容器的长度为 num，若容器变长，则以默认值填充新位置。\n\n  ​ //如果容器变短，则末尾超出容器长度的元素被删除。\n\n- `resize(num, elem); ` //重新指定容器的长度为 num，若容器变长，则以 elem 值填充新位置。\n\n  ​ //如果容器变短，则末尾超出容器长度的元素被删除。\n\n**示例：**\n\n```C++\n#include <list>\n\nvoid printList(const list<int>& L) {\n\n\tfor (list<int>::const_iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\n//大小操作\nvoid test01()\n{\n\tlist<int>L1;\n\tL1.push_back(10);\n\tL1.push_back(20);\n\tL1.push_back(30);\n\tL1.push_back(40);\n\n\tif (L1.empty())\n\t{\n\t\tcout << \"L1为空\" << endl;\n\t}\n\telse\n\t{\n\t\tcout << \"L1不为空\" << endl;\n\t\tcout << \"L1的大小为： \" << L1.size() << endl;\n\t}\n\n\t//重新指定大小\n\tL1.resize(10);\n\tprintList(L1);\n\n\tL1.resize(2);\n\tprintList(L1);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 判断是否为空 --- empty\n- 返回元素个数 --- size\n- 重新指定个数 --- resize\n\n## list 插入和删除\n\n**功能描述：**\n\n- 对 list 容器进行数据的插入和删除\n\n**函数原型：**\n\n- push_back(elem);//在容器尾部加入一个元素\n- pop_back();//删除容器中最后一个元素\n- push_front(elem);//在容器开头插入一个元素\n- pop_front();//从容器开头移除第一个元素\n- insert(pos,elem);//在 pos 位置插 elem 元素的拷贝，返回新数据的位置。\n- insert(pos,n,elem);//在 pos 位置插入 n 个 elem 数据，无返回值。\n- insert(pos,beg,end);//在 pos 位置插入[beg,end)区间的数据，无返回值。\n- clear();//移除容器的所有数据\n- erase(beg,end);//删除[beg,end)区间的数据，返回下一个数据的位置。\n- erase(pos);//删除 pos 位置的数据，返回下一个数据的位置。\n- remove(elem);//删除容器中所有与 elem 值匹配的元素。\n\n**示例：**\n\n```C++\n#include <list>\n\nvoid printList(const list<int>& L) {\n\n\tfor (list<int>::const_iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\n//插入和删除\nvoid test01()\n{\n\tlist<int> L;\n\t//尾插\n\tL.push_back(10);\n\tL.push_back(20);\n\tL.push_back(30);\n\t//头插\n\tL.push_front(100);\n\tL.push_front(200);\n\tL.push_front(300);\n\n\tprintList(L);\n\n\t//尾删\n\tL.pop_back();\n\tprintList(L);\n\n\t//头删\n\tL.pop_front();\n\tprintList(L);\n\n\t//插入\n\tlist<int>::iterator it = L.begin();\n\tL.insert(++it, 1000);\n\tprintList(L);\n\n\t//删除\n\tit = L.begin();\n\tL.erase(++it);\n\tprintList(L);\n\n\t//移除\n\tL.push_back(10000);\n\tL.push_back(10000);\n\tL.push_back(10000);\n\tprintList(L);\n\tL.remove(10000);\n\tprintList(L);\n\n    //清空\n\tL.clear();\n\tprintList(L);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 尾插 --- push_back\n- 尾删 --- pop_back\n- 头插 --- push_front\n- 头删 --- pop_front\n- 插入 --- insert\n- 删除 --- erase\n- 移除 --- remove\n- 清空 --- clear\n\n## list 数据存取\n\n**功能描述：**\n\n- 对 list 容器中数据进行存取\n\n**函数原型：**\n\n- `front();` //返回第一个元素。\n- `back();` //返回最后一个元素。\n\n**示例：**\n\n```C++\n#include <list>\n\n//数据存取\nvoid test01()\n{\n\tlist<int>L1;\n\tL1.push_back(10);\n\tL1.push_back(20);\n\tL1.push_back(30);\n\tL1.push_back(40);\n\n\n\t//cout << L1.at(0) << endl;//错误 不支持at访问数据\n\t//cout << L1[0] << endl; //错误  不支持[]方式访问数据\n\tcout << \"第一个元素为： \" << L1.front() << endl;\n\tcout << \"最后一个元素为： \" << L1.back() << endl;\n\n\t//list容器的迭代器是双向迭代器，不支持随机访问\n\tlist<int>::iterator it = L1.begin();\n\t//it = it + 1;//错误，不可以跳跃访问，即使是+1\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n\n```\n\n总结：\n\n- list 容器中不可以通过[]或者 at 方式访问数据\n- 返回第一个元素 --- front\n- 返回最后一个元素 --- back\n\n## list 反转和排序\n\n**功能描述：**\n\n- 将容器中的元素反转，以及将容器中的数据进行排序\n\n**函数原型：**\n\n- `reverse();` //反转链表\n- `sort();` //链表排序\n\n**示例：**\n\n```C++\nvoid printList(const list<int>& L) {\n\n\tfor (list<int>::const_iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\nbool myCompare(int val1 , int val2)\n{\n\treturn val1 > val2;\n}\n\n//反转和排序\nvoid test01()\n{\n\tlist<int> L;\n\tL.push_back(90);\n\tL.push_back(30);\n\tL.push_back(20);\n\tL.push_back(70);\n\tprintList(L);\n\n\t//反转容器的元素\n\tL.reverse();\n\tprintList(L);\n\n\t//排序\n\tL.sort(); //默认的排序规则 从小到大\n\tprintList(L);\n\n\tL.sort(myCompare); //指定规则，从大到小\n\tprintList(L);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 反转 --- reverse\n- 排序 --- sort （成员函数）\n\n## 排序案例\n\n案例描述：将 Person 自定义数据类型进行排序，Person 中属性有姓名、年龄、身高\n\n排序规则：按照年龄进行升序，如果年龄相同按照身高进行降序\n\n**示例：**\n\n```C++\n#include <list>\n#include <string>\nclass Person {\npublic:\n\tPerson(string name, int age , int height) {\n\t\tm_Name = name;\n\t\tm_Age = age;\n\t\tm_Height = height;\n\t}\n\npublic:\n\tstring m_Name;  //姓名\n\tint m_Age;      //年龄\n\tint m_Height;   //身高\n};\n\n\nbool ComparePerson(Person& p1, Person& p2) {\n\n\tif (p1.m_Age == p2.m_Age) {\n\t\treturn p1.m_Height  > p2.m_Height;\n\t}\n\telse\n\t{\n\t\treturn  p1.m_Age < p2.m_Age;\n\t}\n\n}\n\nvoid test01() {\n\n\tlist<Person> L;\n\n\tPerson p1(\"刘备\", 35 , 175);\n\tPerson p2(\"曹操\", 45 , 180);\n\tPerson p3(\"孙权\", 40 , 170);\n\tPerson p4(\"赵云\", 25 , 190);\n\tPerson p5(\"张飞\", 35 , 160);\n\tPerson p6(\"关羽\", 35 , 200);\n\n\tL.push_back(p1);\n\tL.push_back(p2);\n\tL.push_back(p3);\n\tL.push_back(p4);\n\tL.push_back(p5);\n\tL.push_back(p6);\n\n\tfor (list<Person>::iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << \"姓名： \" << it->m_Name << \" 年龄： \" << it->m_Age\n              << \" 身高： \" << it->m_Height << endl;\n\t}\n\n\tcout << \"---------------------------------\" << endl;\n\tL.sort(ComparePerson); //排序\n\n\tfor (list<Person>::iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << \"姓名： \" << it->m_Name << \" 年龄： \" << it->m_Age\n              << \" 身高： \" << it->m_Height << endl;\n\t}\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 对于自定义数据类型，必须要指定排序规则，否则编译器不知道如何进行排序\n- 高级排序只是在排序规则上再进行一次逻辑规则制定，并不复杂\n\n# set/ multiset 容器\n\n## set 基本概念\n\n**简介：**\n\n- 所有元素都会在插入时自动被排序\n\n**本质：**\n\n- set/multiset 属于**关联式容器**，底层结构是用**二叉树**实现。\n\n**set 和 multiset 区别**：\n\n- set 不允许容器中有重复的元素\n- multiset 允许容器中有重复的元素\n\n## set 构造和赋值\n\n功能描述：创建 set 容器以及赋值\n\n构造：\n\n- `set<T> st;` //默认构造函数：\n- `set(const set &st);` //拷贝构造函数\n\n赋值：\n\n- `set& operator=(const set &st);` //重载等号操作符\n\n**示例：**\n\n```C++\n#include <set>\n\nvoid printSet(set<int> & s)\n{\n\tfor (set<int>::iterator it = s.begin(); it != s.end(); it++)\n\t{\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\n//构造和赋值\nvoid test01()\n{\n\tset<int> s1;\n\n\ts1.insert(10);\n\ts1.insert(30);\n\ts1.insert(20);\n\ts1.insert(40);\n\tprintSet(s1);\n\n\t//拷贝构造\n\tset<int>s2(s1);\n\tprintSet(s2);\n\n\t//赋值\n\tset<int>s3;\n\ts3 = s2;\n\tprintSet(s3);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- set 容器插入数据时用 insert\n- set 容器插入数据的数据会自动排序\n\n## set 大小和交换\n\n**功能描述：**\n\n- 统计 set 容器大小以及交换 set 容器\n\n**函数原型：**\n\n- `size();` //返回容器中元素的数目\n- `empty();` //判断容器是否为空\n- `swap(st);` //交换两个集合容器\n\n**示例：**\n\n```C++\n#include <set>\n\nvoid printSet(set<int> & s)\n{\n\tfor (set<int>::iterator it = s.begin(); it != s.end(); it++)\n\t{\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\n//大小\nvoid test01()\n{\n\n\tset<int> s1;\n\n\ts1.insert(10);\n\ts1.insert(30);\n\ts1.insert(20);\n\ts1.insert(40);\n\n\tif (s1.empty())\n\t{\n\t\tcout << \"s1为空\" << endl;\n\t}\n\telse\n\t{\n\t\tcout << \"s1不为空\" << endl;\n\t\tcout << \"s1的大小为： \" << s1.size() << endl;\n\t}\n\n}\n\n//交换\nvoid test02()\n{\n\tset<int> s1;\n\n\ts1.insert(10);\n\ts1.insert(30);\n\ts1.insert(20);\n\ts1.insert(40);\n\n\tset<int> s2;\n\n\ts2.insert(100);\n\ts2.insert(300);\n\ts2.insert(200);\n\ts2.insert(400);\n\n\tcout << \"交换前\" << endl;\n\tprintSet(s1);\n\tprintSet(s2);\n\tcout << endl;\n\n\tcout << \"交换后\" << endl;\n\ts1.swap(s2);\n\tprintSet(s1);\n\tprintSet(s2);\n}\n\nint main() {\n\n\t//test01();\n\n\ttest02();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 统计大小 --- size\n- 判断是否为空 --- empty\n- 交换容器 --- swap\n\n## set 插入和删除\n\n**功能描述：**\n\n- set 容器进行插入数据和删除数据\n\n**函数原型：**\n\n- `insert(elem);` //在容器中插入元素。\n- `clear();` //清除所有元素\n- `erase(pos);` //删除 pos 迭代器所指的元素，返回下一个元素的迭代器。\n- `erase(beg, end);` //删除区间[beg,end)的所有元素 ，返回下一个元素的迭代器。\n- `erase(elem);` //删除容器中值为 elem 的元素。\n\n**示例：**\n\n```C++\n#include <set>\n\nvoid printSet(set<int> & s)\n{\n\tfor (set<int>::iterator it = s.begin(); it != s.end(); it++)\n\t{\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\n//插入和删除\nvoid test01()\n{\n\tset<int> s1;\n\t//插入\n\ts1.insert(10);\n\ts1.insert(30);\n\ts1.insert(20);\n\ts1.insert(40);\n\tprintSet(s1);\n\n\t//删除\n\ts1.erase(s1.begin());\n\tprintSet(s1);\n\n\ts1.erase(30);\n\tprintSet(s1);\n\n\t//清空\n\t//s1.erase(s1.begin(), s1.end());\n\ts1.clear();\n\tprintSet(s1);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 插入 --- insert\n- 删除 --- erase\n- 清空 --- clear\n\n## set 查找和统计\n\n**功能描述：**\n\n- 对 set 容器进行查找数据以及统计数据\n\n**函数原型：**\n\n- `find(key);` //查找 key 是否存在,若存在，返回该键的元素的迭代器；若不存在，返回 set.end();\n- `count(key);` //统计 key 的元素个数\n\n**示例：**\n\n```C++\n#include <set>\n\n//查找和统计\nvoid test01()\n{\n\tset<int> s1;\n\t//插入\n\ts1.insert(10);\n\ts1.insert(30);\n\ts1.insert(20);\n\ts1.insert(40);\n\n\t//查找\n\tset<int>::iterator pos = s1.find(30);\n\n\tif (pos != s1.end())\n\t{\n\t\tcout << \"找到了元素 ： \" << *pos << endl;\n\t}\n\telse\n\t{\n\t\tcout << \"未找到元素\" << endl;\n\t}\n\n\t//统计\n\tint num = s1.count(30);\n\tcout << \"num = \" << num << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 查找 --- find （返回的是迭代器）\n- 统计 --- count （对于 set，结果为 0 或者 1）\n\n## set 和 multiset 区别\n\n**学习目标：**\n\n- 掌握 set 和 multiset 的区别\n\n**区别：**\n\n- set 不可以插入重复数据，而 multiset 可以\n- set 插入数据的同时会返回插入结果，表示插入是否成功\n- multiset 不会检测数据，因此可以插入重复数据\n\n**示例：**\n\n```C++\n#include <set>\n\n//set和multiset区别\nvoid test01()\n{\n\tset<int> s;\n\tpair<set<int>::iterator, bool>  ret = s.insert(10);\n\tif (ret.second) {\n\t\tcout << \"第一次插入成功!\" << endl;\n\t}\n\telse {\n\t\tcout << \"第一次插入失败!\" << endl;\n\t}\n\n\tret = s.insert(10);\n\tif (ret.second) {\n\t\tcout << \"第二次插入成功!\" << endl;\n\t}\n\telse {\n\t\tcout << \"第二次插入失败!\" << endl;\n\t}\n\n\t//multiset\n\tmultiset<int> ms;\n\tms.insert(10);\n\tms.insert(10);\n\n\tfor (multiset<int>::iterator it = ms.begin(); it != ms.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 如果不允许插入重复数据可以利用 set\n- 如果需要插入重复数据利用 multiset\n\n## pair 对组创建\n\n**功能描述：**\n\n- 成对出现的数据，利用对组可以返回两个数据\n\n**两种创建方式：**\n\n- `pair<type, type> p ( value1, value2 );`\n- `pair<type, type> p = make_pair( value1, value2 );`\n\n**示例：**\n\n```C++\n#include <string>\n\n//对组创建\nvoid test01()\n{\n\tpair<string, int> p(string(\"Tom\"), 20);\n\tcout << \"姓名： \" <<  p.first << \" 年龄： \" << p.second << endl;\n\n\tpair<string, int> p2 = make_pair(\"Jerry\", 10);\n\tcout << \"姓名： \" << p2.first << \" 年龄： \" << p2.second << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n两种方式都可以创建对组，记住一种即可\n\n## set 容器排序\n\n学习目标：\n\n- set 容器默认排序规则为从小到大，掌握如何改变排序规则\n\n主要技术点：\n\n- 利用仿函数，可以改变排序规则\n\n**示例一** set 存放内置数据类型\n\n```C++\n#include <set>\n\nclass MyCompare\n{\npublic:\n\tbool operator()(int v1, int v2) {\n\t\treturn v1 > v2;\n\t}\n};\nvoid test01()\n{\n\tset<int> s1;\n\ts1.insert(10);\n\ts1.insert(40);\n\ts1.insert(20);\n\ts1.insert(30);\n\ts1.insert(50);\n\n\t//默认从小到大\n\tfor (set<int>::iterator it = s1.begin(); it != s1.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n\n\t//指定排序规则\n\tset<int,MyCompare> s2;\n\ts2.insert(10);\n\ts2.insert(40);\n\ts2.insert(20);\n\ts2.insert(30);\n\ts2.insert(50);\n\n\tfor (set<int, MyCompare>::iterator it = s2.begin(); it != s2.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：利用仿函数可以指定 set 容器的排序规则\n\n**示例二** set 存放自定义数据类型\n\n```C++\n#include <set>\n#include <string>\n\nclass Person\n{\npublic:\n\tPerson(string name, int age)\n\t{\n\t\tthis->m_Name = name;\n\t\tthis->m_Age = age;\n\t}\n\n\tstring m_Name;\n\tint m_Age;\n\n};\nclass comparePerson\n{\npublic:\n\tbool operator()(const Person& p1, const Person &p2)\n\t{\n\t\t//按照年龄进行排序  降序\n\t\treturn p1.m_Age > p2.m_Age;\n\t}\n};\n\nvoid test01()\n{\n\tset<Person, comparePerson> s;\n\n\tPerson p1(\"刘备\", 23);\n\tPerson p2(\"关羽\", 27);\n\tPerson p3(\"张飞\", 25);\n\tPerson p4(\"赵云\", 21);\n\n\ts.insert(p1);\n\ts.insert(p2);\n\ts.insert(p3);\n\ts.insert(p4);\n\n\tfor (set<Person, comparePerson>::iterator it = s.begin(); it != s.end(); it++)\n\t{\n\t\tcout << \"姓名： \" << it->m_Name << \" 年龄： \" << it->m_Age << endl;\n\t}\n}\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n对于自定义数据类型，set 必须指定排序规则才可以插入数据\n\n# map/ multimap 容器\n\n## map 基本概念\n\n**简介：**\n\n- map 中所有元素都是 pair\n- pair 中第一个元素为 key（键值），起到索引作用，第二个元素为 value（实值）\n- 所有元素都会根据元素的键值自动排序\n\n**本质：**\n\n- map/multimap 属于**关联式容器**，底层结构是用二叉树实现。\n\n**优点：**\n\n- 可以根据 key 值快速找到 value 值\n\nmap 和 multimap**区别**：\n\n- map 不允许容器中有重复 key 值元素\n- multimap 允许容器中有重复 key 值元素\n\n## map 构造和赋值\n\n**功能描述：**\n\n- 对 map 容器进行构造和赋值操作\n\n**函数原型：**\n\n**构造：**\n\n- `map<T1, T2> mp;` //map 默认构造函数:\n- `map(const map &mp);` //拷贝构造函数\n\n**赋值：**\n\n- `map& operator=(const map &mp);` //重载等号操作符\n\n**示例：**\n\n```C++\n#include <map>\n\nvoid printMap(map<int,int>&m)\n{\n\tfor (map<int, int>::iterator it = m.begin(); it != m.end(); it++)\n\t{\n\t\tcout << \"key = \" << it->first << \" value = \" << it->second << endl;\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tmap<int,int>m; //默认构造\n\tm.insert(pair<int, int>(1, 10));\n\tm.insert(pair<int, int>(2, 20));\n\tm.insert(pair<int, int>(3, 30));\n\tprintMap(m);\n\n\tmap<int, int>m2(m); //拷贝构造\n\tprintMap(m2);\n\n\tmap<int, int>m3;\n\tm3 = m2; //赋值\n\tprintMap(m3);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：map 中所有元素都是成对出现，插入数据时候要使用对组\n\n## map 大小和交换\n\n**功能描述：**\n\n- 统计 map 容器大小以及交换 map 容器\n\n函数原型：\n\n- `size();` //返回容器中元素的数目\n- `empty();` //判断容器是否为空\n- `swap(st);` //交换两个集合容器\n\n**示例：**\n\n```C++\n#include <map>\n\nvoid printMap(map<int,int>&m)\n{\n\tfor (map<int, int>::iterator it = m.begin(); it != m.end(); it++)\n\t{\n\t\tcout << \"key = \" << it->first << \" value = \" << it->second << endl;\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tmap<int, int>m;\n\tm.insert(pair<int, int>(1, 10));\n\tm.insert(pair<int, int>(2, 20));\n\tm.insert(pair<int, int>(3, 30));\n\n\tif (m.empty())\n\t{\n\t\tcout << \"m为空\" << endl;\n\t}\n\telse\n\t{\n\t\tcout << \"m不为空\" << endl;\n\t\tcout << \"m的大小为： \" << m.size() << endl;\n\t}\n}\n\n\n//交换\nvoid test02()\n{\n\tmap<int, int>m;\n\tm.insert(pair<int, int>(1, 10));\n\tm.insert(pair<int, int>(2, 20));\n\tm.insert(pair<int, int>(3, 30));\n\n\tmap<int, int>m2;\n\tm2.insert(pair<int, int>(4, 100));\n\tm2.insert(pair<int, int>(5, 200));\n\tm2.insert(pair<int, int>(6, 300));\n\n\tcout << \"交换前\" << endl;\n\tprintMap(m);\n\tprintMap(m2);\n\n\tcout << \"交换后\" << endl;\n\tm.swap(m2);\n\tprintMap(m);\n\tprintMap(m2);\n}\n\nint main() {\n\n\ttest01();\n\n\ttest02();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 统计大小 --- size\n- 判断是否为空 --- empty\n- 交换容器 --- swap\n\n## map 插入和删除\n\n**功能描述：**\n\n- map 容器进行插入数据和删除数据\n\n**函数原型：**\n\n- `insert(elem);` //在容器中插入元素。\n- `clear();` //清除所有元素\n- `erase(pos);` //删除 pos 迭代器所指的元素，返回下一个元素的迭代器。\n- `erase(beg, end);` //删除区间[beg,end)的所有元素 ，返回下一个元素的迭代器。\n- `erase(key);` //删除容器中值为 key 的元素。\n\n**示例：**\n\n```C++\n#include <map>\n\nvoid printMap(map<int,int>&m)\n{\n\tfor (map<int, int>::iterator it = m.begin(); it != m.end(); it++)\n\t{\n\t\tcout << \"key = \" << it->first << \" value = \" << it->second << endl;\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\t//插入\n\tmap<int, int> m;\n\t//第一种插入方式\n\tm.insert(pair<int, int>(1, 10));\n\t//第二种插入方式\n\tm.insert(make_pair(2, 20));\n\t//第三种插入方式\n\tm.insert(map<int, int>::value_type(3, 30));\n\t//第四种插入方式\n\tm[4] = 40;\n\tprintMap(m);\n\n\t//删除\n\tm.erase(m.begin());\n\tprintMap(m);\n\n\tm.erase(3);\n\tprintMap(m);\n\n\t//清空\n\tm.erase(m.begin(),m.end());\n\tm.clear();\n\tprintMap(m);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- map 插入方式很多，记住其一即可\n\n* 插入 --- insert\n* 删除 --- erase\n* 清空 --- clear\n\n## map 查找和统计\n\n**功能描述：**\n\n- 对 map 容器进行查找数据以及统计数据\n\n**函数原型：**\n\n- `find(key);` //查找 key 是否存在,若存在，返回该键的元素的迭代器；若不存在，返回 set.end();\n- `count(key);` //统计 key 的元素个数\n\n**示例：**\n\n```C++\n#include <map>\n\n//查找和统计\nvoid test01()\n{\n\tmap<int, int>m;\n\tm.insert(pair<int, int>(1, 10));\n\tm.insert(pair<int, int>(2, 20));\n\tm.insert(pair<int, int>(3, 30));\n\n\t//查找\n\tmap<int, int>::iterator pos = m.find(3);\n\n\tif (pos != m.end())\n\t{\n\t\tcout << \"找到了元素 key = \" << (*pos).first << \" value = \" << (*pos).second << endl;\n\t}\n\telse\n\t{\n\t\tcout << \"未找到元素\" << endl;\n\t}\n\n\t//统计\n\tint num = m.count(3);\n\tcout << \"num = \" << num << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 查找 --- find （返回的是迭代器）\n- 统计 --- count （对于 map，结果为 0 或者 1）\n\n## map 容器排序\n\n**学习目标：**\n\n- map 容器默认排序规则为 按照 key 值进行 从小到大排序，掌握如何改变排序规则\n\n**主要技术点:**\n\n- 利用仿函数，可以改变排序规则\n\n**示例：**\n\n```C++\n#include <map>\n\nclass MyCompare {\npublic:\n\tbool operator()(int v1, int v2) {\n\t\treturn v1 > v2;\n\t}\n};\n\nvoid test01()\n{\n\t//默认从小到大排序\n\t//利用仿函数实现从大到小排序\n\tmap<int, int, MyCompare> m;\n\n\tm.insert(make_pair(1, 10));\n\tm.insert(make_pair(2, 20));\n\tm.insert(make_pair(3, 30));\n\tm.insert(make_pair(4, 40));\n\tm.insert(make_pair(5, 50));\n\n\tfor (map<int, int, MyCompare>::iterator it = m.begin(); it != m.end(); it++) {\n\t\tcout << \"key:\" << it->first << \" value:\" << it->second << endl;\n\t}\n}\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 利用仿函数可以指定 map 容器的排序规则\n- 对于自定义数据类型，map 必须要指定排序规则,同 set 容器\n\n# 案例-员工分组\n\n## 案例描述\n\n- 公司今天招聘了 10 个员工（ABCDEFGHIJ），10 名员工进入公司之后，需要指派员工在那个部门工作\n- 员工信息有: 姓名 工资组成；部门分为：策划、美术、研发\n- 随机给 10 名员工分配部门和工资\n- 通过 multimap 进行信息的插入 key(部门编号) value(员工)\n- 分部门显示员工信息\n\n## 实现步骤\n\n1. 创建 10 名员工，放到 vector 中\n2. 遍历 vector 容器，取出每个员工，进行随机分组\n3. 分组后，将员工部门编号作为 key，具体员工作为 value，放入到 multimap 容器中\n4. 分部门显示员工信息\n\n**案例代码：**\n\n```C++\n#include<iostream>\nusing namespace std;\n#include <vector>\n#include <string>\n#include <map>\n#include <ctime>\n\n/*\n- 公司今天招聘了10个员工（ABCDEFGHIJ），10名员工进入公司之后，需要指派员工在那个部门工作\n- 员工信息有: 姓名  工资组成；部门分为：策划、美术、研发\n- 随机给10名员工分配部门和工资\n- 通过multimap进行信息的插入  key(部门编号) value(员工)\n- 分部门显示员工信息\n*/\n\n#define CEHUA  0\n#define MEISHU 1\n#define YANFA  2\n\nclass Worker\n{\npublic:\n\tstring m_Name;\n\tint m_Salary;\n};\n\nvoid createWorker(vector<Worker>&v)\n{\n\tstring nameSeed = \"ABCDEFGHIJ\";\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tWorker worker;\n\t\tworker.m_Name = \"员工\";\n\t\tworker.m_Name += nameSeed[i];\n\n\t\tworker.m_Salary = rand() % 10000 + 10000; // 10000 ~ 19999\n\t\t//将员工放入到容器中\n\t\tv.push_back(worker);\n\t}\n}\n\n//员工分组\nvoid setGroup(vector<Worker>&v,multimap<int,Worker>&m)\n{\n\tfor (vector<Worker>::iterator it = v.begin(); it != v.end(); it++)\n\t{\n\t\t//产生随机部门编号\n\t\tint deptId = rand() % 3; // 0 1 2\n\n\t\t//将员工插入到分组中\n\t\t//key部门编号，value具体员工\n\t\tm.insert(make_pair(deptId, *it));\n\t}\n}\n\nvoid showWorkerByGourp(multimap<int,Worker>&m)\n{\n\t// 0  A  B  C   1  D  E   2  F G ...\n\tcout << \"策划部门：\" << endl;\n\n\tmultimap<int,Worker>::iterator pos = m.find(CEHUA);\n\tint count = m.count(CEHUA); // 统计具体人数\n\tint index = 0;\n\tfor (; pos != m.end() && index < count; pos++ , index++)\n\t{\n\t\tcout << \"姓名： \" << pos->second.m_Name << \" 工资： \" << pos->second.m_Salary << endl;\n\t}\n\n\tcout << \"----------------------\" << endl;\n\tcout << \"美术部门： \" << endl;\n\tpos = m.find(MEISHU);\n\tcount = m.count(MEISHU); // 统计具体人数\n\tindex = 0;\n\tfor (; pos != m.end() && index < count; pos++, index++)\n\t{\n\t\tcout << \"姓名： \" << pos->second.m_Name << \" 工资： \" << pos->second.m_Salary << endl;\n\t}\n\n\tcout << \"----------------------\" << endl;\n\tcout << \"研发部门： \" << endl;\n\tpos = m.find(YANFA);\n\tcount = m.count(YANFA); // 统计具体人数\n\tindex = 0;\n\tfor (; pos != m.end() && index < count; pos++, index++)\n\t{\n\t\tcout << \"姓名： \" << pos->second.m_Name << \" 工资： \" << pos->second.m_Salary << endl;\n\t}\n\n}\n\nint main() {\n\n\tsrand((unsigned int)time(NULL));\n\n\t//1、创建员工\n\tvector<Worker>vWorker;\n\tcreateWorker(vWorker);\n\n\t//2、员工分组\n\tmultimap<int, Worker>mWorker;\n\tsetGroup(vWorker, mWorker);\n\n\n\t//3、分组显示员工\n\tshowWorkerByGourp(mWorker);\n\n\t////测试\n\t//for (vector<Worker>::iterator it = vWorker.begin(); it != vWorker.end(); it++)\n\t//{\n\t//\tcout << \"姓名： \" << it->m_Name << \" 工资： \" << it->m_Salary << endl;\n\t//}\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 当数据以键值对形式存在，可以考虑用 map 或 multimap\n","source":"_posts/C-STL.md","raw":"---\ntitle: C++STL\ntags:\n  - STL\n  - C++\n  - algorithm\ncategories: STL\ndescription: STL常用的几个容器\nabbrlink: 366bea49\ndate: 2024-06-14 21:57:28\n---\n\n# string 容器\n\n## string 基本概念\n\n**本质：**\n\n- string 是 C++风格的字符串，而 string 本质上是一个类\n\n**string 和 char \\* 区别：**\n\n- char \\* 是一个指针\n- string 是一个类，类内部封装了 char\\*，管理这个字符串，是一个 char\\*型的容器。\n\n**特点：**\n\nstring 类内部封装了很多成员方法\n\n例如：查找 find，拷贝 copy，删除 delete 替换 replace，插入 insert\n\nstring 管理 char\\*所分配的内存，不用担心复制越界和取值越界等，由类内部进行负责\n\n## string 构造函数\n\n构造函数原型：\n\n- `string();` //创建一个空的字符串 例如: string str;\n- `string(const char* s);` //使用字符串 s 初始化\n- `string(const string& str);` //使用一个 string 对象初始化另一个 string 对象\n- `string(int n, char c);` //使用 n 个字符 c 初始化\n\n**示例：**\n\n```C++\n#include <string>\n//string构造\nvoid test01()\n{\n\tstring s1; //创建空字符串，调用无参构造函数\n\tcout << \"str1 = \" << s1 << endl;\n\n\tconst char* str = \"hello world\";\n\tstring s2(str); //把c_string转换成了string\n\n\tcout << \"str2 = \" << s2 << endl;\n\n\tstring s3(s2); //调用拷贝构造函数\n\tcout << \"str3 = \" << s3 << endl;\n\n\tstring s4(10, 'a');\n\tcout << \"str3 = \" << s3 << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：string 的多种构造方式没有可比性，灵活使用即可\n\n## string 赋值操作\n\n功能描述：\n\n- 给 string 字符串进行赋值\n\n赋值的函数原型：\n\n- `string& operator=(const char* s);` //char\\*类型字符串 赋值给当前的字符串\n- `string& operator=(const string &s);` //把字符串 s 赋给当前的字符串\n- `string& operator=(char c);` //字符赋值给当前的字符串\n- `string& assign(const char *s);` //把字符串 s 赋给当前的字符串\n- `string& assign(const char *s, int n);` //把字符串 s 的前 n 个字符赋给当前的字符串\n- `string& assign(const string &s);` //把字符串 s 赋给当前字符串\n- `string& assign(int n, char c);` //用 n 个字符 c 赋给当前字符串\n\n**示例：**\n\n```C++\n//赋值\nvoid test01()\n{\n\tstring str1;\n\tstr1 = \"hello world\";\n\tcout << \"str1 = \" << str1 << endl;\n\n\tstring str2;\n\tstr2 = str1;\n\tcout << \"str2 = \" << str2 << endl;\n\n\tstring str3;\n\tstr3 = 'a';\n\tcout << \"str3 = \" << str3 << endl;\n\n\tstring str4;\n\tstr4.assign(\"hello c++\");\n\tcout << \"str4 = \" << str4 << endl;\n\n\tstring str5;\n\tstr5.assign(\"hello c++\",5);\n\tcout << \"str5 = \" << str5 << endl;\n\n\n\tstring str6;\n\tstr6.assign(str5);\n\tcout << \"str6 = \" << str6 << endl;\n\n\tstring str7;\n\tstr7.assign(5, 'x');\n\tcout << \"str7 = \" << str7 << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n​ string 的赋值方式很多，`operator=` 这种方式是比较实用的\n\n## string 字符串拼接\n\n**功能描述：**\n\n- 实现在字符串末尾拼接字符串\n\n**函数原型：**\n\n- `string& operator+=(const char* str);` //重载+=操作符\n- `string& operator+=(const char c);` //重载+=操作符\n- `string& operator+=(const string& str);` //重载+=操作符\n- `string& append(const char *s); ` //把字符串 s 连接到当前字符串结尾\n- `string& append(const char *s, int n);` //把字符串 s 的前 n 个字符连接到当前字符串结尾\n- `string& append(const string &s);` //同 operator+=(const string& str)\n- `string& append(const string &s, int pos, int n);`//字符串 s 中从 pos 开始的 n 个字符连接到字符串结尾\n\n**示例：**\n\n```C++\n//字符串拼接\nvoid test01()\n{\n\tstring str1 = \"我\";\n\n\tstr1 += \"爱玩游戏\";\n\n\tcout << \"str1 = \" << str1 << endl;\n\n\tstr1 += ':';\n\n\tcout << \"str1 = \" << str1 << endl;\n\n\tstring str2 = \"LOL DNF\";\n\n\tstr1 += str2;\n\n\tcout << \"str1 = \" << str1 << endl;\n\n\tstring str3 = \"I\";\n\tstr3.append(\" love \");\n\tstr3.append(\"game abcde\", 4);\n\t//str3.append(str2);\n\tstr3.append(str2, 4, 3); // 从下标4位置开始 ，截取3个字符，拼接到字符串末尾\n\tcout << \"str3 = \" << str3 << endl;\n}\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：字符串拼接的重载版本很多，初学阶段记住几种即可\n\n## string 查找和替换\n\n**功能描述：**\n\n- 查找：查找指定字符串是否存在\n- 替换：在指定的位置替换字符串\n\n**函数原型：**\n\n- `int find(const string& str, int pos = 0) const;` //查找 str 第一次出现位置,从 pos 开始查找\n- `int find(const char* s, int pos = 0) const; ` //查找 s 第一次出现位置,从 pos 开始查找\n- `int find(const char* s, int pos, int n) const; ` //从 pos 位置查找 s 的前 n 个字符第一次位置\n- `int find(const char c, int pos = 0) const; ` //查找字符 c 第一次出现位置\n- `int rfind(const string& str, int pos = npos) const;` //查找 str 最后一次位置,从 pos 开始查找\n- `int rfind(const char* s, int pos = npos) const;` //查找 s 最后一次出现位置,从 pos 开始查找\n- `int rfind(const char* s, int pos, int n) const;` //从 pos 查找 s 的前 n 个字符最后一次位置\n- `int rfind(const char c, int pos = 0) const;  ` //查找字符 c 最后一次出现位置\n- `string& replace(int pos, int n, const string& str); ` //替换从 pos 开始 n 个字符为字符串 str\n- `string& replace(int pos, int n,const char* s); ` //替换从 pos 开始的 n 个字符为字符串 s\n\n**示例：**\n\n```C++\n//查找和替换\nvoid test01()\n{\n\t//查找\n\tstring str1 = \"abcdefgde\";\n\n\tint pos = str1.find(\"de\");\n\n\tif (pos == -1)\n\t{\n\t\tcout << \"未找到\" << endl;\n\t}\n\telse\n\t{\n\t\tcout << \"pos = \" << pos << endl;\n\t}\n\n\n\tpos = str1.rfind(\"de\");\n\n\tcout << \"pos = \" << pos << endl;\n\n}\n\nvoid test02()\n{\n\t//替换\n\tstring str1 = \"abcdefgde\";\n\tstr1.replace(1, 3, \"1111\");\n\n\tcout << \"str1 = \" << str1 << endl;\n}\n\nint main() {\n\n\t//test01();\n\t//test02();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- find 查找是从左往后，rfind 从右往左\n- find 找到字符串后返回查找的第一个字符位置，找不到返回-1\n- replace 在替换时，要指定从哪个位置起，多少个字符，替换成什么样的字符串\n\n## string 字符串比较\n\n**功能描述：**\n\n- 字符串之间的比较\n\n**比较方式：**\n\n- 字符串比较是按字符的 ASCII 码进行对比\n\n= 返回 0\n\n\\> 返回 1\n\n< 返回 -1\n\n**函数原型：**\n\n- `int compare(const string &s) const; ` //与字符串 s 比较\n- `int compare(const char *s) const;` //与字符串 s 比较\n\n**示例：**\n\n```C++\n//字符串比较\nvoid test01()\n{\n\n\tstring s1 = \"hello\";\n\tstring s2 = \"aello\";\n\n\tint ret = s1.compare(s2);\n\n\tif (ret == 0) {\n\t\tcout << \"s1 等于 s2\" << endl;\n\t}\n\telse if (ret > 0)\n\t{\n\t\tcout << \"s1 大于 s2\" << endl;\n\t}\n\telse\n\t{\n\t\tcout << \"s1 小于 s2\" << endl;\n\t}\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：字符串对比主要是用于比较两个字符串是否相等，判断谁大谁小的意义并不是很大\n\n## string 字符存取\n\nstring 中单个字符存取方式有两种\n\n- `char& operator[](int n); ` //通过[]方式取字符\n- `char& at(int n);   ` //通过 at 方法获取字符\n\n**示例：**\n\n```C++\nvoid test01()\n{\n\tstring str = \"hello world\";\n\n\tfor (int i = 0; i < str.size(); i++)\n\t{\n\t\tcout << str[i] << \" \";\n\t}\n\tcout << endl;\n\n\tfor (int i = 0; i < str.size(); i++)\n\t{\n\t\tcout << str.at(i) << \" \";\n\t}\n\tcout << endl;\n\n\n\t//字符修改\n\tstr[0] = 'x';\n\tstr.at(1) = 'x';\n\tcout << str << endl;\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：string 字符串中单个字符存取有两种方式，利用 [ ] 或 at\n\n## string 插入和删除\n\n**功能描述：**\n\n- 对 string 字符串进行插入和删除字符操作\n\n**函数原型：**\n\n- `string& insert(int pos, const char* s);  ` //插入字符串\n- `string& insert(int pos, const string& str); ` //插入字符串\n- `string& insert(int pos, int n, char c);` //在指定位置插入 n 个字符 c\n- `string& erase(int pos, int n = npos);` //删除从 Pos 开始的 n 个字符\n\n**示例：**\n\n```C++\n//字符串插入和删除\nvoid test01()\n{\n\tstring str = \"hello\";\n\tstr.insert(1, \"111\");\n\tcout << str << endl;\n\n\tstr.erase(1, 3);  //从1号位置开始3个字符\n\tcout << str << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n**总结：**插入和删除的起始下标都是从 0 开始\n\n## string 子串\n\n**功能描述：**\n\n- 从字符串中获取想要的子串\n\n**函数原型：**\n\n- `string substr(int pos = 0, int n = npos) const;` //返回由 pos 开始的 n 个字符组成的字符串\n\n**示例：**\n\n```C++\n//子串\nvoid test01()\n{\n\n\tstring str = \"abcdefg\";\n\tstring subStr = str.substr(1, 3);\n\tcout << \"subStr = \" << subStr << endl;\n\n\tstring email = \"hello@sina.com\";\n\tint pos = email.find(\"@\");\n\tstring username = email.substr(0, pos);\n\tcout << \"username: \" << username << endl;\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n**总结：**灵活的运用求子串功能，可以在实际开发中获取有效的信息\n\n# vector 容器\n\n## vector 基本概念\n\n**功能：**\n\n- vector 数据结构和**数组非常相似**，也称为**单端数组**\n\n**vector 与普通数组区别：**\n\n- 不同之处在于数组是静态空间，而 vector 可以**动态扩展**\n\n**动态扩展：**\n\n- 并不是在原空间之后续接新空间，而是找更大的内存空间，然后将原数据拷贝新空间，释放原空间\n\n- vector 容器的迭代器是支持随机访问的迭代器\n\n## vector 构造函数\n\n**功能描述：**\n\n- 创建 vector 容器\n\n**函数原型：**\n\n- `vector<T> v; ` //采用模板实现类实现，默认构造函数\n- `vector(v.begin(), v.end());   ` //将 v[begin(), end())区间中的元素拷贝给本身。\n- `vector(n, elem);` //构造函数将 n 个 elem 拷贝给本身。\n- `vector(const vector &vec);` //拷贝构造函数。\n\n**示例：**\n\n```C++\n#include <vector>\n\nvoid printVector(vector<int>& v) {\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tvector<int> v1; //无参构造\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv1.push_back(i);\n\t}\n\tprintVector(v1);\n\n\tvector<int> v2(v1.begin(), v1.end());\n\tprintVector(v2);\n\n\tvector<int> v3(10, 100);\n\tprintVector(v3);\n\n\tvector<int> v4(v3);\n\tprintVector(v4);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n**总结：**vector 的多种构造方式没有可比性，灵活使用即可\n\n## vector 赋值操作\n\n**功能描述：**\n\n- 给 vector 容器进行赋值\n\n**函数原型：**\n\n- `vector& operator=(const vector &vec);`//重载等号操作符\n\n- `assign(beg, end);` //将[beg, end)区间中的数据拷贝赋值给本身。\n- `assign(n, elem);` //将 n 个 elem 拷贝赋值给本身。\n\n**示例：**\n\n```C++\n#include <vector>\n\nvoid printVector(vector<int>& v) {\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\n//赋值操作\nvoid test01()\n{\n\tvector<int> v1; //无参构造\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv1.push_back(i);\n\t}\n\tprintVector(v1);\n\n\tvector<int>v2;\n\tv2 = v1;\n\tprintVector(v2);\n\n\tvector<int>v3;\n\tv3.assign(v1.begin(), v1.end());\n\tprintVector(v3);\n\n\tvector<int>v4;\n\tv4.assign(10, 100);\n\tprintVector(v4);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n\n```\n\n总结： vector 赋值方式比较简单，使用 operator=，或者 assign 都可以\n\n## vector 容量和大小\n\n**功能描述：**\n\n- 对 vector 容器的容量和大小操作\n\n**函数原型：**\n\n- `empty(); ` //判断容器是否为空\n\n- `capacity();` //容器的容量\n\n- `size();` //返回容器中元素的个数\n\n- `resize(int num);` //重新指定容器的长度为 num，若容器变长，则以默认值填充新位置。\n\n  ​ //如果容器变短，则末尾超出容器长度的元素被删除。\n\n- `resize(int num, elem);` //重新指定容器的长度为 num，若容器变长，则以 elem 值填充新位置。\n\n  ​ //如果容器变短，则末尾超出容器长度的元素被删除\n\n**示例：**\n\n```C++\n#include <vector>\n\nvoid printVector(vector<int>& v) {\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tvector<int> v1;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv1.push_back(i);\n\t}\n\tprintVector(v1);\n\tif (v1.empty())\n\t{\n\t\tcout << \"v1为空\" << endl;\n\t}\n\telse\n\t{\n\t\tcout << \"v1不为空\" << endl;\n\t\tcout << \"v1的容量 = \" << v1.capacity() << endl;\n\t\tcout << \"v1的大小 = \" << v1.size() << endl;\n\t}\n\n\t//resize 重新指定大小 ，若指定的更大，默认用0填充新位置，可以利用重载版本替换默认填充\n\tv1.resize(15,10);\n\tprintVector(v1);\n\n\t//resize 重新指定大小 ，若指定的更小，超出部分元素被删除\n\tv1.resize(5);\n\tprintVector(v1);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n\n```\n\n总结：\n\n- 判断是否为空 --- empty\n- 返回元素个数 --- size\n- 返回容器容量 --- capacity\n- 重新指定大小 --- resize\n\n## vector 插入和删除\n\n**功能描述：**\n\n- 对 vector 容器进行插入、删除操作\n\n**函数原型：**\n\n- `push_back(ele);` //尾部插入元素 ele\n- `pop_back();` //删除最后一个元素\n- `insert(const_iterator pos, ele);` //迭代器指向位置 pos 插入元素 ele\n- `insert(const_iterator pos, int count,ele);`//迭代器指向位置 pos 插入 count 个元素 ele\n- `erase(const_iterator pos);` //删除迭代器指向的元素\n- `erase(const_iterator start, const_iterator end);`//删除迭代器从 start 到 end 之间的元素\n- `clear();` //删除容器中所有元素\n\n**示例：**\n\n```C++\n\n#include <vector>\n\nvoid printVector(vector<int>& v) {\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\n//插入和删除\nvoid test01()\n{\n\tvector<int> v1;\n\t//尾插\n\tv1.push_back(10);\n\tv1.push_back(20);\n\tv1.push_back(30);\n\tv1.push_back(40);\n\tv1.push_back(50);\n\tprintVector(v1);\n\t//尾删\n\tv1.pop_back();\n\tprintVector(v1);\n\t//插入\n\tv1.insert(v1.begin(), 100);\n\tprintVector(v1);\n\n\tv1.insert(v1.begin(), 2, 1000);\n\tprintVector(v1);\n\n\t//删除\n\tv1.erase(v1.begin());\n\tprintVector(v1);\n\n\t//清空\n\tv1.erase(v1.begin(), v1.end());\n\tv1.clear();\n\tprintVector(v1);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 尾插 --- push_back\n- 尾删 --- pop_back\n- 插入 --- insert (位置迭代器)\n- 删除 --- erase （位置迭代器）\n- 清空 --- clear\n\n## vector 数据存取\n\n**功能描述：**\n\n- 对 vector 中的数据的存取操作\n\n**函数原型：**\n\n- `at(int idx); ` //返回索引 idx 所指的数据\n- `operator[]; ` //返回索引 idx 所指的数据\n- `front(); ` //返回容器中第一个数据元素\n- `back();` //返回容器中最后一个数据元素\n\n**示例：**\n\n```C++\n#include <vector>\n\nvoid test01()\n{\n\tvector<int>v1;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv1.push_back(i);\n\t}\n\n\tfor (int i = 0; i < v1.size(); i++)\n\t{\n\t\tcout << v1[i] << \" \";\n\t}\n\tcout << endl;\n\n\tfor (int i = 0; i < v1.size(); i++)\n\t{\n\t\tcout << v1.at(i) << \" \";\n\t}\n\tcout << endl;\n\n\tcout << \"v1的第一个元素为： \" << v1.front() << endl;\n\tcout << \"v1的最后一个元素为： \" << v1.back() << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 除了用迭代器获取 vector 容器中元素，[ ]和 at 也可以\n- front 返回容器第一个元素\n- back 返回容器最后一个元素\n\n## vector 互换容器\n\n**功能描述：**\n\n- 实现两个容器内元素进行互换\n\n**函数原型：**\n\n- `swap(vec);` // 将 vec 与本身的元素互换\n\n**示例：**\n\n```C++\n#include <vector>\n\nvoid printVector(vector<int>& v) {\n\n\tfor (vector<int>::iterator it = v.begin(); it != v.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tvector<int>v1;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tv1.push_back(i);\n\t}\n\tprintVector(v1);\n\n\tvector<int>v2;\n\tfor (int i = 10; i > 0; i--)\n\t{\n\t\tv2.push_back(i);\n\t}\n\tprintVector(v2);\n\n\t//互换容器\n\tcout << \"互换后\" << endl;\n\tv1.swap(v2);\n\tprintVector(v1);\n\tprintVector(v2);\n}\n\nvoid test02()\n{\n\tvector<int> v;\n\tfor (int i = 0; i < 100000; i++) {\n\t\tv.push_back(i);\n\t}\n\n\tcout << \"v的容量为：\" << v.capacity() << endl;\n\tcout << \"v的大小为：\" << v.size() << endl;\n\n\tv.resize(3);\n\n\tcout << \"v的容量为：\" << v.capacity() << endl;\n\tcout << \"v的大小为：\" << v.size() << endl;\n\n\t//收缩内存\n\tvector<int>(v).swap(v); //匿名对象\n\n\tcout << \"v的容量为：\" << v.capacity() << endl;\n\tcout << \"v的大小为：\" << v.size() << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\ttest02();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n\n```\n\n总结：swap 可以使两个容器互换，可以达到实用的收缩内存效果\n\n## vector 预留空间\n\n**功能描述：**\n\n- 减少 vector 在动态扩展容量时的扩展次数\n\n**函数原型：**\n\n- `reserve(int len);`//容器预留 len 个元素长度，预留位置不初始化，元素不可访问。\n\n  ​\n\n**示例：**\n\n```C++\n#include <vector>\n\nvoid test01()\n{\n\tvector<int> v;\n\n\t//预留空间\n\tv.reserve(100000);\n\n\tint num = 0;\n\tint* p = NULL;\n\tfor (int i = 0; i < 100000; i++) {\n\t\tv.push_back(i);\n\t\tif (p != &v[0]) {\n\t\t\tp = &v[0];\n\t\t\tnum++;\n\t\t}\n\t}\n\n\tcout << \"num:\" << num << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：如果数据量较大，可以一开始利用 reserve 预留空间\n\n# deque 容器\n\n## deque 容器基本概念\n\n**功能：**\n\n- 双端数组，可以对头端进行插入删除操作\n\n**deque 与 vector 区别：**\n\n- vector 对于头部的插入删除效率低，数据量越大，效率越低\n- deque 相对而言，对头部的插入删除速度回比 vector 快\n- vector 访问元素时的速度会比 deque 快,这和两者内部实现有关\n\n![说明: 2015-11-19_204101](assets/clip_image002-1547547642923.jpg)\n\ndeque 内部工作原理:\n\ndeque 内部有个**中控器**，维护每段缓冲区中的内容，缓冲区中存放真实数据\n\n中控器维护的是每个缓冲区的地址，使得使用 deque 时像一片连续的内存空间\n\n![clip_image002-1547547896341](assets/clip_image002-1547547896341.jpg)\n\n- deque 容器的迭代器也是支持随机访问的\n\n## deque 构造函数\n\n**功能描述：**\n\n- deque 容器构造\n\n**函数原型：**\n\n- `deque<T>` deqT; //默认构造形式\n- `deque(beg, end);` //构造函数将[beg, end)区间中的元素拷贝给本身。\n- `deque(n, elem);` //构造函数将 n 个 elem 拷贝给本身。\n- `deque(const deque &deq);` //拷贝构造函数\n\n**示例：**\n\n```C++\n#include <deque>\n\nvoid printDeque(const deque<int>& d)\n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << \" \";\n\n\t}\n\tcout << endl;\n}\n//deque构造\nvoid test01() {\n\n\tdeque<int> d1; //无参构造函数\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\td1.push_back(i);\n\t}\n\tprintDeque(d1);\n\tdeque<int> d2(d1.begin(),d1.end());\n\tprintDeque(d2);\n\n\tdeque<int>d3(10,100);\n\tprintDeque(d3);\n\n\tdeque<int>d4 = d3;\n\tprintDeque(d4);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n**总结：**deque 容器和 vector 容器的构造方式几乎一致，灵活使用即可\n\n## deque 赋值操作\n\n**功能描述：**\n\n- 给 deque 容器进行赋值\n\n**函数原型：**\n\n- `deque& operator=(const deque &deq); ` //重载等号操作符\n\n- `assign(beg, end);` //将[beg, end)区间中的数据拷贝赋值给本身。\n- `assign(n, elem);` //将 n 个 elem 拷贝赋值给本身。\n\n**示例：**\n\n```C++\n#include <deque>\n\nvoid printDeque(const deque<int>& d)\n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << \" \";\n\n\t}\n\tcout << endl;\n}\n//赋值操作\nvoid test01()\n{\n\tdeque<int> d1;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\td1.push_back(i);\n\t}\n\tprintDeque(d1);\n\n\tdeque<int>d2;\n\td2 = d1;\n\tprintDeque(d2);\n\n\tdeque<int>d3;\n\td3.assign(d1.begin(), d1.end());\n\tprintDeque(d3);\n\n\tdeque<int>d4;\n\td4.assign(10, 100);\n\tprintDeque(d4);\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：deque 赋值操作也与 vector 相同，需熟练掌握\n\n## deque 大小操作\n\n**功能描述：**\n\n- 对 deque 容器的大小进行操作\n\n**函数原型：**\n\n- `deque.empty();` //判断容器是否为空\n\n- `deque.size();` //返回容器中元素的个数\n\n- `deque.resize(num);` //重新指定容器的长度为 num,若容器变长，则以默认值填充新位置。\n\n  ​ //如果容器变短，则末尾超出容器长度的元素被删除。\n\n- `deque.resize(num, elem);` //重新指定容器的长度为 num,若容器变长，则以 elem 值填充新位置。\n\n  ​ //如果容器变短，则末尾超出容器长度的元素被删除。\n\n  ​\n\n**示例：**\n\n```C++\n#include <deque>\n\nvoid printDeque(const deque<int>& d)\n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << \" \";\n\n\t}\n\tcout << endl;\n}\n\n//大小操作\nvoid test01()\n{\n\tdeque<int> d1;\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\td1.push_back(i);\n\t}\n\tprintDeque(d1);\n\n\t//判断容器是否为空\n\tif (d1.empty()) {\n\t\tcout << \"d1为空!\" << endl;\n\t}\n\telse {\n\t\tcout << \"d1不为空!\" << endl;\n\t\t//统计大小\n\t\tcout << \"d1的大小为：\" << d1.size() << endl;\n\t}\n\n\t//重新指定大小\n\td1.resize(15, 1);\n\tprintDeque(d1);\n\n\td1.resize(5);\n\tprintDeque(d1);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- deque 没有容量的概念\n- 判断是否为空 --- empty\n- 返回元素个数 --- size\n- 重新指定个数 --- resize\n\n## deque 插入和删除\n\n**功能描述：**\n\n- 向 deque 容器中插入和删除数据\n\n**函数原型：**\n\n两端插入操作：\n\n- `push_back(elem);` //在容器尾部添加一个数据\n- `push_front(elem);` //在容器头部插入一个数据\n- `pop_back();` //删除容器最后一个数据\n- `pop_front();` //删除容器第一个数据\n\n指定位置操作：\n\n- `insert(pos,elem);` //在 pos 位置插入一个 elem 元素的拷贝，返回新数据的位置。\n\n- `insert(pos,n,elem);` //在 pos 位置插入 n 个 elem 数据，无返回值。\n\n- `insert(pos,beg,end);` //在 pos 位置插入[beg,end)区间的数据，无返回值。\n\n- `clear();` //清空容器的所有数据\n\n- `erase(beg,end);` //删除[beg,end)区间的数据，返回下一个数据的位置。\n\n- `erase(pos);` //删除 pos 位置的数据，返回下一个数据的位置。\n\n  ​\n\n  ​\n\n**示例：**\n\n```C++\n#include <deque>\n\nvoid printDeque(const deque<int>& d)\n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << \" \";\n\n\t}\n\tcout << endl;\n}\n//两端操作\nvoid test01()\n{\n\tdeque<int> d;\n\t//尾插\n\td.push_back(10);\n\td.push_back(20);\n\t//头插\n\td.push_front(100);\n\td.push_front(200);\n\n\tprintDeque(d);\n\n\t//尾删\n\td.pop_back();\n\t//头删\n\td.pop_front();\n\tprintDeque(d);\n}\n\n//插入\nvoid test02()\n{\n\tdeque<int> d;\n\td.push_back(10);\n\td.push_back(20);\n\td.push_front(100);\n\td.push_front(200);\n\tprintDeque(d);\n\n\td.insert(d.begin(), 1000);\n\tprintDeque(d);\n\n\td.insert(d.begin(), 2,10000);\n\tprintDeque(d);\n\n\tdeque<int>d2;\n\td2.push_back(1);\n\td2.push_back(2);\n\td2.push_back(3);\n\n\td.insert(d.begin(), d2.begin(), d2.end());\n\tprintDeque(d);\n\n}\n\n//删除\nvoid test03()\n{\n\tdeque<int> d;\n\td.push_back(10);\n\td.push_back(20);\n\td.push_front(100);\n\td.push_front(200);\n\tprintDeque(d);\n\n\td.erase(d.begin());\n\tprintDeque(d);\n\n\td.erase(d.begin(), d.end());\n\td.clear();\n\tprintDeque(d);\n}\n\nint main() {\n\n\t//test01();\n\n\t//test02();\n\n    test03();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n\n```\n\n总结：\n\n- 插入和删除提供的位置是迭代器！\n- 尾插 --- push_back\n- 尾删 --- pop_back\n- 头插 --- push_front\n- 头删 --- pop_front\n\n## deque 数据存取\n\n**功能描述：**\n\n- 对 deque 中的数据的存取操作\n\n**函数原型：**\n\n- `at(int idx); ` //返回索引 idx 所指的数据\n- `operator[]; ` //返回索引 idx 所指的数据\n- `front(); ` //返回容器中第一个数据元素\n- `back();` //返回容器中最后一个数据元素\n\n**示例：**\n\n```C++\n#include <deque>\n\nvoid printDeque(const deque<int>& d)\n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << \" \";\n\n\t}\n\tcout << endl;\n}\n\n//数据存取\nvoid test01()\n{\n\n\tdeque<int> d;\n\td.push_back(10);\n\td.push_back(20);\n\td.push_front(100);\n\td.push_front(200);\n\n\tfor (int i = 0; i < d.size(); i++) {\n\t\tcout << d[i] << \" \";\n\t}\n\tcout << endl;\n\n\n\tfor (int i = 0; i < d.size(); i++) {\n\t\tcout << d.at(i) << \" \";\n\t}\n\tcout << endl;\n\n\tcout << \"front:\" << d.front() << endl;\n\n\tcout << \"back:\" << d.back() << endl;\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 除了用迭代器获取 deque 容器中元素，[ ]和 at 也可以\n- front 返回容器第一个元素\n- back 返回容器最后一个元素\n\n## deque 排序\n\n**功能描述：**\n\n- 利用算法实现对 deque 容器进行排序\n\n**算法：**\n\n- `sort(iterator beg, iterator end)` //对 beg 和 end 区间内元素进行排序\n\n**示例：**\n\n```C++\n#include <deque>\n#include <algorithm>\n\nvoid printDeque(const deque<int>& d)\n{\n\tfor (deque<int>::const_iterator it = d.begin(); it != d.end(); it++) {\n\t\tcout << *it << \" \";\n\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\n\tdeque<int> d;\n\td.push_back(10);\n\td.push_back(20);\n\td.push_front(100);\n\td.push_front(200);\n\n\tprintDeque(d);\n\tsort(d.begin(), d.end());\n\tprintDeque(d);\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：sort 算法非常实用，使用时包含头文件 algorithm 即可\n\n# 案例-评委打分\n\n## 案例描述\n\n有 5 名选手：选手 ABCDE，10 个评委分别对每一名选手打分，去除最高分，去除评委中最低分，取平均分。\n\n## 实现步骤\n\n1. 创建五名选手，放到 vector 中\n2. 遍历 vector 容器，取出来每一个选手，执行 for 循环，可以把 10 个评分打分存到 deque 容器中\n3. sort 算法对 deque 容器中分数排序，去除最高和最低分\n4. deque 容器遍历一遍，累加总分\n5. 获取平均分\n\n**示例代码：**\n\n```C++\n//选手类\nclass Person\n{\npublic:\n\tPerson(string name, int score)\n\t{\n\t\tthis->m_Name = name;\n\t\tthis->m_Score = score;\n\t}\n\n\tstring m_Name; //姓名\n\tint m_Score;  //平均分\n};\n\nvoid createPerson(vector<Person>&v)\n{\n\tstring nameSeed = \"ABCDE\";\n\tfor (int i = 0; i < 5; i++)\n\t{\n\t\tstring name = \"选手\";\n\t\tname += nameSeed[i];\n\n\t\tint score = 0;\n\n\t\tPerson p(name, score);\n\n\t\t//将创建的person对象 放入到容器中\n\t\tv.push_back(p);\n\t}\n}\n\n//打分\nvoid setScore(vector<Person>&v)\n{\n\tfor (vector<Person>::iterator it = v.begin(); it != v.end(); it++)\n\t{\n\t\t//将评委的分数 放入到deque容器中\n\t\tdeque<int>d;\n\t\tfor (int i = 0; i < 10; i++)\n\t\t{\n\t\t\tint score = rand() % 41 + 60;  // 60 ~ 100\n\t\t\td.push_back(score);\n\t\t}\n\n\t\t//cout << \"选手： \" << it->m_Name << \" 打分： \" << endl;\n\t\t//for (deque<int>::iterator dit = d.begin(); dit != d.end(); dit++)\n\t\t//{\n\t\t//\tcout << *dit << \" \";\n\t\t//}\n\t\t//cout << endl;\n\n\t\t//排序\n\t\tsort(d.begin(), d.end());\n\n\t\t//去除最高和最低分\n\t\td.pop_back();\n\t\td.pop_front();\n\n\t\t//取平均分\n\t\tint sum = 0;\n\t\tfor (deque<int>::iterator dit = d.begin(); dit != d.end(); dit++)\n\t\t{\n\t\t\tsum += *dit; //累加每个评委的分数\n\t\t}\n\n\t\tint avg = sum / d.size();\n\n\t\t//将平均分 赋值给选手身上\n\t\tit->m_Score = avg;\n\t}\n\n}\n\nvoid showScore(vector<Person>&v)\n{\n\tfor (vector<Person>::iterator it = v.begin(); it != v.end(); it++)\n\t{\n\t\tcout << \"姓名： \" << it->m_Name << \" 平均分： \" << it->m_Score << endl;\n\t}\n}\n\nint main() {\n\n\t//随机数种子\n\tsrand((unsigned int)time(NULL));\n\n\t//1、创建5名选手\n\tvector<Person>v;  //存放选手容器\n\tcreatePerson(v);\n\n\t//测试\n\t//for (vector<Person>::iterator it = v.begin(); it != v.end(); it++)\n\t//{\n\t//\tcout << \"姓名： \" << (*it).m_Name << \" 分数： \" << (*it).m_Score << endl;\n\t//}\n\n\t//2、给5名选手打分\n\tsetScore(v);\n\n\t//3、显示最后得分\n\tshowScore(v);\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n**总结：** 选取不同的容器操作数据，可以提升代码的效率\n\n# stack 容器\n\n## stack 基本概念\n\n**概念：**stack 是一种**先进后出**(First In Last Out,FILO)的数据结构，它只有一个出口\n\n![说明: 2015-11-15_195707](assets/clip_image002-1547604555425.jpg)\n\n栈中只有顶端的元素才可以被外界使用，因此栈不允许有遍历行为\n\n栈中进入数据称为 --- **入栈** `push`\n\n栈中弹出数据称为 --- **出栈** `pop`\n\n生活中的栈：\n\n![img](assets/clip_image002.png)\n\n![img](assets/clip_image002-1547605111510.jpg)\n\n## stack 常用接口\n\n功能描述：栈容器常用的对外接口\n\n构造函数：\n\n- `stack<T> stk;` //stack 采用模板类实现， stack 对象的默认构造形式\n- `stack(const stack &stk);` //拷贝构造函数\n\n赋值操作：\n\n- `stack& operator=(const stack &stk);` //重载等号操作符\n\n数据存取：\n\n- `push(elem);` //向栈顶添加元素\n- `pop();` //从栈顶移除第一个元素\n- `top(); ` //返回栈顶元素\n\n大小操作：\n\n- `empty();` //判断堆栈是否为空\n- `size(); ` //返回栈的大小\n\n**示例：**\n\n```C++\n#include <stack>\n\n//栈容器常用接口\nvoid test01()\n{\n\t//创建栈容器 栈容器必须符合先进后出\n\tstack<int> s;\n\n\t//向栈中添加元素，叫做 压栈 入栈\n\ts.push(10);\n\ts.push(20);\n\ts.push(30);\n\n\twhile (!s.empty()) {\n\t\t//输出栈顶元素\n\t\tcout << \"栈顶元素为： \" << s.top() << endl;\n\t\t//弹出栈顶元素\n\t\ts.pop();\n\t}\n\tcout << \"栈的大小为：\" << s.size() << endl;\n\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 入栈 --- push\n- 出栈 --- pop\n- 返回栈顶 --- top\n- 判断栈是否为空 --- empty\n- 返回栈大小 --- size\n\n# queue 容器\n\n## queue 基本概念\n\n**概念：**Queue 是一种**先进先出**(First In First Out,FIFO)的数据结构，它有两个出口\n\n![说明: 2015-11-15_214429](assets/clip_image002-1547606475892.jpg)\n\n队列容器允许从一端新增元素，从另一端移除元素\n\n队列中只有队头和队尾才可以被外界使用，因此队列不允许有遍历行为\n\n队列中进数据称为 --- **入队** `push`\n\n队列中出数据称为 --- **出队** `pop`\n\n生活中的队列：\n\n![1547606785041](assets/1547606785041.png)\n\n## queue 常用接口\n\n功能描述：栈容器常用的对外接口\n\n构造函数：\n\n- `queue<T> que;` //queue 采用模板类实现，queue 对象的默认构造形式\n- `queue(const queue &que);` //拷贝构造函数\n\n赋值操作：\n\n- `queue& operator=(const queue &que);` //重载等号操作符\n\n数据存取：\n\n- `push(elem);` //往队尾添加元素\n- `pop();` //从队头移除第一个元素\n- `back();` //返回最后一个元素\n- `front(); ` //返回第一个元素\n\n大小操作：\n\n- `empty();` //判断堆栈是否为空\n- `size(); ` //返回栈的大小\n\n**示例：**\n\n```C++\n#include <queue>\n#include <string>\nclass Person\n{\npublic:\n\tPerson(string name, int age)\n\t{\n\t\tthis->m_Name = name;\n\t\tthis->m_Age = age;\n\t}\n\n\tstring m_Name;\n\tint m_Age;\n};\n\nvoid test01() {\n\n\t//创建队列\n\tqueue<Person> q;\n\n\t//准备数据\n\tPerson p1(\"唐僧\", 30);\n\tPerson p2(\"孙悟空\", 1000);\n\tPerson p3(\"猪八戒\", 900);\n\tPerson p4(\"沙僧\", 800);\n\n\t//向队列中添加元素  入队操作\n\tq.push(p1);\n\tq.push(p2);\n\tq.push(p3);\n\tq.push(p4);\n\n\t//队列不提供迭代器，更不支持随机访问\n\twhile (!q.empty()) {\n\t\t//输出队头元素\n\t\tcout << \"队头元素-- 姓名： \" << q.front().m_Name\n              << \" 年龄： \"<< q.front().m_Age << endl;\n\n\t\tcout << \"队尾元素-- 姓名： \" << q.back().m_Name\n              << \" 年龄： \" << q.back().m_Age << endl;\n\n\t\tcout << endl;\n\t\t//弹出队头元素\n\t\tq.pop();\n\t}\n\n\tcout << \"队列大小为：\" << q.size() << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 入队 --- push\n- 出队 --- pop\n- 返回队头元素 --- front\n- 返回队尾元素 --- back\n- 判断队是否为空 --- empty\n- 返回队列大小 --- size\n\n# list 容器\n\n## list 基本概念\n\n**功能：**将数据进行链式存储\n\n**链表**（list）是一种物理存储单元上非连续的存储结构，数据元素的逻辑顺序是通过链表中的指针链接实现的\n\n链表的组成：链表由一系列**结点**组成\n\n结点的组成：一个是存储数据元素的**数据域**，另一个是存储下一个结点地址的**指针域**\n\nSTL 中的链表是一个双向循环链表\n\n![说明: 2015-11-15_225145](assets/clip_image002-1547608564071.jpg)\n\n由于链表的存储方式并不是连续的内存空间，因此链表 list 中的迭代器只支持前移和后移，属于**双向迭代器**\n\nlist 的优点：\n\n- 采用动态存储分配，不会造成内存浪费和溢出\n- 链表执行插入和删除操作十分方便，修改指针即可，不需要移动大量元素\n\nlist 的缺点：\n\n- 链表灵活，但是空间(指针域) 和 时间（遍历）额外耗费较大\n\nList 有一个重要的性质，插入操作和删除操作都不会造成原有 list 迭代器的失效，这在 vector 是不成立的。\n\n总结：STL 中**List 和 vector 是两个最常被使用的容器**，各有优缺点\n\n## list 构造函数\n\n**功能描述：**\n\n- 创建 list 容器\n\n**函数原型：**\n\n- `list<T> lst;` //list 采用采用模板类实现,对象的默认构造形式：\n- `list(beg,end);` //构造函数将[beg, end)区间中的元素拷贝给本身。\n- `list(n,elem);` //构造函数将 n 个 elem 拷贝给本身。\n- `list(const list &lst);` //拷贝构造函数。\n\n**示例：**\n\n```C++\n#include <list>\n\nvoid printList(const list<int>& L) {\n\n\tfor (list<int>::const_iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tlist<int>L1;\n\tL1.push_back(10);\n\tL1.push_back(20);\n\tL1.push_back(30);\n\tL1.push_back(40);\n\n\tprintList(L1);\n\n\tlist<int>L2(L1.begin(),L1.end());\n\tprintList(L2);\n\n\tlist<int>L3(L2);\n\tprintList(L3);\n\n\tlist<int>L4(10, 1000);\n\tprintList(L4);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：list 构造方式同其他几个 STL 常用容器，熟练掌握即可\n\n## list 赋值和交换\n\n**功能描述：**\n\n- 给 list 容器进行赋值，以及交换 list 容器\n\n**函数原型：**\n\n- `assign(beg, end);` //将[beg, end)区间中的数据拷贝赋值给本身。\n- `assign(n, elem);` //将 n 个 elem 拷贝赋值给本身。\n- `list& operator=(const list &lst);` //重载等号操作符\n- `swap(lst);` //将 lst 与本身的元素互换。\n\n**示例：**\n\n```C++\n#include <list>\n\nvoid printList(const list<int>& L) {\n\n\tfor (list<int>::const_iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\n//赋值和交换\nvoid test01()\n{\n\tlist<int>L1;\n\tL1.push_back(10);\n\tL1.push_back(20);\n\tL1.push_back(30);\n\tL1.push_back(40);\n\tprintList(L1);\n\n\t//赋值\n\tlist<int>L2;\n\tL2 = L1;\n\tprintList(L2);\n\n\tlist<int>L3;\n\tL3.assign(L2.begin(), L2.end());\n\tprintList(L3);\n\n\tlist<int>L4;\n\tL4.assign(10, 100);\n\tprintList(L4);\n\n}\n\n//交换\nvoid test02()\n{\n\n\tlist<int>L1;\n\tL1.push_back(10);\n\tL1.push_back(20);\n\tL1.push_back(30);\n\tL1.push_back(40);\n\n\tlist<int>L2;\n\tL2.assign(10, 100);\n\n\tcout << \"交换前： \" << endl;\n\tprintList(L1);\n\tprintList(L2);\n\n\tcout << endl;\n\n\tL1.swap(L2);\n\n\tcout << \"交换后： \" << endl;\n\tprintList(L1);\n\tprintList(L2);\n\n}\n\nint main() {\n\n\t//test01();\n\n\ttest02();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：list 赋值和交换操作能够灵活运用即可\n\n## list 大小操作\n\n**功能描述：**\n\n- 对 list 容器的大小进行操作\n\n**函数原型：**\n\n- `size(); ` //返回容器中元素的个数\n\n- `empty(); ` //判断容器是否为空\n\n- `resize(num);` //重新指定容器的长度为 num，若容器变长，则以默认值填充新位置。\n\n  ​ //如果容器变短，则末尾超出容器长度的元素被删除。\n\n- `resize(num, elem); ` //重新指定容器的长度为 num，若容器变长，则以 elem 值填充新位置。\n\n  ​ //如果容器变短，则末尾超出容器长度的元素被删除。\n\n**示例：**\n\n```C++\n#include <list>\n\nvoid printList(const list<int>& L) {\n\n\tfor (list<int>::const_iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\n//大小操作\nvoid test01()\n{\n\tlist<int>L1;\n\tL1.push_back(10);\n\tL1.push_back(20);\n\tL1.push_back(30);\n\tL1.push_back(40);\n\n\tif (L1.empty())\n\t{\n\t\tcout << \"L1为空\" << endl;\n\t}\n\telse\n\t{\n\t\tcout << \"L1不为空\" << endl;\n\t\tcout << \"L1的大小为： \" << L1.size() << endl;\n\t}\n\n\t//重新指定大小\n\tL1.resize(10);\n\tprintList(L1);\n\n\tL1.resize(2);\n\tprintList(L1);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 判断是否为空 --- empty\n- 返回元素个数 --- size\n- 重新指定个数 --- resize\n\n## list 插入和删除\n\n**功能描述：**\n\n- 对 list 容器进行数据的插入和删除\n\n**函数原型：**\n\n- push_back(elem);//在容器尾部加入一个元素\n- pop_back();//删除容器中最后一个元素\n- push_front(elem);//在容器开头插入一个元素\n- pop_front();//从容器开头移除第一个元素\n- insert(pos,elem);//在 pos 位置插 elem 元素的拷贝，返回新数据的位置。\n- insert(pos,n,elem);//在 pos 位置插入 n 个 elem 数据，无返回值。\n- insert(pos,beg,end);//在 pos 位置插入[beg,end)区间的数据，无返回值。\n- clear();//移除容器的所有数据\n- erase(beg,end);//删除[beg,end)区间的数据，返回下一个数据的位置。\n- erase(pos);//删除 pos 位置的数据，返回下一个数据的位置。\n- remove(elem);//删除容器中所有与 elem 值匹配的元素。\n\n**示例：**\n\n```C++\n#include <list>\n\nvoid printList(const list<int>& L) {\n\n\tfor (list<int>::const_iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\n//插入和删除\nvoid test01()\n{\n\tlist<int> L;\n\t//尾插\n\tL.push_back(10);\n\tL.push_back(20);\n\tL.push_back(30);\n\t//头插\n\tL.push_front(100);\n\tL.push_front(200);\n\tL.push_front(300);\n\n\tprintList(L);\n\n\t//尾删\n\tL.pop_back();\n\tprintList(L);\n\n\t//头删\n\tL.pop_front();\n\tprintList(L);\n\n\t//插入\n\tlist<int>::iterator it = L.begin();\n\tL.insert(++it, 1000);\n\tprintList(L);\n\n\t//删除\n\tit = L.begin();\n\tL.erase(++it);\n\tprintList(L);\n\n\t//移除\n\tL.push_back(10000);\n\tL.push_back(10000);\n\tL.push_back(10000);\n\tprintList(L);\n\tL.remove(10000);\n\tprintList(L);\n\n    //清空\n\tL.clear();\n\tprintList(L);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 尾插 --- push_back\n- 尾删 --- pop_back\n- 头插 --- push_front\n- 头删 --- pop_front\n- 插入 --- insert\n- 删除 --- erase\n- 移除 --- remove\n- 清空 --- clear\n\n## list 数据存取\n\n**功能描述：**\n\n- 对 list 容器中数据进行存取\n\n**函数原型：**\n\n- `front();` //返回第一个元素。\n- `back();` //返回最后一个元素。\n\n**示例：**\n\n```C++\n#include <list>\n\n//数据存取\nvoid test01()\n{\n\tlist<int>L1;\n\tL1.push_back(10);\n\tL1.push_back(20);\n\tL1.push_back(30);\n\tL1.push_back(40);\n\n\n\t//cout << L1.at(0) << endl;//错误 不支持at访问数据\n\t//cout << L1[0] << endl; //错误  不支持[]方式访问数据\n\tcout << \"第一个元素为： \" << L1.front() << endl;\n\tcout << \"最后一个元素为： \" << L1.back() << endl;\n\n\t//list容器的迭代器是双向迭代器，不支持随机访问\n\tlist<int>::iterator it = L1.begin();\n\t//it = it + 1;//错误，不可以跳跃访问，即使是+1\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n\n```\n\n总结：\n\n- list 容器中不可以通过[]或者 at 方式访问数据\n- 返回第一个元素 --- front\n- 返回最后一个元素 --- back\n\n## list 反转和排序\n\n**功能描述：**\n\n- 将容器中的元素反转，以及将容器中的数据进行排序\n\n**函数原型：**\n\n- `reverse();` //反转链表\n- `sort();` //链表排序\n\n**示例：**\n\n```C++\nvoid printList(const list<int>& L) {\n\n\tfor (list<int>::const_iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\nbool myCompare(int val1 , int val2)\n{\n\treturn val1 > val2;\n}\n\n//反转和排序\nvoid test01()\n{\n\tlist<int> L;\n\tL.push_back(90);\n\tL.push_back(30);\n\tL.push_back(20);\n\tL.push_back(70);\n\tprintList(L);\n\n\t//反转容器的元素\n\tL.reverse();\n\tprintList(L);\n\n\t//排序\n\tL.sort(); //默认的排序规则 从小到大\n\tprintList(L);\n\n\tL.sort(myCompare); //指定规则，从大到小\n\tprintList(L);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 反转 --- reverse\n- 排序 --- sort （成员函数）\n\n## 排序案例\n\n案例描述：将 Person 自定义数据类型进行排序，Person 中属性有姓名、年龄、身高\n\n排序规则：按照年龄进行升序，如果年龄相同按照身高进行降序\n\n**示例：**\n\n```C++\n#include <list>\n#include <string>\nclass Person {\npublic:\n\tPerson(string name, int age , int height) {\n\t\tm_Name = name;\n\t\tm_Age = age;\n\t\tm_Height = height;\n\t}\n\npublic:\n\tstring m_Name;  //姓名\n\tint m_Age;      //年龄\n\tint m_Height;   //身高\n};\n\n\nbool ComparePerson(Person& p1, Person& p2) {\n\n\tif (p1.m_Age == p2.m_Age) {\n\t\treturn p1.m_Height  > p2.m_Height;\n\t}\n\telse\n\t{\n\t\treturn  p1.m_Age < p2.m_Age;\n\t}\n\n}\n\nvoid test01() {\n\n\tlist<Person> L;\n\n\tPerson p1(\"刘备\", 35 , 175);\n\tPerson p2(\"曹操\", 45 , 180);\n\tPerson p3(\"孙权\", 40 , 170);\n\tPerson p4(\"赵云\", 25 , 190);\n\tPerson p5(\"张飞\", 35 , 160);\n\tPerson p6(\"关羽\", 35 , 200);\n\n\tL.push_back(p1);\n\tL.push_back(p2);\n\tL.push_back(p3);\n\tL.push_back(p4);\n\tL.push_back(p5);\n\tL.push_back(p6);\n\n\tfor (list<Person>::iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << \"姓名： \" << it->m_Name << \" 年龄： \" << it->m_Age\n              << \" 身高： \" << it->m_Height << endl;\n\t}\n\n\tcout << \"---------------------------------\" << endl;\n\tL.sort(ComparePerson); //排序\n\n\tfor (list<Person>::iterator it = L.begin(); it != L.end(); it++) {\n\t\tcout << \"姓名： \" << it->m_Name << \" 年龄： \" << it->m_Age\n              << \" 身高： \" << it->m_Height << endl;\n\t}\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 对于自定义数据类型，必须要指定排序规则，否则编译器不知道如何进行排序\n- 高级排序只是在排序规则上再进行一次逻辑规则制定，并不复杂\n\n# set/ multiset 容器\n\n## set 基本概念\n\n**简介：**\n\n- 所有元素都会在插入时自动被排序\n\n**本质：**\n\n- set/multiset 属于**关联式容器**，底层结构是用**二叉树**实现。\n\n**set 和 multiset 区别**：\n\n- set 不允许容器中有重复的元素\n- multiset 允许容器中有重复的元素\n\n## set 构造和赋值\n\n功能描述：创建 set 容器以及赋值\n\n构造：\n\n- `set<T> st;` //默认构造函数：\n- `set(const set &st);` //拷贝构造函数\n\n赋值：\n\n- `set& operator=(const set &st);` //重载等号操作符\n\n**示例：**\n\n```C++\n#include <set>\n\nvoid printSet(set<int> & s)\n{\n\tfor (set<int>::iterator it = s.begin(); it != s.end(); it++)\n\t{\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\n//构造和赋值\nvoid test01()\n{\n\tset<int> s1;\n\n\ts1.insert(10);\n\ts1.insert(30);\n\ts1.insert(20);\n\ts1.insert(40);\n\tprintSet(s1);\n\n\t//拷贝构造\n\tset<int>s2(s1);\n\tprintSet(s2);\n\n\t//赋值\n\tset<int>s3;\n\ts3 = s2;\n\tprintSet(s3);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- set 容器插入数据时用 insert\n- set 容器插入数据的数据会自动排序\n\n## set 大小和交换\n\n**功能描述：**\n\n- 统计 set 容器大小以及交换 set 容器\n\n**函数原型：**\n\n- `size();` //返回容器中元素的数目\n- `empty();` //判断容器是否为空\n- `swap(st);` //交换两个集合容器\n\n**示例：**\n\n```C++\n#include <set>\n\nvoid printSet(set<int> & s)\n{\n\tfor (set<int>::iterator it = s.begin(); it != s.end(); it++)\n\t{\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\n//大小\nvoid test01()\n{\n\n\tset<int> s1;\n\n\ts1.insert(10);\n\ts1.insert(30);\n\ts1.insert(20);\n\ts1.insert(40);\n\n\tif (s1.empty())\n\t{\n\t\tcout << \"s1为空\" << endl;\n\t}\n\telse\n\t{\n\t\tcout << \"s1不为空\" << endl;\n\t\tcout << \"s1的大小为： \" << s1.size() << endl;\n\t}\n\n}\n\n//交换\nvoid test02()\n{\n\tset<int> s1;\n\n\ts1.insert(10);\n\ts1.insert(30);\n\ts1.insert(20);\n\ts1.insert(40);\n\n\tset<int> s2;\n\n\ts2.insert(100);\n\ts2.insert(300);\n\ts2.insert(200);\n\ts2.insert(400);\n\n\tcout << \"交换前\" << endl;\n\tprintSet(s1);\n\tprintSet(s2);\n\tcout << endl;\n\n\tcout << \"交换后\" << endl;\n\ts1.swap(s2);\n\tprintSet(s1);\n\tprintSet(s2);\n}\n\nint main() {\n\n\t//test01();\n\n\ttest02();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 统计大小 --- size\n- 判断是否为空 --- empty\n- 交换容器 --- swap\n\n## set 插入和删除\n\n**功能描述：**\n\n- set 容器进行插入数据和删除数据\n\n**函数原型：**\n\n- `insert(elem);` //在容器中插入元素。\n- `clear();` //清除所有元素\n- `erase(pos);` //删除 pos 迭代器所指的元素，返回下一个元素的迭代器。\n- `erase(beg, end);` //删除区间[beg,end)的所有元素 ，返回下一个元素的迭代器。\n- `erase(elem);` //删除容器中值为 elem 的元素。\n\n**示例：**\n\n```C++\n#include <set>\n\nvoid printSet(set<int> & s)\n{\n\tfor (set<int>::iterator it = s.begin(); it != s.end(); it++)\n\t{\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\n//插入和删除\nvoid test01()\n{\n\tset<int> s1;\n\t//插入\n\ts1.insert(10);\n\ts1.insert(30);\n\ts1.insert(20);\n\ts1.insert(40);\n\tprintSet(s1);\n\n\t//删除\n\ts1.erase(s1.begin());\n\tprintSet(s1);\n\n\ts1.erase(30);\n\tprintSet(s1);\n\n\t//清空\n\t//s1.erase(s1.begin(), s1.end());\n\ts1.clear();\n\tprintSet(s1);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 插入 --- insert\n- 删除 --- erase\n- 清空 --- clear\n\n## set 查找和统计\n\n**功能描述：**\n\n- 对 set 容器进行查找数据以及统计数据\n\n**函数原型：**\n\n- `find(key);` //查找 key 是否存在,若存在，返回该键的元素的迭代器；若不存在，返回 set.end();\n- `count(key);` //统计 key 的元素个数\n\n**示例：**\n\n```C++\n#include <set>\n\n//查找和统计\nvoid test01()\n{\n\tset<int> s1;\n\t//插入\n\ts1.insert(10);\n\ts1.insert(30);\n\ts1.insert(20);\n\ts1.insert(40);\n\n\t//查找\n\tset<int>::iterator pos = s1.find(30);\n\n\tif (pos != s1.end())\n\t{\n\t\tcout << \"找到了元素 ： \" << *pos << endl;\n\t}\n\telse\n\t{\n\t\tcout << \"未找到元素\" << endl;\n\t}\n\n\t//统计\n\tint num = s1.count(30);\n\tcout << \"num = \" << num << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 查找 --- find （返回的是迭代器）\n- 统计 --- count （对于 set，结果为 0 或者 1）\n\n## set 和 multiset 区别\n\n**学习目标：**\n\n- 掌握 set 和 multiset 的区别\n\n**区别：**\n\n- set 不可以插入重复数据，而 multiset 可以\n- set 插入数据的同时会返回插入结果，表示插入是否成功\n- multiset 不会检测数据，因此可以插入重复数据\n\n**示例：**\n\n```C++\n#include <set>\n\n//set和multiset区别\nvoid test01()\n{\n\tset<int> s;\n\tpair<set<int>::iterator, bool>  ret = s.insert(10);\n\tif (ret.second) {\n\t\tcout << \"第一次插入成功!\" << endl;\n\t}\n\telse {\n\t\tcout << \"第一次插入失败!\" << endl;\n\t}\n\n\tret = s.insert(10);\n\tif (ret.second) {\n\t\tcout << \"第二次插入成功!\" << endl;\n\t}\n\telse {\n\t\tcout << \"第二次插入失败!\" << endl;\n\t}\n\n\t//multiset\n\tmultiset<int> ms;\n\tms.insert(10);\n\tms.insert(10);\n\n\tfor (multiset<int>::iterator it = ms.begin(); it != ms.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 如果不允许插入重复数据可以利用 set\n- 如果需要插入重复数据利用 multiset\n\n## pair 对组创建\n\n**功能描述：**\n\n- 成对出现的数据，利用对组可以返回两个数据\n\n**两种创建方式：**\n\n- `pair<type, type> p ( value1, value2 );`\n- `pair<type, type> p = make_pair( value1, value2 );`\n\n**示例：**\n\n```C++\n#include <string>\n\n//对组创建\nvoid test01()\n{\n\tpair<string, int> p(string(\"Tom\"), 20);\n\tcout << \"姓名： \" <<  p.first << \" 年龄： \" << p.second << endl;\n\n\tpair<string, int> p2 = make_pair(\"Jerry\", 10);\n\tcout << \"姓名： \" << p2.first << \" 年龄： \" << p2.second << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n两种方式都可以创建对组，记住一种即可\n\n## set 容器排序\n\n学习目标：\n\n- set 容器默认排序规则为从小到大，掌握如何改变排序规则\n\n主要技术点：\n\n- 利用仿函数，可以改变排序规则\n\n**示例一** set 存放内置数据类型\n\n```C++\n#include <set>\n\nclass MyCompare\n{\npublic:\n\tbool operator()(int v1, int v2) {\n\t\treturn v1 > v2;\n\t}\n};\nvoid test01()\n{\n\tset<int> s1;\n\ts1.insert(10);\n\ts1.insert(40);\n\ts1.insert(20);\n\ts1.insert(30);\n\ts1.insert(50);\n\n\t//默认从小到大\n\tfor (set<int>::iterator it = s1.begin(); it != s1.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n\n\t//指定排序规则\n\tset<int,MyCompare> s2;\n\ts2.insert(10);\n\ts2.insert(40);\n\ts2.insert(20);\n\ts2.insert(30);\n\ts2.insert(50);\n\n\tfor (set<int, MyCompare>::iterator it = s2.begin(); it != s2.end(); it++) {\n\t\tcout << *it << \" \";\n\t}\n\tcout << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：利用仿函数可以指定 set 容器的排序规则\n\n**示例二** set 存放自定义数据类型\n\n```C++\n#include <set>\n#include <string>\n\nclass Person\n{\npublic:\n\tPerson(string name, int age)\n\t{\n\t\tthis->m_Name = name;\n\t\tthis->m_Age = age;\n\t}\n\n\tstring m_Name;\n\tint m_Age;\n\n};\nclass comparePerson\n{\npublic:\n\tbool operator()(const Person& p1, const Person &p2)\n\t{\n\t\t//按照年龄进行排序  降序\n\t\treturn p1.m_Age > p2.m_Age;\n\t}\n};\n\nvoid test01()\n{\n\tset<Person, comparePerson> s;\n\n\tPerson p1(\"刘备\", 23);\n\tPerson p2(\"关羽\", 27);\n\tPerson p3(\"张飞\", 25);\n\tPerson p4(\"赵云\", 21);\n\n\ts.insert(p1);\n\ts.insert(p2);\n\ts.insert(p3);\n\ts.insert(p4);\n\n\tfor (set<Person, comparePerson>::iterator it = s.begin(); it != s.end(); it++)\n\t{\n\t\tcout << \"姓名： \" << it->m_Name << \" 年龄： \" << it->m_Age << endl;\n\t}\n}\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n对于自定义数据类型，set 必须指定排序规则才可以插入数据\n\n# map/ multimap 容器\n\n## map 基本概念\n\n**简介：**\n\n- map 中所有元素都是 pair\n- pair 中第一个元素为 key（键值），起到索引作用，第二个元素为 value（实值）\n- 所有元素都会根据元素的键值自动排序\n\n**本质：**\n\n- map/multimap 属于**关联式容器**，底层结构是用二叉树实现。\n\n**优点：**\n\n- 可以根据 key 值快速找到 value 值\n\nmap 和 multimap**区别**：\n\n- map 不允许容器中有重复 key 值元素\n- multimap 允许容器中有重复 key 值元素\n\n## map 构造和赋值\n\n**功能描述：**\n\n- 对 map 容器进行构造和赋值操作\n\n**函数原型：**\n\n**构造：**\n\n- `map<T1, T2> mp;` //map 默认构造函数:\n- `map(const map &mp);` //拷贝构造函数\n\n**赋值：**\n\n- `map& operator=(const map &mp);` //重载等号操作符\n\n**示例：**\n\n```C++\n#include <map>\n\nvoid printMap(map<int,int>&m)\n{\n\tfor (map<int, int>::iterator it = m.begin(); it != m.end(); it++)\n\t{\n\t\tcout << \"key = \" << it->first << \" value = \" << it->second << endl;\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tmap<int,int>m; //默认构造\n\tm.insert(pair<int, int>(1, 10));\n\tm.insert(pair<int, int>(2, 20));\n\tm.insert(pair<int, int>(3, 30));\n\tprintMap(m);\n\n\tmap<int, int>m2(m); //拷贝构造\n\tprintMap(m2);\n\n\tmap<int, int>m3;\n\tm3 = m2; //赋值\n\tprintMap(m3);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：map 中所有元素都是成对出现，插入数据时候要使用对组\n\n## map 大小和交换\n\n**功能描述：**\n\n- 统计 map 容器大小以及交换 map 容器\n\n函数原型：\n\n- `size();` //返回容器中元素的数目\n- `empty();` //判断容器是否为空\n- `swap(st);` //交换两个集合容器\n\n**示例：**\n\n```C++\n#include <map>\n\nvoid printMap(map<int,int>&m)\n{\n\tfor (map<int, int>::iterator it = m.begin(); it != m.end(); it++)\n\t{\n\t\tcout << \"key = \" << it->first << \" value = \" << it->second << endl;\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\tmap<int, int>m;\n\tm.insert(pair<int, int>(1, 10));\n\tm.insert(pair<int, int>(2, 20));\n\tm.insert(pair<int, int>(3, 30));\n\n\tif (m.empty())\n\t{\n\t\tcout << \"m为空\" << endl;\n\t}\n\telse\n\t{\n\t\tcout << \"m不为空\" << endl;\n\t\tcout << \"m的大小为： \" << m.size() << endl;\n\t}\n}\n\n\n//交换\nvoid test02()\n{\n\tmap<int, int>m;\n\tm.insert(pair<int, int>(1, 10));\n\tm.insert(pair<int, int>(2, 20));\n\tm.insert(pair<int, int>(3, 30));\n\n\tmap<int, int>m2;\n\tm2.insert(pair<int, int>(4, 100));\n\tm2.insert(pair<int, int>(5, 200));\n\tm2.insert(pair<int, int>(6, 300));\n\n\tcout << \"交换前\" << endl;\n\tprintMap(m);\n\tprintMap(m2);\n\n\tcout << \"交换后\" << endl;\n\tm.swap(m2);\n\tprintMap(m);\n\tprintMap(m2);\n}\n\nint main() {\n\n\ttest01();\n\n\ttest02();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 统计大小 --- size\n- 判断是否为空 --- empty\n- 交换容器 --- swap\n\n## map 插入和删除\n\n**功能描述：**\n\n- map 容器进行插入数据和删除数据\n\n**函数原型：**\n\n- `insert(elem);` //在容器中插入元素。\n- `clear();` //清除所有元素\n- `erase(pos);` //删除 pos 迭代器所指的元素，返回下一个元素的迭代器。\n- `erase(beg, end);` //删除区间[beg,end)的所有元素 ，返回下一个元素的迭代器。\n- `erase(key);` //删除容器中值为 key 的元素。\n\n**示例：**\n\n```C++\n#include <map>\n\nvoid printMap(map<int,int>&m)\n{\n\tfor (map<int, int>::iterator it = m.begin(); it != m.end(); it++)\n\t{\n\t\tcout << \"key = \" << it->first << \" value = \" << it->second << endl;\n\t}\n\tcout << endl;\n}\n\nvoid test01()\n{\n\t//插入\n\tmap<int, int> m;\n\t//第一种插入方式\n\tm.insert(pair<int, int>(1, 10));\n\t//第二种插入方式\n\tm.insert(make_pair(2, 20));\n\t//第三种插入方式\n\tm.insert(map<int, int>::value_type(3, 30));\n\t//第四种插入方式\n\tm[4] = 40;\n\tprintMap(m);\n\n\t//删除\n\tm.erase(m.begin());\n\tprintMap(m);\n\n\tm.erase(3);\n\tprintMap(m);\n\n\t//清空\n\tm.erase(m.begin(),m.end());\n\tm.clear();\n\tprintMap(m);\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- map 插入方式很多，记住其一即可\n\n* 插入 --- insert\n* 删除 --- erase\n* 清空 --- clear\n\n## map 查找和统计\n\n**功能描述：**\n\n- 对 map 容器进行查找数据以及统计数据\n\n**函数原型：**\n\n- `find(key);` //查找 key 是否存在,若存在，返回该键的元素的迭代器；若不存在，返回 set.end();\n- `count(key);` //统计 key 的元素个数\n\n**示例：**\n\n```C++\n#include <map>\n\n//查找和统计\nvoid test01()\n{\n\tmap<int, int>m;\n\tm.insert(pair<int, int>(1, 10));\n\tm.insert(pair<int, int>(2, 20));\n\tm.insert(pair<int, int>(3, 30));\n\n\t//查找\n\tmap<int, int>::iterator pos = m.find(3);\n\n\tif (pos != m.end())\n\t{\n\t\tcout << \"找到了元素 key = \" << (*pos).first << \" value = \" << (*pos).second << endl;\n\t}\n\telse\n\t{\n\t\tcout << \"未找到元素\" << endl;\n\t}\n\n\t//统计\n\tint num = m.count(3);\n\tcout << \"num = \" << num << endl;\n}\n\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 查找 --- find （返回的是迭代器）\n- 统计 --- count （对于 map，结果为 0 或者 1）\n\n## map 容器排序\n\n**学习目标：**\n\n- map 容器默认排序规则为 按照 key 值进行 从小到大排序，掌握如何改变排序规则\n\n**主要技术点:**\n\n- 利用仿函数，可以改变排序规则\n\n**示例：**\n\n```C++\n#include <map>\n\nclass MyCompare {\npublic:\n\tbool operator()(int v1, int v2) {\n\t\treturn v1 > v2;\n\t}\n};\n\nvoid test01()\n{\n\t//默认从小到大排序\n\t//利用仿函数实现从大到小排序\n\tmap<int, int, MyCompare> m;\n\n\tm.insert(make_pair(1, 10));\n\tm.insert(make_pair(2, 20));\n\tm.insert(make_pair(3, 30));\n\tm.insert(make_pair(4, 40));\n\tm.insert(make_pair(5, 50));\n\n\tfor (map<int, int, MyCompare>::iterator it = m.begin(); it != m.end(); it++) {\n\t\tcout << \"key:\" << it->first << \" value:\" << it->second << endl;\n\t}\n}\nint main() {\n\n\ttest01();\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 利用仿函数可以指定 map 容器的排序规则\n- 对于自定义数据类型，map 必须要指定排序规则,同 set 容器\n\n# 案例-员工分组\n\n## 案例描述\n\n- 公司今天招聘了 10 个员工（ABCDEFGHIJ），10 名员工进入公司之后，需要指派员工在那个部门工作\n- 员工信息有: 姓名 工资组成；部门分为：策划、美术、研发\n- 随机给 10 名员工分配部门和工资\n- 通过 multimap 进行信息的插入 key(部门编号) value(员工)\n- 分部门显示员工信息\n\n## 实现步骤\n\n1. 创建 10 名员工，放到 vector 中\n2. 遍历 vector 容器，取出每个员工，进行随机分组\n3. 分组后，将员工部门编号作为 key，具体员工作为 value，放入到 multimap 容器中\n4. 分部门显示员工信息\n\n**案例代码：**\n\n```C++\n#include<iostream>\nusing namespace std;\n#include <vector>\n#include <string>\n#include <map>\n#include <ctime>\n\n/*\n- 公司今天招聘了10个员工（ABCDEFGHIJ），10名员工进入公司之后，需要指派员工在那个部门工作\n- 员工信息有: 姓名  工资组成；部门分为：策划、美术、研发\n- 随机给10名员工分配部门和工资\n- 通过multimap进行信息的插入  key(部门编号) value(员工)\n- 分部门显示员工信息\n*/\n\n#define CEHUA  0\n#define MEISHU 1\n#define YANFA  2\n\nclass Worker\n{\npublic:\n\tstring m_Name;\n\tint m_Salary;\n};\n\nvoid createWorker(vector<Worker>&v)\n{\n\tstring nameSeed = \"ABCDEFGHIJ\";\n\tfor (int i = 0; i < 10; i++)\n\t{\n\t\tWorker worker;\n\t\tworker.m_Name = \"员工\";\n\t\tworker.m_Name += nameSeed[i];\n\n\t\tworker.m_Salary = rand() % 10000 + 10000; // 10000 ~ 19999\n\t\t//将员工放入到容器中\n\t\tv.push_back(worker);\n\t}\n}\n\n//员工分组\nvoid setGroup(vector<Worker>&v,multimap<int,Worker>&m)\n{\n\tfor (vector<Worker>::iterator it = v.begin(); it != v.end(); it++)\n\t{\n\t\t//产生随机部门编号\n\t\tint deptId = rand() % 3; // 0 1 2\n\n\t\t//将员工插入到分组中\n\t\t//key部门编号，value具体员工\n\t\tm.insert(make_pair(deptId, *it));\n\t}\n}\n\nvoid showWorkerByGourp(multimap<int,Worker>&m)\n{\n\t// 0  A  B  C   1  D  E   2  F G ...\n\tcout << \"策划部门：\" << endl;\n\n\tmultimap<int,Worker>::iterator pos = m.find(CEHUA);\n\tint count = m.count(CEHUA); // 统计具体人数\n\tint index = 0;\n\tfor (; pos != m.end() && index < count; pos++ , index++)\n\t{\n\t\tcout << \"姓名： \" << pos->second.m_Name << \" 工资： \" << pos->second.m_Salary << endl;\n\t}\n\n\tcout << \"----------------------\" << endl;\n\tcout << \"美术部门： \" << endl;\n\tpos = m.find(MEISHU);\n\tcount = m.count(MEISHU); // 统计具体人数\n\tindex = 0;\n\tfor (; pos != m.end() && index < count; pos++, index++)\n\t{\n\t\tcout << \"姓名： \" << pos->second.m_Name << \" 工资： \" << pos->second.m_Salary << endl;\n\t}\n\n\tcout << \"----------------------\" << endl;\n\tcout << \"研发部门： \" << endl;\n\tpos = m.find(YANFA);\n\tcount = m.count(YANFA); // 统计具体人数\n\tindex = 0;\n\tfor (; pos != m.end() && index < count; pos++, index++)\n\t{\n\t\tcout << \"姓名： \" << pos->second.m_Name << \" 工资： \" << pos->second.m_Salary << endl;\n\t}\n\n}\n\nint main() {\n\n\tsrand((unsigned int)time(NULL));\n\n\t//1、创建员工\n\tvector<Worker>vWorker;\n\tcreateWorker(vWorker);\n\n\t//2、员工分组\n\tmultimap<int, Worker>mWorker;\n\tsetGroup(vWorker, mWorker);\n\n\n\t//3、分组显示员工\n\tshowWorkerByGourp(mWorker);\n\n\t////测试\n\t//for (vector<Worker>::iterator it = vWorker.begin(); it != vWorker.end(); it++)\n\t//{\n\t//\tcout << \"姓名： \" << it->m_Name << \" 工资： \" << it->m_Salary << endl;\n\t//}\n\n\tsystem(\"pause\");\n\n\treturn 0;\n}\n```\n\n总结：\n\n- 当数据以键值对形式存在，可以考虑用 map 或 multimap\n","slug":"C-STL","published":1,"updated":"2024-06-17T03:07:32.412Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gaw000ebiub5ltue9rt","content":"<h1>string 容器</h1>\n<h2 id=\"string-基本概念\">string 基本概念</h2>\n<p><strong>本质：</strong></p>\n<ul>\n<li>string 是 C++风格的字符串，而 string 本质上是一个类</li>\n</ul>\n<p><strong>string 和 char * 区别：</strong></p>\n<ul>\n<li>char * 是一个指针</li>\n<li>string 是一个类，类内部封装了 char*，管理这个字符串，是一个 char*型的容器。</li>\n</ul>\n<p><strong>特点：</strong></p>\n<p>string 类内部封装了很多成员方法</p>\n<p>例如：查找 find，拷贝 copy，删除 delete 替换 replace，插入 insert</p>\n<p>string 管理 char*所分配的内存，不用担心复制越界和取值越界等，由类内部进行负责</p>\n<h2 id=\"string-构造函数\">string 构造函数</h2>\n<p>构造函数原型：</p>\n<ul>\n<li><code>string();</code> //创建一个空的字符串 例如: string str;</li>\n<li><code>string(const char* s);</code> //使用字符串 s 初始化</li>\n<li><code>string(const string&amp; str);</code> //使用一个 string 对象初始化另一个 string 对象</li>\n<li><code>string(int n, char c);</code> //使用 n 个字符 c 初始化</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">//string构造</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring s1; <span class=\"comment\">//创建空字符串，调用无参构造函数</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; s1 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"type\">char</span>* str = <span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\">\t<span class=\"function\">string <span class=\"title\">s2</span><span class=\"params\">(str)</span></span>; <span class=\"comment\">//把c_string转换成了string</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str2 = &quot;</span> &lt;&lt; s2 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">string <span class=\"title\">s3</span><span class=\"params\">(s2)</span></span>; <span class=\"comment\">//调用拷贝构造函数</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str3 = &quot;</span> &lt;&lt; s3 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">string <span class=\"title\">s4</span><span class=\"params\">(<span class=\"number\">10</span>, <span class=\"string\">&#x27;a&#x27;</span>)</span></span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str3 = &quot;</span> &lt;&lt; s3 &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：string 的多种构造方式没有可比性，灵活使用即可</p>\n<h2 id=\"string-赋值操作\">string 赋值操作</h2>\n<p>功能描述：</p>\n<ul>\n<li>给 string 字符串进行赋值</li>\n</ul>\n<p>赋值的函数原型：</p>\n<ul>\n<li><code>string&amp; operator=(const char* s);</code> //char*类型字符串 赋值给当前的字符串</li>\n<li><code>string&amp; operator=(const string &amp;s);</code> //把字符串 s 赋给当前的字符串</li>\n<li><code>string&amp; operator=(char c);</code> //字符赋值给当前的字符串</li>\n<li><code>string&amp; assign(const char *s);</code> //把字符串 s 赋给当前的字符串</li>\n<li><code>string&amp; assign(const char *s, int n);</code> //把字符串 s 的前 n 个字符赋给当前的字符串</li>\n<li><code>string&amp; assign(const string &amp;s);</code> //把字符串 s 赋给当前字符串</li>\n<li><code>string&amp; assign(int n, char c);</code> //用 n 个字符 c 赋给当前字符串</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//赋值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring str1;</span><br><span class=\"line\">\tstr1 = <span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str2;</span><br><span class=\"line\">\tstr2 = str1;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str2 = &quot;</span> &lt;&lt; str2 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str3;</span><br><span class=\"line\">\tstr3 = <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str3 = &quot;</span> &lt;&lt; str3 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str4;</span><br><span class=\"line\">\tstr4.<span class=\"built_in\">assign</span>(<span class=\"string\">&quot;hello c++&quot;</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str4 = &quot;</span> &lt;&lt; str4 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str5;</span><br><span class=\"line\">\tstr5.<span class=\"built_in\">assign</span>(<span class=\"string\">&quot;hello c++&quot;</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str5 = &quot;</span> &lt;&lt; str5 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str6;</span><br><span class=\"line\">\tstr6.<span class=\"built_in\">assign</span>(str5);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str6 = &quot;</span> &lt;&lt; str6 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str7;</span><br><span class=\"line\">\tstr7.<span class=\"built_in\">assign</span>(<span class=\"number\">5</span>, <span class=\"string\">&#x27;x&#x27;</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str7 = &quot;</span> &lt;&lt; str7 &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<p>​ string 的赋值方式很多，<code>operator=</code> 这种方式是比较实用的</p>\n<h2 id=\"string-字符串拼接\">string 字符串拼接</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>实现在字符串末尾拼接字符串</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>string&amp; operator+=(const char* str);</code> //重载+=操作符</li>\n<li><code>string&amp; operator+=(const char c);</code> //重载+=操作符</li>\n<li><code>string&amp; operator+=(const string&amp; str);</code> //重载+=操作符</li>\n<li><code>string&amp; append(const char *s); </code> //把字符串 s 连接到当前字符串结尾</li>\n<li><code>string&amp; append(const char *s, int n);</code> //把字符串 s 的前 n 个字符连接到当前字符串结尾</li>\n<li><code>string&amp; append(const string &amp;s);</code> //同 operator+=(const string&amp; str)</li>\n<li><code>string&amp; append(const string &amp;s, int pos, int n);</code>//字符串 s 中从 pos 开始的 n 个字符连接到字符串结尾</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//字符串拼接</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring str1 = <span class=\"string\">&quot;我&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstr1 += <span class=\"string\">&quot;爱玩游戏&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstr1 += <span class=\"string\">&#x27;:&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str2 = <span class=\"string\">&quot;LOL DNF&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstr1 += str2;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str3 = <span class=\"string\">&quot;I&quot;</span>;</span><br><span class=\"line\">\tstr3.<span class=\"built_in\">append</span>(<span class=\"string\">&quot; love &quot;</span>);</span><br><span class=\"line\">\tstr3.<span class=\"built_in\">append</span>(<span class=\"string\">&quot;game abcde&quot;</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//str3.append(str2);</span></span><br><span class=\"line\">\tstr3.<span class=\"built_in\">append</span>(str2, <span class=\"number\">4</span>, <span class=\"number\">3</span>); <span class=\"comment\">// 从下标4位置开始 ，截取3个字符，拼接到字符串末尾</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str3 = &quot;</span> &lt;&lt; str3 &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：字符串拼接的重载版本很多，初学阶段记住几种即可</p>\n<h2 id=\"string-查找和替换\">string 查找和替换</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>查找：查找指定字符串是否存在</li>\n<li>替换：在指定的位置替换字符串</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>int find(const string&amp; str, int pos = 0) const;</code> //查找 str 第一次出现位置,从 pos 开始查找</li>\n<li><code>int find(const char* s, int pos = 0) const; </code> //查找 s 第一次出现位置,从 pos 开始查找</li>\n<li><code>int find(const char* s, int pos, int n) const; </code> //从 pos 位置查找 s 的前 n 个字符第一次位置</li>\n<li><code>int find(const char c, int pos = 0) const; </code> //查找字符 c 第一次出现位置</li>\n<li><code>int rfind(const string&amp; str, int pos = npos) const;</code> //查找 str 最后一次位置,从 pos 开始查找</li>\n<li><code>int rfind(const char* s, int pos = npos) const;</code> //查找 s 最后一次出现位置,从 pos 开始查找</li>\n<li><code>int rfind(const char* s, int pos, int n) const;</code> //从 pos 查找 s 的前 n 个字符最后一次位置</li>\n<li><code>int rfind(const char c, int pos = 0) const;  </code> //查找字符 c 最后一次出现位置</li>\n<li><code>string&amp; replace(int pos, int n, const string&amp; str); </code> //替换从 pos 开始 n 个字符为字符串 str</li>\n<li><code>string&amp; replace(int pos, int n,const char* s); </code> //替换从 pos 开始的 n 个字符为字符串 s</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//查找和替换</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//查找</span></span><br><span class=\"line\">\tstring str1 = <span class=\"string\">&quot;abcdefgde&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> pos = str1.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;de&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (pos == <span class=\"number\">-1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;未找到&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;pos = &quot;</span> &lt;&lt; pos &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\tpos = str1.<span class=\"built_in\">rfind</span>(<span class=\"string\">&quot;de&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;pos = &quot;</span> &lt;&lt; pos &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//替换</span></span><br><span class=\"line\">\tstring str1 = <span class=\"string\">&quot;abcdefgde&quot;</span>;</span><br><span class=\"line\">\tstr1.<span class=\"built_in\">replace</span>(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"string\">&quot;1111&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//test01();</span></span><br><span class=\"line\">\t<span class=\"comment\">//test02();</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>find 查找是从左往后，rfind 从右往左</li>\n<li>find 找到字符串后返回查找的第一个字符位置，找不到返回-1</li>\n<li>replace 在替换时，要指定从哪个位置起，多少个字符，替换成什么样的字符串</li>\n</ul>\n<h2 id=\"string-字符串比较\">string 字符串比较</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>字符串之间的比较</li>\n</ul>\n<p><strong>比较方式：</strong></p>\n<ul>\n<li>字符串比较是按字符的 ASCII 码进行对比</li>\n</ul>\n<p>= 返回 0</p>\n<p>&gt; 返回 1</p>\n<p>&lt; 返回 -1</p>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>int compare(const string &amp;s) const; </code> //与字符串 s 比较</li>\n<li><code>int compare(const char *s) const;</code> //与字符串 s 比较</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//字符串比较</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring s1 = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">\tstring s2 = <span class=\"string\">&quot;aello&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> ret = s1.<span class=\"built_in\">compare</span>(s2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ret == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;s1 等于 s2&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (ret &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;s1 大于 s2&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;s1 小于 s2&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：字符串对比主要是用于比较两个字符串是否相等，判断谁大谁小的意义并不是很大</p>\n<h2 id=\"string-字符存取\">string 字符存取</h2>\n<p>string 中单个字符存取方式有两种</p>\n<ul>\n<li><code>char&amp; operator[](int n); </code> //通过[]方式取字符</li>\n<li><code>char&amp; at(int n);   </code> //通过 at 方法获取字符</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring str = <span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; str.<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; str[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; str.<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; str.<span class=\"built_in\">at</span>(i) &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//字符修改</span></span><br><span class=\"line\">\tstr[<span class=\"number\">0</span>] = <span class=\"string\">&#x27;x&#x27;</span>;</span><br><span class=\"line\">\tstr.<span class=\"built_in\">at</span>(<span class=\"number\">1</span>) = <span class=\"string\">&#x27;x&#x27;</span>;</span><br><span class=\"line\">\tcout &lt;&lt; str &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：string 字符串中单个字符存取有两种方式，利用 [ ] 或 at</p>\n<h2 id=\"string-插入和删除\">string 插入和删除</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 string 字符串进行插入和删除字符操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>string&amp; insert(int pos, const char* s);  </code> //插入字符串</li>\n<li><code>string&amp; insert(int pos, const string&amp; str); </code> //插入字符串</li>\n<li><code>string&amp; insert(int pos, int n, char c);</code> //在指定位置插入 n 个字符 c</li>\n<li><code>string&amp; erase(int pos, int n = npos);</code> //删除从 Pos 开始的 n 个字符</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//字符串插入和删除</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring str = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">\tstr.<span class=\"built_in\">insert</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;111&quot;</span>);</span><br><span class=\"line\">\tcout &lt;&lt; str &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstr.<span class=\"built_in\">erase</span>(<span class=\"number\">1</span>, <span class=\"number\">3</span>);  <span class=\"comment\">//从1号位置开始3个字符</span></span><br><span class=\"line\">\tcout &lt;&lt; str &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>**总结：**插入和删除的起始下标都是从 0 开始</p>\n<h2 id=\"string-子串\">string 子串</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>从字符串中获取想要的子串</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>string substr(int pos = 0, int n = npos) const;</code> //返回由 pos 开始的 n 个字符组成的字符串</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//子串</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str = <span class=\"string\">&quot;abcdefg&quot;</span>;</span><br><span class=\"line\">\tstring subStr = str.<span class=\"built_in\">substr</span>(<span class=\"number\">1</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;subStr = &quot;</span> &lt;&lt; subStr &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring email = <span class=\"string\">&quot;hello@sina.com&quot;</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> pos = email.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;@&quot;</span>);</span><br><span class=\"line\">\tstring username = email.<span class=\"built_in\">substr</span>(<span class=\"number\">0</span>, pos);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;username: &quot;</span> &lt;&lt; username &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>**总结：**灵活的运用求子串功能，可以在实际开发中获取有效的信息</p>\n<h1>vector 容器</h1>\n<h2 id=\"vector-基本概念\">vector 基本概念</h2>\n<p><strong>功能：</strong></p>\n<ul>\n<li>vector 数据结构和<strong>数组非常相似</strong>，也称为<strong>单端数组</strong></li>\n</ul>\n<p><strong>vector 与普通数组区别：</strong></p>\n<ul>\n<li>不同之处在于数组是静态空间，而 vector 可以<strong>动态扩展</strong></li>\n</ul>\n<p><strong>动态扩展：</strong></p>\n<ul>\n<li>\n<p>并不是在原空间之后续接新空间，而是找更大的内存空间，然后将原数据拷贝新空间，释放原空间</p>\n</li>\n<li>\n<p>vector 容器的迭代器是支持随机访问的迭代器</p>\n</li>\n</ul>\n<h2 id=\"vector-构造函数\">vector 构造函数</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>创建 vector 容器</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>vector&lt;T&gt; v; </code> //采用模板实现类实现，默认构造函数</li>\n<li><code>vector(v.begin(), v.end());   </code> //将 v[begin(), end())区间中的元素拷贝给本身。</li>\n<li><code>vector(n, elem);</code> //构造函数将 n 个 elem 拷贝给本身。</li>\n<li><code>vector(const vector &amp;vec);</code> //拷贝构造函数。</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1; <span class=\"comment\">//无参构造</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v2</span><span class=\"params\">(v1.begin(), v1.end())</span></span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v3</span><span class=\"params\">(<span class=\"number\">10</span>, <span class=\"number\">100</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v3);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v4</span><span class=\"params\">(v3)</span></span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v4);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>**总结：**vector 的多种构造方式没有可比性，灵活使用即可</p>\n<h2 id=\"vector-赋值操作\">vector 赋值操作</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>给 vector 容器进行赋值</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>vector&amp; operator=(const vector &amp;vec);</code>//重载等号操作符</p>\n</li>\n<li>\n<p><code>assign(beg, end);</code> //将[beg, end)区间中的数据拷贝赋值给本身。</p>\n</li>\n<li>\n<p><code>assign(n, elem);</code> //将 n 个 elem 拷贝赋值给本身。</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//赋值操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1; <span class=\"comment\">//无参构造</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v2;</span><br><span class=\"line\">\tv2 = v1;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v3;</span><br><span class=\"line\">\tv3.<span class=\"built_in\">assign</span>(v1.<span class=\"built_in\">begin</span>(), v1.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v3);</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v4;</span><br><span class=\"line\">\tv4.<span class=\"built_in\">assign</span>(<span class=\"number\">10</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v4);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>总结： vector 赋值方式比较简单，使用 operator=，或者 assign 都可以</p>\n<h2 id=\"vector-容量和大小\">vector 容量和大小</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 vector 容器的容量和大小操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>empty(); </code> //判断容器是否为空</p>\n</li>\n<li>\n<p><code>capacity();</code> //容器的容量</p>\n</li>\n<li>\n<p><code>size();</code> //返回容器中元素的个数</p>\n</li>\n<li>\n<p><code>resize(int num);</code> //重新指定容器的长度为 num，若容器变长，则以默认值填充新位置。</p>\n<p>​ //如果容器变短，则末尾超出容器长度的元素被删除。</p>\n</li>\n<li>\n<p><code>resize(int num, elem);</code> //重新指定容器的长度为 num，若容器变长，则以 elem 值填充新位置。</p>\n<p>​ //如果容器变短，则末尾超出容器长度的元素被删除</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (v1.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;v1为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;v1不为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;v1的容量 = &quot;</span> &lt;&lt; v1.<span class=\"built_in\">capacity</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;v1的大小 = &quot;</span> &lt;&lt; v1.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//resize 重新指定大小 ，若指定的更大，默认用0填充新位置，可以利用重载版本替换默认填充</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">resize</span>(<span class=\"number\">15</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//resize 重新指定大小 ，若指定的更小，超出部分元素被删除</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">resize</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>判断是否为空 — empty</li>\n<li>返回元素个数 — size</li>\n<li>返回容器容量 — capacity</li>\n<li>重新指定大小 — resize</li>\n</ul>\n<h2 id=\"vector-插入和删除\">vector 插入和删除</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 vector 容器进行插入、删除操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>push_back(ele);</code> //尾部插入元素 ele</li>\n<li><code>pop_back();</code> //删除最后一个元素</li>\n<li><code>insert(const_iterator pos, ele);</code> //迭代器指向位置 pos 插入元素 ele</li>\n<li><code>insert(const_iterator pos, int count,ele);</code>//迭代器指向位置 pos 插入 count 个元素 ele</li>\n<li><code>erase(const_iterator pos);</code> //删除迭代器指向的元素</li>\n<li><code>erase(const_iterator start, const_iterator end);</code>//删除迭代器从 start 到 end 之间的元素</li>\n<li><code>clear();</code> //删除容器中所有元素</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//插入和删除</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1;</span><br><span class=\"line\">\t<span class=\"comment\">//尾插</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tv1.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tv1.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tv1.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\">\tv1.<span class=\"built_in\">push_back</span>(<span class=\"number\">50</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">\t<span class=\"comment\">//尾删</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">\t<span class=\"comment\">//插入</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">insert</span>(v1.<span class=\"built_in\">begin</span>(), <span class=\"number\">100</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\tv1.<span class=\"built_in\">insert</span>(v1.<span class=\"built_in\">begin</span>(), <span class=\"number\">2</span>, <span class=\"number\">1000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//删除</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">erase</span>(v1.<span class=\"built_in\">begin</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//清空</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">erase</span>(v1.<span class=\"built_in\">begin</span>(), v1.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\tv1.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>尾插 — push_back</li>\n<li>尾删 — pop_back</li>\n<li>插入 — insert (位置迭代器)</li>\n<li>删除 — erase （位置迭代器）</li>\n<li>清空 — clear</li>\n</ul>\n<h2 id=\"vector-数据存取\">vector 数据存取</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 vector 中的数据的存取操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>at(int idx); </code> //返回索引 idx 所指的数据</li>\n<li><code>operator[]; </code> //返回索引 idx 所指的数据</li>\n<li><code>front(); </code> //返回容器中第一个数据元素</li>\n<li><code>back();</code> //返回容器中最后一个数据元素</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v1;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; v1.<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; v1[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; v1.<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; v1.<span class=\"built_in\">at</span>(i) &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v1的第一个元素为： &quot;</span> &lt;&lt; v1.<span class=\"built_in\">front</span>() &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v1的最后一个元素为： &quot;</span> &lt;&lt; v1.<span class=\"built_in\">back</span>() &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>除了用迭代器获取 vector 容器中元素，[ ]和 at 也可以</li>\n<li>front 返回容器第一个元素</li>\n<li>back 返回容器最后一个元素</li>\n</ul>\n<h2 id=\"vector-互换容器\">vector 互换容器</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>实现两个容器内元素进行互换</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>swap(vec);</code> // 将 vec 与本身的元素互换</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v1;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v2;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">10</span>; i &gt; <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv2.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//互换容器</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;互换后&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tv1.<span class=\"built_in\">swap</span>(v2);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100000</span>; i++) &#123;</span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的容量为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">capacity</span>() &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的大小为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tv.<span class=\"built_in\">resize</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的容量为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">capacity</span>() &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的大小为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//收缩内存</span></span><br><span class=\"line\">\t<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(v).<span class=\"built_in\">swap</span>(v); <span class=\"comment\">//匿名对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的容量为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">capacity</span>() &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的大小为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test02</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>总结：swap 可以使两个容器互换，可以达到实用的收缩内存效果</p>\n<h2 id=\"vector-预留空间\">vector 预留空间</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>减少 vector 在动态扩展容量时的扩展次数</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>reserve(int len);</code>//容器预留 len 个元素长度，预留位置不初始化，元素不可访问。</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//预留空间</span></span><br><span class=\"line\">\tv.<span class=\"built_in\">reserve</span>(<span class=\"number\">100000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span>* p = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100000</span>; i++) &#123;</span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (p != &amp;v[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">\t\t\tp = &amp;v[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t\tnum++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;num:&quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：如果数据量较大，可以一开始利用 reserve 预留空间</p>\n<h1>deque 容器</h1>\n<h2 id=\"deque-容器基本概念\">deque 容器基本概念</h2>\n<p><strong>功能：</strong></p>\n<ul>\n<li>双端数组，可以对头端进行插入删除操作</li>\n</ul>\n<p><strong>deque 与 vector 区别：</strong></p>\n<ul>\n<li>vector 对于头部的插入删除效率低，数据量越大，效率越低</li>\n<li>deque 相对而言，对头部的插入删除速度回比 vector 快</li>\n<li>vector 访问元素时的速度会比 deque 快,这和两者内部实现有关</li>\n</ul>\n<p><img src=\"assets/clip_image002-1547547642923.jpg\" alt=\"说明: 2015-11-19_204101\"></p>\n<p>deque 内部工作原理:</p>\n<p>deque 内部有个<strong>中控器</strong>，维护每段缓冲区中的内容，缓冲区中存放真实数据</p>\n<p>中控器维护的是每个缓冲区的地址，使得使用 deque 时像一片连续的内存空间</p>\n<p><img src=\"assets/clip_image002-1547547896341.jpg\" alt=\"clip_image002-1547547896341\"></p>\n<ul>\n<li>deque 容器的迭代器也是支持随机访问的</li>\n</ul>\n<h2 id=\"deque-构造函数\">deque 构造函数</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>deque 容器构造</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>deque&lt;T&gt;</code> deqT; //默认构造形式</li>\n<li><code>deque(beg, end);</code> //构造函数将[beg, end)区间中的元素拷贝给本身。</li>\n<li><code>deque(n, elem);</code> //构造函数将 n 个 elem 拷贝给本身。</li>\n<li><code>deque(const deque &amp;deq);</code> //拷贝构造函数</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//deque构造</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d1; <span class=\"comment\">//无参构造函数</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\td1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d1);</span><br><span class=\"line\">\t<span class=\"function\">deque&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">d2</span><span class=\"params\">(d1.begin(),d1.end())</span></span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;<span class=\"built_in\">d3</span>(<span class=\"number\">10</span>,<span class=\"number\">100</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d3);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;d4 = d3;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d4);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>**总结：**deque 容器和 vector 容器的构造方式几乎一致，灵活使用即可</p>\n<h2 id=\"deque-赋值操作\">deque 赋值操作</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>给 deque 容器进行赋值</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>deque&amp; operator=(const deque &amp;deq); </code> //重载等号操作符</p>\n</li>\n<li>\n<p><code>assign(beg, end);</code> //将[beg, end)区间中的数据拷贝赋值给本身。</p>\n</li>\n<li>\n<p><code>assign(n, elem);</code> //将 n 个 elem 拷贝赋值给本身。</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//赋值操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d1;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\td1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d1);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;d2;</span><br><span class=\"line\">\td2 = d1;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;d3;</span><br><span class=\"line\">\td3.<span class=\"built_in\">assign</span>(d1.<span class=\"built_in\">begin</span>(), d1.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d3);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;d4;</span><br><span class=\"line\">\td4.<span class=\"built_in\">assign</span>(<span class=\"number\">10</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d4);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：deque 赋值操作也与 vector 相同，需熟练掌握</p>\n<h2 id=\"deque-大小操作\">deque 大小操作</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 deque 容器的大小进行操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>deque.empty();</code> //判断容器是否为空</p>\n</li>\n<li>\n<p><code>deque.size();</code> //返回容器中元素的个数</p>\n</li>\n<li>\n<p><code>deque.resize(num);</code> //重新指定容器的长度为 num,若容器变长，则以默认值填充新位置。</p>\n<p>​ //如果容器变短，则末尾超出容器长度的元素被删除。</p>\n</li>\n<li>\n<p><code>deque.resize(num, elem);</code> //重新指定容器的长度为 num,若容器变长，则以 elem 值填充新位置。</p>\n<p>​ //如果容器变短，则末尾超出容器长度的元素被删除。</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//大小操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d1;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\td1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//判断容器是否为空</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (d1.<span class=\"built_in\">empty</span>()) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;d1为空!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;d1不为空!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\t<span class=\"comment\">//统计大小</span></span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;d1的大小为：&quot;</span> &lt;&lt; d1.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//重新指定大小</span></span><br><span class=\"line\">\td1.<span class=\"built_in\">resize</span>(<span class=\"number\">15</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d1);</span><br><span class=\"line\"></span><br><span class=\"line\">\td1.<span class=\"built_in\">resize</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>deque 没有容量的概念</li>\n<li>判断是否为空 — empty</li>\n<li>返回元素个数 — size</li>\n<li>重新指定个数 — resize</li>\n</ul>\n<h2 id=\"deque-插入和删除\">deque 插入和删除</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>向 deque 容器中插入和删除数据</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<p>两端插入操作：</p>\n<ul>\n<li><code>push_back(elem);</code> //在容器尾部添加一个数据</li>\n<li><code>push_front(elem);</code> //在容器头部插入一个数据</li>\n<li><code>pop_back();</code> //删除容器最后一个数据</li>\n<li><code>pop_front();</code> //删除容器第一个数据</li>\n</ul>\n<p>指定位置操作：</p>\n<ul>\n<li>\n<p><code>insert(pos,elem);</code> //在 pos 位置插入一个 elem 元素的拷贝，返回新数据的位置。</p>\n</li>\n<li>\n<p><code>insert(pos,n,elem);</code> //在 pos 位置插入 n 个 elem 数据，无返回值。</p>\n</li>\n<li>\n<p><code>insert(pos,beg,end);</code> //在 pos 位置插入[beg,end)区间的数据，无返回值。</p>\n</li>\n<li>\n<p><code>clear();</code> //清空容器的所有数据</p>\n</li>\n<li>\n<p><code>erase(beg,end);</code> //删除[beg,end)区间的数据，返回下一个数据的位置。</p>\n</li>\n<li>\n<p><code>erase(pos);</code> //删除 pos 位置的数据，返回下一个数据的位置。</p>\n<p>​</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//两端操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d;</span><br><span class=\"line\">\t<span class=\"comment\">//尾插</span></span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//头插</span></span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//尾删</span></span><br><span class=\"line\">\td.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">\t<span class=\"comment\">//头删</span></span><br><span class=\"line\">\td.<span class=\"built_in\">pop_front</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//插入</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d;</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\td.<span class=\"built_in\">insert</span>(d.<span class=\"built_in\">begin</span>(), <span class=\"number\">1000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\td.<span class=\"built_in\">insert</span>(d.<span class=\"built_in\">begin</span>(), <span class=\"number\">2</span>,<span class=\"number\">10000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;d2;</span><br><span class=\"line\">\td2.<span class=\"built_in\">push_back</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">\td2.<span class=\"built_in\">push_back</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">\td2.<span class=\"built_in\">push_back</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\td.<span class=\"built_in\">insert</span>(d.<span class=\"built_in\">begin</span>(), d2.<span class=\"built_in\">begin</span>(), d2.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//删除</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test03</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d;</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\td.<span class=\"built_in\">erase</span>(d.<span class=\"built_in\">begin</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\td.<span class=\"built_in\">erase</span>(d.<span class=\"built_in\">begin</span>(), d.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\td.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//test01();</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//test02();</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">test03</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>插入和删除提供的位置是迭代器！</li>\n<li>尾插 — push_back</li>\n<li>尾删 — pop_back</li>\n<li>头插 — push_front</li>\n<li>头删 — pop_front</li>\n</ul>\n<h2 id=\"deque-数据存取\">deque 数据存取</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 deque 中的数据的存取操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>at(int idx); </code> //返回索引 idx 所指的数据</li>\n<li><code>operator[]; </code> //返回索引 idx 所指的数据</li>\n<li><code>front(); </code> //返回容器中第一个数据元素</li>\n<li><code>back();</code> //返回容器中最后一个数据元素</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//数据存取</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d;</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; d.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; d[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; d.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; d.<span class=\"built_in\">at</span>(i) &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;front:&quot;</span> &lt;&lt; d.<span class=\"built_in\">front</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;back:&quot;</span> &lt;&lt; d.<span class=\"built_in\">back</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>除了用迭代器获取 deque 容器中元素，[ ]和 at 也可以</li>\n<li>front 返回容器第一个元素</li>\n<li>back 返回容器最后一个元素</li>\n</ul>\n<h2 id=\"deque-排序\">deque 排序</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>利用算法实现对 deque 容器进行排序</li>\n</ul>\n<p><strong>算法：</strong></p>\n<ul>\n<li><code>sort(iterator beg, iterator end)</code> //对 beg 和 end 区间内元素进行排序</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d;</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\">\t<span class=\"built_in\">sort</span>(d.<span class=\"built_in\">begin</span>(), d.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：sort 算法非常实用，使用时包含头文件 algorithm 即可</p>\n<h1>案例-评委打分</h1>\n<h2 id=\"案例描述\">案例描述</h2>\n<p>有 5 名选手：选手 ABCDE，10 个评委分别对每一名选手打分，去除最高分，去除评委中最低分，取平均分。</p>\n<h2 id=\"实现步骤\">实现步骤</h2>\n<ol>\n<li>创建五名选手，放到 vector 中</li>\n<li>遍历 vector 容器，取出来每一个选手，执行 for 循环，可以把 10 个评分打分存到 deque 容器中</li>\n<li>sort 算法对 deque 容器中分数排序，去除最高和最低分</li>\n<li>deque 容器遍历一遍，累加总分</li>\n<li>获取平均分</li>\n</ol>\n<p><strong>示例代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//选手类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">Person</span>(string name, <span class=\"type\">int</span> score)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Name = name;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Score = score;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring m_Name; <span class=\"comment\">//姓名</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Score;  <span class=\"comment\">//平均分</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">createPerson</span><span class=\"params\">(vector&lt;Person&gt;&amp;v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring nameSeed = <span class=\"string\">&quot;ABCDE&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tstring name = <span class=\"string\">&quot;选手&quot;</span>;</span><br><span class=\"line\">\t\tname += nameSeed[i];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> score = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\">Person <span class=\"title\">p</span><span class=\"params\">(name, score)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//将创建的person对象 放入到容器中</span></span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(p);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//打分</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setScore</span><span class=\"params\">(vector&lt;Person&gt;&amp;v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;Person&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//将评委的分数 放入到deque容器中</span></span><br><span class=\"line\">\t\tdeque&lt;<span class=\"type\">int</span>&gt;d;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> score = <span class=\"built_in\">rand</span>() % <span class=\"number\">41</span> + <span class=\"number\">60</span>;  <span class=\"comment\">// 60 ~ 100</span></span><br><span class=\"line\">\t\t\td.<span class=\"built_in\">push_back</span>(score);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//cout &lt;&lt; &quot;选手： &quot; &lt;&lt; it-&gt;m_Name &lt;&lt; &quot; 打分： &quot; &lt;&lt; endl;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//for (deque&lt;int&gt;::iterator dit = d.begin(); dit != d.end(); dit++)</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//&#123;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//\tcout &lt;&lt; *dit &lt;&lt; &quot; &quot;;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//&#125;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//cout &lt;&lt; endl;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//排序</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">sort</span>(d.<span class=\"built_in\">begin</span>(), d.<span class=\"built_in\">end</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//去除最高和最低分</span></span><br><span class=\"line\">\t\td.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">\t\td.<span class=\"built_in\">pop_front</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//取平均分</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::iterator dit = d.<span class=\"built_in\">begin</span>(); dit != d.<span class=\"built_in\">end</span>(); dit++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tsum += *dit; <span class=\"comment\">//累加每个评委的分数</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> avg = sum / d.<span class=\"built_in\">size</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//将平均分 赋值给选手身上</span></span><br><span class=\"line\">\t\tit-&gt;m_Score = avg;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">showScore</span><span class=\"params\">(vector&lt;Person&gt;&amp;v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;Person&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; it-&gt;m_Name &lt;&lt; <span class=\"string\">&quot; 平均分： &quot;</span> &lt;&lt; it-&gt;m_Score &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//随机数种子</span></span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>((<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)<span class=\"built_in\">time</span>(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//1、创建5名选手</span></span><br><span class=\"line\">\tvector&lt;Person&gt;v;  <span class=\"comment\">//存放选手容器</span></span><br><span class=\"line\">\t<span class=\"built_in\">createPerson</span>(v);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//测试</span></span><br><span class=\"line\">\t<span class=\"comment\">//for (vector&lt;Person&gt;::iterator it = v.begin(); it != v.end(); it++)</span></span><br><span class=\"line\">\t<span class=\"comment\">//&#123;</span></span><br><span class=\"line\">\t<span class=\"comment\">//\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt; (*it).m_Name &lt;&lt; &quot; 分数： &quot; &lt;&lt; (*it).m_Score &lt;&lt; endl;</span></span><br><span class=\"line\">\t<span class=\"comment\">//&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//2、给5名选手打分</span></span><br><span class=\"line\">\t<span class=\"built_in\">setScore</span>(v);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//3、显示最后得分</span></span><br><span class=\"line\">\t<span class=\"built_in\">showScore</span>(v);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>总结：</strong> 选取不同的容器操作数据，可以提升代码的效率</p>\n<h1>stack 容器</h1>\n<h2 id=\"stack-基本概念\">stack 基本概念</h2>\n<p><strong>概念：<strong>stack 是一种</strong>先进后出</strong>(First In Last Out,FILO)的数据结构，它只有一个出口</p>\n<p><img src=\"assets/clip_image002-1547604555425.jpg\" alt=\"说明: 2015-11-15_195707\"></p>\n<p>栈中只有顶端的元素才可以被外界使用，因此栈不允许有遍历行为</p>\n<p>栈中进入数据称为 — <strong>入栈</strong> <code>push</code></p>\n<p>栈中弹出数据称为 — <strong>出栈</strong> <code>pop</code></p>\n<p>生活中的栈：</p>\n<p><img src=\"assets/clip_image002.png\" alt=\"img\"></p>\n<p><img src=\"assets/clip_image002-1547605111510.jpg\" alt=\"img\"></p>\n<h2 id=\"stack-常用接口\">stack 常用接口</h2>\n<p>功能描述：栈容器常用的对外接口</p>\n<p>构造函数：</p>\n<ul>\n<li><code>stack&lt;T&gt; stk;</code> //stack 采用模板类实现， stack 对象的默认构造形式</li>\n<li><code>stack(const stack &amp;stk);</code> //拷贝构造函数</li>\n</ul>\n<p>赋值操作：</p>\n<ul>\n<li><code>stack&amp; operator=(const stack &amp;stk);</code> //重载等号操作符</li>\n</ul>\n<p>数据存取：</p>\n<ul>\n<li><code>push(elem);</code> //向栈顶添加元素</li>\n<li><code>pop();</code> //从栈顶移除第一个元素</li>\n<li><code>top(); </code> //返回栈顶元素</li>\n</ul>\n<p>大小操作：</p>\n<ul>\n<li><code>empty();</code> //判断堆栈是否为空</li>\n<li><code>size(); </code> //返回栈的大小</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stack&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//栈容器常用接口</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//创建栈容器 栈容器必须符合先进后出</span></span><br><span class=\"line\">\tstack&lt;<span class=\"type\">int</span>&gt; s;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//向栈中添加元素，叫做 压栈 入栈</span></span><br><span class=\"line\">\ts.<span class=\"built_in\">push</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\ts.<span class=\"built_in\">push</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\ts.<span class=\"built_in\">push</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (!s.<span class=\"built_in\">empty</span>()) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出栈顶元素</span></span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;栈顶元素为： &quot;</span> &lt;&lt; s.<span class=\"built_in\">top</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t\t<span class=\"comment\">//弹出栈顶元素</span></span><br><span class=\"line\">\t\ts.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;栈的大小为：&quot;</span> &lt;&lt; s.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>入栈 — push</li>\n<li>出栈 — pop</li>\n<li>返回栈顶 — top</li>\n<li>判断栈是否为空 — empty</li>\n<li>返回栈大小 — size</li>\n</ul>\n<h1>queue 容器</h1>\n<h2 id=\"queue-基本概念\">queue 基本概念</h2>\n<p><strong>概念：<strong>Queue 是一种</strong>先进先出</strong>(First In First Out,FIFO)的数据结构，它有两个出口</p>\n<p><img src=\"assets/clip_image002-1547606475892.jpg\" alt=\"说明: 2015-11-15_214429\"></p>\n<p>队列容器允许从一端新增元素，从另一端移除元素</p>\n<p>队列中只有队头和队尾才可以被外界使用，因此队列不允许有遍历行为</p>\n<p>队列中进数据称为 — <strong>入队</strong> <code>push</code></p>\n<p>队列中出数据称为 — <strong>出队</strong> <code>pop</code></p>\n<p>生活中的队列：</p>\n<p><img src=\"assets/1547606785041.png\" alt=\"1547606785041\"></p>\n<h2 id=\"queue-常用接口\">queue 常用接口</h2>\n<p>功能描述：栈容器常用的对外接口</p>\n<p>构造函数：</p>\n<ul>\n<li><code>queue&lt;T&gt; que;</code> //queue 采用模板类实现，queue 对象的默认构造形式</li>\n<li><code>queue(const queue &amp;que);</code> //拷贝构造函数</li>\n</ul>\n<p>赋值操作：</p>\n<ul>\n<li><code>queue&amp; operator=(const queue &amp;que);</code> //重载等号操作符</li>\n</ul>\n<p>数据存取：</p>\n<ul>\n<li><code>push(elem);</code> //往队尾添加元素</li>\n<li><code>pop();</code> //从队头移除第一个元素</li>\n<li><code>back();</code> //返回最后一个元素</li>\n<li><code>front(); </code> //返回第一个元素</li>\n</ul>\n<p>大小操作：</p>\n<ul>\n<li><code>empty();</code> //判断堆栈是否为空</li>\n<li><code>size(); </code> //返回栈的大小</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">Person</span>(string name, <span class=\"type\">int</span> age)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Name = name;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Age = age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring m_Name;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Age;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//创建队列</span></span><br><span class=\"line\">\tqueue&lt;Person&gt; q;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//准备数据</span></span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p1</span><span class=\"params\">(<span class=\"string\">&quot;唐僧&quot;</span>, <span class=\"number\">30</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p2</span><span class=\"params\">(<span class=\"string\">&quot;孙悟空&quot;</span>, <span class=\"number\">1000</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p3</span><span class=\"params\">(<span class=\"string\">&quot;猪八戒&quot;</span>, <span class=\"number\">900</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p4</span><span class=\"params\">(<span class=\"string\">&quot;沙僧&quot;</span>, <span class=\"number\">800</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//向队列中添加元素  入队操作</span></span><br><span class=\"line\">\tq.<span class=\"built_in\">push</span>(p1);</span><br><span class=\"line\">\tq.<span class=\"built_in\">push</span>(p2);</span><br><span class=\"line\">\tq.<span class=\"built_in\">push</span>(p3);</span><br><span class=\"line\">\tq.<span class=\"built_in\">push</span>(p4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//队列不提供迭代器，更不支持随机访问</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (!q.<span class=\"built_in\">empty</span>()) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出队头元素</span></span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;队头元素-- 姓名： &quot;</span> &lt;&lt; q.<span class=\"built_in\">front</span>().m_Name</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot; 年龄： &quot;</span>&lt;&lt; q.<span class=\"built_in\">front</span>().m_Age &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;队尾元素-- 姓名： &quot;</span> &lt;&lt; q.<span class=\"built_in\">back</span>().m_Name</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot; 年龄： &quot;</span> &lt;&lt; q.<span class=\"built_in\">back</span>().m_Age &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tcout &lt;&lt; endl;</span><br><span class=\"line\">\t\t<span class=\"comment\">//弹出队头元素</span></span><br><span class=\"line\">\t\tq.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;队列大小为：&quot;</span> &lt;&lt; q.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>入队 — push</li>\n<li>出队 — pop</li>\n<li>返回队头元素 — front</li>\n<li>返回队尾元素 — back</li>\n<li>判断队是否为空 — empty</li>\n<li>返回队列大小 — size</li>\n</ul>\n<h1>list 容器</h1>\n<h2 id=\"list-基本概念\">list 基本概念</h2>\n<p>**功能：**将数据进行链式存储</p>\n<p><strong>链表</strong>（list）是一种物理存储单元上非连续的存储结构，数据元素的逻辑顺序是通过链表中的指针链接实现的</p>\n<p>链表的组成：链表由一系列<strong>结点</strong>组成</p>\n<p>结点的组成：一个是存储数据元素的<strong>数据域</strong>，另一个是存储下一个结点地址的<strong>指针域</strong></p>\n<p>STL 中的链表是一个双向循环链表</p>\n<p><img src=\"assets/clip_image002-1547608564071.jpg\" alt=\"说明: 2015-11-15_225145\"></p>\n<p>由于链表的存储方式并不是连续的内存空间，因此链表 list 中的迭代器只支持前移和后移，属于<strong>双向迭代器</strong></p>\n<p>list 的优点：</p>\n<ul>\n<li>采用动态存储分配，不会造成内存浪费和溢出</li>\n<li>链表执行插入和删除操作十分方便，修改指针即可，不需要移动大量元素</li>\n</ul>\n<p>list 的缺点：</p>\n<ul>\n<li>链表灵活，但是空间(指针域) 和 时间（遍历）额外耗费较大</li>\n</ul>\n<p>List 有一个重要的性质，插入操作和删除操作都不会造成原有 list 迭代器的失效，这在 vector 是不成立的。</p>\n<p>总结：STL 中<strong>List 和 vector 是两个最常被使用的容器</strong>，各有优缺点</p>\n<h2 id=\"list-构造函数\">list 构造函数</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>创建 list 容器</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>list&lt;T&gt; lst;</code> //list 采用采用模板类实现,对象的默认构造形式：</li>\n<li><code>list(beg,end);</code> //构造函数将[beg, end)区间中的元素拷贝给本身。</li>\n<li><code>list(n,elem);</code> //构造函数将 n 个 elem 拷贝给本身。</li>\n<li><code>list(const list &amp;lst);</code> //拷贝构造函数。</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;list&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printList</span><span class=\"params\">(<span class=\"type\">const</span> list&lt;<span class=\"type\">int</span>&gt;&amp; L)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (list&lt;<span class=\"type\">int</span>&gt;::const_iterator it = L.<span class=\"built_in\">begin</span>(); it != L.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L1;</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L1);</span><br><span class=\"line\"></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;<span class=\"built_in\">L2</span>(L1.<span class=\"built_in\">begin</span>(),L1.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;<span class=\"built_in\">L3</span>(L2);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L3);</span><br><span class=\"line\"></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;<span class=\"built_in\">L4</span>(<span class=\"number\">10</span>, <span class=\"number\">1000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L4);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：list 构造方式同其他几个 STL 常用容器，熟练掌握即可</p>\n<h2 id=\"list-赋值和交换\">list 赋值和交换</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>给 list 容器进行赋值，以及交换 list 容器</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>assign(beg, end);</code> //将[beg, end)区间中的数据拷贝赋值给本身。</li>\n<li><code>assign(n, elem);</code> //将 n 个 elem 拷贝赋值给本身。</li>\n<li><code>list&amp; operator=(const list &amp;lst);</code> //重载等号操作符</li>\n<li><code>swap(lst);</code> //将 lst 与本身的元素互换。</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;list&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printList</span><span class=\"params\">(<span class=\"type\">const</span> list&lt;<span class=\"type\">int</span>&gt;&amp; L)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (list&lt;<span class=\"type\">int</span>&gt;::const_iterator it = L.<span class=\"built_in\">begin</span>(); it != L.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//赋值和交换</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L1;</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//赋值</span></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L2;</span><br><span class=\"line\">\tL2 = L1;</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L3;</span><br><span class=\"line\">\tL3.<span class=\"built_in\">assign</span>(L2.<span class=\"built_in\">begin</span>(), L2.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L3);</span><br><span class=\"line\"></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L4;</span><br><span class=\"line\">\tL4.<span class=\"built_in\">assign</span>(<span class=\"number\">10</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L4);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//交换</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L1;</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L2;</span><br><span class=\"line\">\tL2.<span class=\"built_in\">assign</span>(<span class=\"number\">10</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;交换前： &quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L1);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tL1.<span class=\"built_in\">swap</span>(L2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;交换后： &quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L1);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L2);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//test01();</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test02</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：list 赋值和交换操作能够灵活运用即可</p>\n<h2 id=\"list-大小操作\">list 大小操作</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 list 容器的大小进行操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>size(); </code> //返回容器中元素的个数</p>\n</li>\n<li>\n<p><code>empty(); </code> //判断容器是否为空</p>\n</li>\n<li>\n<p><code>resize(num);</code> //重新指定容器的长度为 num，若容器变长，则以默认值填充新位置。</p>\n<p>​ //如果容器变短，则末尾超出容器长度的元素被删除。</p>\n</li>\n<li>\n<p><code>resize(num, elem); </code> //重新指定容器的长度为 num，若容器变长，则以 elem 值填充新位置。</p>\n<p>​ //如果容器变短，则末尾超出容器长度的元素被删除。</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;list&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printList</span><span class=\"params\">(<span class=\"type\">const</span> list&lt;<span class=\"type\">int</span>&gt;&amp; L)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (list&lt;<span class=\"type\">int</span>&gt;::const_iterator it = L.<span class=\"built_in\">begin</span>(); it != L.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//大小操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L1;</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L1.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;L1为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;L1不为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;L1的大小为： &quot;</span> &lt;&lt; L1.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//重新指定大小</span></span><br><span class=\"line\">\tL1.<span class=\"built_in\">resize</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L1);</span><br><span class=\"line\"></span><br><span class=\"line\">\tL1.<span class=\"built_in\">resize</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>判断是否为空 — empty</li>\n<li>返回元素个数 — size</li>\n<li>重新指定个数 — resize</li>\n</ul>\n<h2 id=\"list-插入和删除\">list 插入和删除</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 list 容器进行数据的插入和删除</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>push_back(elem);//在容器尾部加入一个元素</li>\n<li>pop_back();//删除容器中最后一个元素</li>\n<li>push_front(elem);//在容器开头插入一个元素</li>\n<li>pop_front();//从容器开头移除第一个元素</li>\n<li>insert(pos,elem);//在 pos 位置插 elem 元素的拷贝，返回新数据的位置。</li>\n<li>insert(pos,n,elem);//在 pos 位置插入 n 个 elem 数据，无返回值。</li>\n<li>insert(pos,beg,end);//在 pos 位置插入[beg,end)区间的数据，无返回值。</li>\n<li>clear();//移除容器的所有数据</li>\n<li>erase(beg,end);//删除[beg,end)区间的数据，返回下一个数据的位置。</li>\n<li>erase(pos);//删除 pos 位置的数据，返回下一个数据的位置。</li>\n<li>remove(elem);//删除容器中所有与 elem 值匹配的元素。</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;list&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printList</span><span class=\"params\">(<span class=\"type\">const</span> list&lt;<span class=\"type\">int</span>&gt;&amp; L)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (list&lt;<span class=\"type\">int</span>&gt;::const_iterator it = L.<span class=\"built_in\">begin</span>(); it != L.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//插入和删除</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt; L;</span><br><span class=\"line\">\t<span class=\"comment\">//尾插</span></span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//头插</span></span><br><span class=\"line\">\tL.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_front</span>(<span class=\"number\">300</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//尾删</span></span><br><span class=\"line\">\tL.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//头删</span></span><br><span class=\"line\">\tL.<span class=\"built_in\">pop_front</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//插入</span></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;::iterator it = L.<span class=\"built_in\">begin</span>();</span><br><span class=\"line\">\tL.<span class=\"built_in\">insert</span>(++it, <span class=\"number\">1000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//删除</span></span><br><span class=\"line\">\tit = L.<span class=\"built_in\">begin</span>();</span><br><span class=\"line\">\tL.<span class=\"built_in\">erase</span>(++it);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//移除</span></span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">10000</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">10000</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">10000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\">\tL.<span class=\"built_in\">remove</span>(<span class=\"number\">10000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//清空</span></span><br><span class=\"line\">\tL.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>尾插 — push_back</li>\n<li>尾删 — pop_back</li>\n<li>头插 — push_front</li>\n<li>头删 — pop_front</li>\n<li>插入 — insert</li>\n<li>删除 — erase</li>\n<li>移除 — remove</li>\n<li>清空 — clear</li>\n</ul>\n<h2 id=\"list-数据存取\">list 数据存取</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 list 容器中数据进行存取</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>front();</code> //返回第一个元素。</li>\n<li><code>back();</code> //返回最后一个元素。</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;list&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//数据存取</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L1;</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//cout &lt;&lt; L1.at(0) &lt;&lt; endl;//错误 不支持at访问数据</span></span><br><span class=\"line\">\t<span class=\"comment\">//cout &lt;&lt; L1[0] &lt;&lt; endl; //错误  不支持[]方式访问数据</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;第一个元素为： &quot;</span> &lt;&lt; L1.<span class=\"built_in\">front</span>() &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;最后一个元素为： &quot;</span> &lt;&lt; L1.<span class=\"built_in\">back</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//list容器的迭代器是双向迭代器，不支持随机访问</span></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;::iterator it = L1.<span class=\"built_in\">begin</span>();</span><br><span class=\"line\">\t<span class=\"comment\">//it = it + 1;//错误，不可以跳跃访问，即使是+1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>list 容器中不可以通过[]或者 at 方式访问数据</li>\n<li>返回第一个元素 — front</li>\n<li>返回最后一个元素 — back</li>\n</ul>\n<h2 id=\"list-反转和排序\">list 反转和排序</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>将容器中的元素反转，以及将容器中的数据进行排序</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>reverse();</code> //反转链表</li>\n<li><code>sort();</code> //链表排序</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printList</span><span class=\"params\">(<span class=\"type\">const</span> list&lt;<span class=\"type\">int</span>&gt;&amp; L)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (list&lt;<span class=\"type\">int</span>&gt;::const_iterator it = L.<span class=\"built_in\">begin</span>(); it != L.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">myCompare</span><span class=\"params\">(<span class=\"type\">int</span> val1 , <span class=\"type\">int</span> val2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> val1 &gt; val2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//反转和排序</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt; L;</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">90</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">70</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//反转容器的元素</span></span><br><span class=\"line\">\tL.<span class=\"built_in\">reverse</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//排序</span></span><br><span class=\"line\">\tL.<span class=\"built_in\">sort</span>(); <span class=\"comment\">//默认的排序规则 从小到大</span></span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">\tL.<span class=\"built_in\">sort</span>(myCompare); <span class=\"comment\">//指定规则，从大到小</span></span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>反转 — reverse</li>\n<li>排序 — sort （成员函数）</li>\n</ul>\n<h2 id=\"排序案例\">排序案例</h2>\n<p>案例描述：将 Person 自定义数据类型进行排序，Person 中属性有姓名、年龄、身高</p>\n<p>排序规则：按照年龄进行升序，如果年龄相同按照身高进行降序</p>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;list&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">Person</span>(string name, <span class=\"type\">int</span> age , <span class=\"type\">int</span> height) &#123;</span><br><span class=\"line\">\t\tm_Name = name;</span><br><span class=\"line\">\t\tm_Age = age;</span><br><span class=\"line\">\t\tm_Height = height;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\tstring m_Name;  <span class=\"comment\">//姓名</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Age;      <span class=\"comment\">//年龄</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Height;   <span class=\"comment\">//身高</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">ComparePerson</span><span class=\"params\">(Person&amp; p1, Person&amp; p2)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (p1.m_Age == p2.m_Age) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> p1.m_Height  &gt; p2.m_Height;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>  p1.m_Age &lt; p2.m_Age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tlist&lt;Person&gt; L;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p1</span><span class=\"params\">(<span class=\"string\">&quot;刘备&quot;</span>, <span class=\"number\">35</span> , <span class=\"number\">175</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p2</span><span class=\"params\">(<span class=\"string\">&quot;曹操&quot;</span>, <span class=\"number\">45</span> , <span class=\"number\">180</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p3</span><span class=\"params\">(<span class=\"string\">&quot;孙权&quot;</span>, <span class=\"number\">40</span> , <span class=\"number\">170</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p4</span><span class=\"params\">(<span class=\"string\">&quot;赵云&quot;</span>, <span class=\"number\">25</span> , <span class=\"number\">190</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p5</span><span class=\"params\">(<span class=\"string\">&quot;张飞&quot;</span>, <span class=\"number\">35</span> , <span class=\"number\">160</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p6</span><span class=\"params\">(<span class=\"string\">&quot;关羽&quot;</span>, <span class=\"number\">35</span> , <span class=\"number\">200</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(p1);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(p2);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(p3);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(p4);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(p5);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(p6);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (list&lt;Person&gt;::iterator it = L.<span class=\"built_in\">begin</span>(); it != L.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; it-&gt;m_Name &lt;&lt; <span class=\"string\">&quot; 年龄： &quot;</span> &lt;&lt; it-&gt;m_Age</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot; 身高： &quot;</span> &lt;&lt; it-&gt;m_Height &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;---------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tL.<span class=\"built_in\">sort</span>(ComparePerson); <span class=\"comment\">//排序</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (list&lt;Person&gt;::iterator it = L.<span class=\"built_in\">begin</span>(); it != L.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; it-&gt;m_Name &lt;&lt; <span class=\"string\">&quot; 年龄： &quot;</span> &lt;&lt; it-&gt;m_Age</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot; 身高： &quot;</span> &lt;&lt; it-&gt;m_Height &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>对于自定义数据类型，必须要指定排序规则，否则编译器不知道如何进行排序</li>\n<li>高级排序只是在排序规则上再进行一次逻辑规则制定，并不复杂</li>\n</ul>\n<h1>set/ multiset 容器</h1>\n<h2 id=\"set-基本概念\">set 基本概念</h2>\n<p><strong>简介：</strong></p>\n<ul>\n<li>所有元素都会在插入时自动被排序</li>\n</ul>\n<p><strong>本质：</strong></p>\n<ul>\n<li>set/multiset 属于<strong>关联式容器</strong>，底层结构是用<strong>二叉树</strong>实现。</li>\n</ul>\n<p><strong>set 和 multiset 区别</strong>：</p>\n<ul>\n<li>set 不允许容器中有重复的元素</li>\n<li>multiset 允许容器中有重复的元素</li>\n</ul>\n<h2 id=\"set-构造和赋值\">set 构造和赋值</h2>\n<p>功能描述：创建 set 容器以及赋值</p>\n<p>构造：</p>\n<ul>\n<li><code>set&lt;T&gt; st;</code> //默认构造函数：</li>\n<li><code>set(const set &amp;st);</code> //拷贝构造函数</li>\n</ul>\n<p>赋值：</p>\n<ul>\n<li><code>set&amp; operator=(const set &amp;st);</code> //重载等号操作符</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;set&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printSet</span><span class=\"params\">(set&lt;<span class=\"type\">int</span>&gt; &amp; s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (set&lt;<span class=\"type\">int</span>&gt;::iterator it = s.<span class=\"built_in\">begin</span>(); it != s.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//构造和赋值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt; s1;</span><br><span class=\"line\"></span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//拷贝构造</span></span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt;<span class=\"built_in\">s2</span>(s1);</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//赋值</span></span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt;s3;</span><br><span class=\"line\">\ts3 = s2;</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s3);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>set 容器插入数据时用 insert</li>\n<li>set 容器插入数据的数据会自动排序</li>\n</ul>\n<h2 id=\"set-大小和交换\">set 大小和交换</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>统计 set 容器大小以及交换 set 容器</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>size();</code> //返回容器中元素的数目</li>\n<li><code>empty();</code> //判断容器是否为空</li>\n<li><code>swap(st);</code> //交换两个集合容器</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;set&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printSet</span><span class=\"params\">(set&lt;<span class=\"type\">int</span>&gt; &amp; s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (set&lt;<span class=\"type\">int</span>&gt;::iterator it = s.<span class=\"built_in\">begin</span>(); it != s.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//大小</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt; s1;</span><br><span class=\"line\"></span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (s1.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;s1为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;s1不为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;s1的大小为： &quot;</span> &lt;&lt; s1.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//交换</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt; s1;</span><br><span class=\"line\"></span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt; s2;</span><br><span class=\"line\"></span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">300</span>);</span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">400</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;交换前&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s1);</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s2);</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;交换后&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\ts1.<span class=\"built_in\">swap</span>(s2);</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s1);</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//test01();</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test02</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>统计大小 — size</li>\n<li>判断是否为空 — empty</li>\n<li>交换容器 — swap</li>\n</ul>\n<h2 id=\"set-插入和删除\">set 插入和删除</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>set 容器进行插入数据和删除数据</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>insert(elem);</code> //在容器中插入元素。</li>\n<li><code>clear();</code> //清除所有元素</li>\n<li><code>erase(pos);</code> //删除 pos 迭代器所指的元素，返回下一个元素的迭代器。</li>\n<li><code>erase(beg, end);</code> //删除区间[beg,end)的所有元素 ，返回下一个元素的迭代器。</li>\n<li><code>erase(elem);</code> //删除容器中值为 elem 的元素。</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;set&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printSet</span><span class=\"params\">(set&lt;<span class=\"type\">int</span>&gt; &amp; s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (set&lt;<span class=\"type\">int</span>&gt;::iterator it = s.<span class=\"built_in\">begin</span>(); it != s.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//插入和删除</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt; s1;</span><br><span class=\"line\">\t<span class=\"comment\">//插入</span></span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//删除</span></span><br><span class=\"line\">\ts1.<span class=\"built_in\">erase</span>(s1.<span class=\"built_in\">begin</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s1);</span><br><span class=\"line\"></span><br><span class=\"line\">\ts1.<span class=\"built_in\">erase</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//清空</span></span><br><span class=\"line\">\t<span class=\"comment\">//s1.erase(s1.begin(), s1.end());</span></span><br><span class=\"line\">\ts1.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>插入 — insert</li>\n<li>删除 — erase</li>\n<li>清空 — clear</li>\n</ul>\n<h2 id=\"set-查找和统计\">set 查找和统计</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 set 容器进行查找数据以及统计数据</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>find(key);</code> //查找 key 是否存在,若存在，返回该键的元素的迭代器；若不存在，返回 set.end();</li>\n<li><code>count(key);</code> //统计 key 的元素个数</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;set&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//查找和统计</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt; s1;</span><br><span class=\"line\">\t<span class=\"comment\">//插入</span></span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//查找</span></span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt;::iterator pos = s1.<span class=\"built_in\">find</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (pos != s1.<span class=\"built_in\">end</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;找到了元素 ： &quot;</span> &lt;&lt; *pos &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;未找到元素&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//统计</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> num = s1.<span class=\"built_in\">count</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;num = &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>查找 — find （返回的是迭代器）</li>\n<li>统计 — count （对于 set，结果为 0 或者 1）</li>\n</ul>\n<h2 id=\"set-和-multiset-区别\">set 和 multiset 区别</h2>\n<p><strong>学习目标：</strong></p>\n<ul>\n<li>掌握 set 和 multiset 的区别</li>\n</ul>\n<p><strong>区别：</strong></p>\n<ul>\n<li>set 不可以插入重复数据，而 multiset 可以</li>\n<li>set 插入数据的同时会返回插入结果，表示插入是否成功</li>\n<li>multiset 不会检测数据，因此可以插入重复数据</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;set&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//set和multiset区别</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt; s;</span><br><span class=\"line\">\tpair&lt;set&lt;<span class=\"type\">int</span>&gt;::iterator, <span class=\"type\">bool</span>&gt;  ret = s.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ret.second) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;第一次插入成功!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;第一次插入失败!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tret = s.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ret.second) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;第二次插入成功!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;第二次插入失败!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//multiset</span></span><br><span class=\"line\">\tmultiset&lt;<span class=\"type\">int</span>&gt; ms;</span><br><span class=\"line\">\tms.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tms.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (multiset&lt;<span class=\"type\">int</span>&gt;::iterator it = ms.<span class=\"built_in\">begin</span>(); it != ms.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>如果不允许插入重复数据可以利用 set</li>\n<li>如果需要插入重复数据利用 multiset</li>\n</ul>\n<h2 id=\"pair-对组创建\">pair 对组创建</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>成对出现的数据，利用对组可以返回两个数据</li>\n</ul>\n<p><strong>两种创建方式：</strong></p>\n<ul>\n<li><code>pair&lt;type, type&gt; p ( value1, value2 );</code></li>\n<li><code>pair&lt;type, type&gt; p = make_pair( value1, value2 );</code></li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//对组创建</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\">pair&lt;string, <span class=\"type\">int</span>&gt; <span class=\"title\">p</span><span class=\"params\">(string(<span class=\"string\">&quot;Tom&quot;</span>), <span class=\"number\">20</span>)</span></span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt;  p.first &lt;&lt; <span class=\"string\">&quot; 年龄： &quot;</span> &lt;&lt; p.second &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpair&lt;string, <span class=\"type\">int</span>&gt; p2 = <span class=\"built_in\">make_pair</span>(<span class=\"string\">&quot;Jerry&quot;</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; p2.first &lt;&lt; <span class=\"string\">&quot; 年龄： &quot;</span> &lt;&lt; p2.second &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<p>两种方式都可以创建对组，记住一种即可</p>\n<h2 id=\"set-容器排序\">set 容器排序</h2>\n<p>学习目标：</p>\n<ul>\n<li>set 容器默认排序规则为从小到大，掌握如何改变排序规则</li>\n</ul>\n<p>主要技术点：</p>\n<ul>\n<li>利用仿函数，可以改变排序规则</li>\n</ul>\n<p><strong>示例一</strong> set 存放内置数据类型</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;set&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyCompare</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> v1, <span class=\"type\">int</span> v2)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> v1 &gt; v2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt; s1;</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">50</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//默认从小到大</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (set&lt;<span class=\"type\">int</span>&gt;::iterator it = s1.<span class=\"built_in\">begin</span>(); it != s1.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//指定排序规则</span></span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>,MyCompare&gt; s2;</span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">50</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (set&lt;<span class=\"type\">int</span>, MyCompare&gt;::iterator it = s2.<span class=\"built_in\">begin</span>(); it != s2.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：利用仿函数可以指定 set 容器的排序规则</p>\n<p><strong>示例二</strong> set 存放自定义数据类型</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;set&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">Person</span>(string name, <span class=\"type\">int</span> age)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Name = name;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Age = age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring m_Name;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Age;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">comparePerson</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">const</span> Person&amp; p1, <span class=\"type\">const</span> Person &amp;p2)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//按照年龄进行排序  降序</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> p1.m_Age &gt; p2.m_Age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tset&lt;Person, comparePerson&gt; s;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p1</span><span class=\"params\">(<span class=\"string\">&quot;刘备&quot;</span>, <span class=\"number\">23</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p2</span><span class=\"params\">(<span class=\"string\">&quot;关羽&quot;</span>, <span class=\"number\">27</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p3</span><span class=\"params\">(<span class=\"string\">&quot;张飞&quot;</span>, <span class=\"number\">25</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p4</span><span class=\"params\">(<span class=\"string\">&quot;赵云&quot;</span>, <span class=\"number\">21</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\ts.<span class=\"built_in\">insert</span>(p1);</span><br><span class=\"line\">\ts.<span class=\"built_in\">insert</span>(p2);</span><br><span class=\"line\">\ts.<span class=\"built_in\">insert</span>(p3);</span><br><span class=\"line\">\ts.<span class=\"built_in\">insert</span>(p4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (set&lt;Person, comparePerson&gt;::iterator it = s.<span class=\"built_in\">begin</span>(); it != s.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; it-&gt;m_Name &lt;&lt; <span class=\"string\">&quot; 年龄： &quot;</span> &lt;&lt; it-&gt;m_Age &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<p>对于自定义数据类型，set 必须指定排序规则才可以插入数据</p>\n<h1>map/ multimap 容器</h1>\n<h2 id=\"map-基本概念\">map 基本概念</h2>\n<p><strong>简介：</strong></p>\n<ul>\n<li>map 中所有元素都是 pair</li>\n<li>pair 中第一个元素为 key（键值），起到索引作用，第二个元素为 value（实值）</li>\n<li>所有元素都会根据元素的键值自动排序</li>\n</ul>\n<p><strong>本质：</strong></p>\n<ul>\n<li>map/multimap 属于<strong>关联式容器</strong>，底层结构是用二叉树实现。</li>\n</ul>\n<p><strong>优点：</strong></p>\n<ul>\n<li>可以根据 key 值快速找到 value 值</li>\n</ul>\n<p>map 和 multimap<strong>区别</strong>：</p>\n<ul>\n<li>map 不允许容器中有重复 key 值元素</li>\n<li>multimap 允许容器中有重复 key 值元素</li>\n</ul>\n<h2 id=\"map-构造和赋值\">map 构造和赋值</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 map 容器进行构造和赋值操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<p><strong>构造：</strong></p>\n<ul>\n<li><code>map&lt;T1, T2&gt; mp;</code> //map 默认构造函数:</li>\n<li><code>map(const map &amp;mp);</code> //拷贝构造函数</li>\n</ul>\n<p><strong>赋值：</strong></p>\n<ul>\n<li><code>map&amp; operator=(const map &amp;mp);</code> //重载等号操作符</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;map&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printMap</span><span class=\"params\">(map&lt;<span class=\"type\">int</span>,<span class=\"type\">int</span>&gt;&amp;m)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;::iterator it = m.<span class=\"built_in\">begin</span>(); it != m.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;key = &quot;</span> &lt;&lt; it-&gt;first &lt;&lt; <span class=\"string\">&quot; value = &quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>,<span class=\"type\">int</span>&gt;m; <span class=\"comment\">//默认构造</span></span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">10</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">2</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">3</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m);</span><br><span class=\"line\"></span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;<span class=\"built_in\">m2</span>(m); <span class=\"comment\">//拷贝构造</span></span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;m3;</span><br><span class=\"line\">\tm3 = m2; <span class=\"comment\">//赋值</span></span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m3);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：map 中所有元素都是成对出现，插入数据时候要使用对组</p>\n<h2 id=\"map-大小和交换\">map 大小和交换</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>统计 map 容器大小以及交换 map 容器</li>\n</ul>\n<p>函数原型：</p>\n<ul>\n<li><code>size();</code> //返回容器中元素的数目</li>\n<li><code>empty();</code> //判断容器是否为空</li>\n<li><code>swap(st);</code> //交换两个集合容器</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;map&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printMap</span><span class=\"params\">(map&lt;<span class=\"type\">int</span>,<span class=\"type\">int</span>&gt;&amp;m)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;::iterator it = m.<span class=\"built_in\">begin</span>(); it != m.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;key = &quot;</span> &lt;&lt; it-&gt;first &lt;&lt; <span class=\"string\">&quot; value = &quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;m;</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">10</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">2</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">3</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (m.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;m为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;m不为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;m的大小为： &quot;</span> &lt;&lt; m.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//交换</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;m;</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">10</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">2</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">3</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;m2;</span><br><span class=\"line\">\tm2.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">4</span>, <span class=\"number\">100</span>));</span><br><span class=\"line\">\tm2.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">5</span>, <span class=\"number\">200</span>));</span><br><span class=\"line\">\tm2.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">6</span>, <span class=\"number\">300</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;交换前&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m);</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;交换后&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tm.<span class=\"built_in\">swap</span>(m2);</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m);</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test02</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>统计大小 — size</li>\n<li>判断是否为空 — empty</li>\n<li>交换容器 — swap</li>\n</ul>\n<h2 id=\"map-插入和删除\">map 插入和删除</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>map 容器进行插入数据和删除数据</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>insert(elem);</code> //在容器中插入元素。</li>\n<li><code>clear();</code> //清除所有元素</li>\n<li><code>erase(pos);</code> //删除 pos 迭代器所指的元素，返回下一个元素的迭代器。</li>\n<li><code>erase(beg, end);</code> //删除区间[beg,end)的所有元素 ，返回下一个元素的迭代器。</li>\n<li><code>erase(key);</code> //删除容器中值为 key 的元素。</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;map&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printMap</span><span class=\"params\">(map&lt;<span class=\"type\">int</span>,<span class=\"type\">int</span>&gt;&amp;m)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;::iterator it = m.<span class=\"built_in\">begin</span>(); it != m.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;key = &quot;</span> &lt;&lt; it-&gt;first &lt;&lt; <span class=\"string\">&quot; value = &quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//插入</span></span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; m;</span><br><span class=\"line\">\t<span class=\"comment\">//第一种插入方式</span></span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">10</span>));</span><br><span class=\"line\">\t<span class=\"comment\">//第二种插入方式</span></span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">make_pair</span>(<span class=\"number\">2</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">\t<span class=\"comment\">//第三种插入方式</span></span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;::<span class=\"built_in\">value_type</span>(<span class=\"number\">3</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\">\t<span class=\"comment\">//第四种插入方式</span></span><br><span class=\"line\">\tm[<span class=\"number\">4</span>] = <span class=\"number\">40</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//删除</span></span><br><span class=\"line\">\tm.<span class=\"built_in\">erase</span>(m.<span class=\"built_in\">begin</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m);</span><br><span class=\"line\"></span><br><span class=\"line\">\tm.<span class=\"built_in\">erase</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//清空</span></span><br><span class=\"line\">\tm.<span class=\"built_in\">erase</span>(m.<span class=\"built_in\">begin</span>(),m.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\tm.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>map 插入方式很多，记住其一即可</li>\n</ul>\n<ul>\n<li>插入 — insert</li>\n<li>删除 — erase</li>\n<li>清空 — clear</li>\n</ul>\n<h2 id=\"map-查找和统计\">map 查找和统计</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 map 容器进行查找数据以及统计数据</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>find(key);</code> //查找 key 是否存在,若存在，返回该键的元素的迭代器；若不存在，返回 set.end();</li>\n<li><code>count(key);</code> //统计 key 的元素个数</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;map&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//查找和统计</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;m;</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">10</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">2</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">3</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//查找</span></span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;::iterator pos = m.<span class=\"built_in\">find</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (pos != m.<span class=\"built_in\">end</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;找到了元素 key = &quot;</span> &lt;&lt; (*pos).first &lt;&lt; <span class=\"string\">&quot; value = &quot;</span> &lt;&lt; (*pos).second &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;未找到元素&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//统计</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> num = m.<span class=\"built_in\">count</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;num = &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>查找 — find （返回的是迭代器）</li>\n<li>统计 — count （对于 map，结果为 0 或者 1）</li>\n</ul>\n<h2 id=\"map-容器排序\">map 容器排序</h2>\n<p><strong>学习目标：</strong></p>\n<ul>\n<li>map 容器默认排序规则为 按照 key 值进行 从小到大排序，掌握如何改变排序规则</li>\n</ul>\n<p><strong>主要技术点:</strong></p>\n<ul>\n<li>利用仿函数，可以改变排序规则</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;map&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyCompare</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> v1, <span class=\"type\">int</span> v2)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> v1 &gt; v2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//默认从小到大排序</span></span><br><span class=\"line\">\t<span class=\"comment\">//利用仿函数实现从大到小排序</span></span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>, MyCompare&gt; m;</span><br><span class=\"line\"></span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">make_pair</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">make_pair</span>(<span class=\"number\">2</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">make_pair</span>(<span class=\"number\">3</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">make_pair</span>(<span class=\"number\">4</span>, <span class=\"number\">40</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">make_pair</span>(<span class=\"number\">5</span>, <span class=\"number\">50</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>, MyCompare&gt;::iterator it = m.<span class=\"built_in\">begin</span>(); it != m.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;key:&quot;</span> &lt;&lt; it-&gt;first &lt;&lt; <span class=\"string\">&quot; value:&quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>利用仿函数可以指定 map 容器的排序规则</li>\n<li>对于自定义数据类型，map 必须要指定排序规则,同 set 容器</li>\n</ul>\n<h1>案例-员工分组</h1>\n<h2 id=\"案例描述-2\">案例描述</h2>\n<ul>\n<li>公司今天招聘了 10 个员工（ABCDEFGHIJ），10 名员工进入公司之后，需要指派员工在那个部门工作</li>\n<li>员工信息有: 姓名 工资组成；部门分为：策划、美术、研发</li>\n<li>随机给 10 名员工分配部门和工资</li>\n<li>通过 multimap 进行信息的插入 key(部门编号) value(员工)</li>\n<li>分部门显示员工信息</li>\n</ul>\n<h2 id=\"实现步骤-2\">实现步骤</h2>\n<ol>\n<li>创建 10 名员工，放到 vector 中</li>\n<li>遍历 vector 容器，取出每个员工，进行随机分组</li>\n<li>分组后，将员工部门编号作为 key，具体员工作为 value，放入到 multimap 容器中</li>\n<li>分部门显示员工信息</li>\n</ol>\n<p><strong>案例代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;ctime&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">- 公司今天招聘了10个员工（ABCDEFGHIJ），10名员工进入公司之后，需要指派员工在那个部门工作</span></span><br><span class=\"line\"><span class=\"comment\">- 员工信息有: 姓名  工资组成；部门分为：策划、美术、研发</span></span><br><span class=\"line\"><span class=\"comment\">- 随机给10名员工分配部门和工资</span></span><br><span class=\"line\"><span class=\"comment\">- 通过multimap进行信息的插入  key(部门编号) value(员工)</span></span><br><span class=\"line\"><span class=\"comment\">- 分部门显示员工信息</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> CEHUA  0</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MEISHU 1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> YANFA  2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Worker</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\tstring m_Name;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Salary;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">createWorker</span><span class=\"params\">(vector&lt;Worker&gt;&amp;v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring nameSeed = <span class=\"string\">&quot;ABCDEFGHIJ&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tWorker worker;</span><br><span class=\"line\">\t\tworker.m_Name = <span class=\"string\">&quot;员工&quot;</span>;</span><br><span class=\"line\">\t\tworker.m_Name += nameSeed[i];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tworker.m_Salary = <span class=\"built_in\">rand</span>() % <span class=\"number\">10000</span> + <span class=\"number\">10000</span>; <span class=\"comment\">// 10000 ~ 19999</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//将员工放入到容器中</span></span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(worker);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//员工分组</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setGroup</span><span class=\"params\">(vector&lt;Worker&gt;&amp;v,multimap&lt;<span class=\"type\">int</span>,Worker&gt;&amp;m)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;Worker&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//产生随机部门编号</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> deptId = <span class=\"built_in\">rand</span>() % <span class=\"number\">3</span>; <span class=\"comment\">// 0 1 2</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//将员工插入到分组中</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//key部门编号，value具体员工</span></span><br><span class=\"line\">\t\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">make_pair</span>(deptId, *it));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">showWorkerByGourp</span><span class=\"params\">(multimap&lt;<span class=\"type\">int</span>,Worker&gt;&amp;m)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 0  A  B  C   1  D  E   2  F G ...</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;策划部门：&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tmultimap&lt;<span class=\"type\">int</span>,Worker&gt;::iterator pos = m.<span class=\"built_in\">find</span>(CEHUA);</span><br><span class=\"line\">\t<span class=\"type\">int</span> count = m.<span class=\"built_in\">count</span>(CEHUA); <span class=\"comment\">// 统计具体人数</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; pos != m.<span class=\"built_in\">end</span>() &amp;&amp; index &lt; count; pos++ , index++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; pos-&gt;second.m_Name &lt;&lt; <span class=\"string\">&quot; 工资： &quot;</span> &lt;&lt; pos-&gt;second.m_Salary &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;----------------------&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;美术部门： &quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tpos = m.<span class=\"built_in\">find</span>(MEISHU);</span><br><span class=\"line\">\tcount = m.<span class=\"built_in\">count</span>(MEISHU); <span class=\"comment\">// 统计具体人数</span></span><br><span class=\"line\">\tindex = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; pos != m.<span class=\"built_in\">end</span>() &amp;&amp; index &lt; count; pos++, index++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; pos-&gt;second.m_Name &lt;&lt; <span class=\"string\">&quot; 工资： &quot;</span> &lt;&lt; pos-&gt;second.m_Salary &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;----------------------&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;研发部门： &quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tpos = m.<span class=\"built_in\">find</span>(YANFA);</span><br><span class=\"line\">\tcount = m.<span class=\"built_in\">count</span>(YANFA); <span class=\"comment\">// 统计具体人数</span></span><br><span class=\"line\">\tindex = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; pos != m.<span class=\"built_in\">end</span>() &amp;&amp; index &lt; count; pos++, index++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; pos-&gt;second.m_Name &lt;&lt; <span class=\"string\">&quot; 工资： &quot;</span> &lt;&lt; pos-&gt;second.m_Salary &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>((<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)<span class=\"built_in\">time</span>(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//1、创建员工</span></span><br><span class=\"line\">\tvector&lt;Worker&gt;vWorker;</span><br><span class=\"line\">\t<span class=\"built_in\">createWorker</span>(vWorker);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//2、员工分组</span></span><br><span class=\"line\">\tmultimap&lt;<span class=\"type\">int</span>, Worker&gt;mWorker;</span><br><span class=\"line\">\t<span class=\"built_in\">setGroup</span>(vWorker, mWorker);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//3、分组显示员工</span></span><br><span class=\"line\">\t<span class=\"built_in\">showWorkerByGourp</span>(mWorker);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">////测试</span></span><br><span class=\"line\">\t<span class=\"comment\">//for (vector&lt;Worker&gt;::iterator it = vWorker.begin(); it != vWorker.end(); it++)</span></span><br><span class=\"line\">\t<span class=\"comment\">//&#123;</span></span><br><span class=\"line\">\t<span class=\"comment\">//\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt; it-&gt;m_Name &lt;&lt; &quot; 工资： &quot; &lt;&lt; it-&gt;m_Salary &lt;&lt; endl;</span></span><br><span class=\"line\">\t<span class=\"comment\">//&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>当数据以键值对形式存在，可以考虑用 map 或 multimap</li>\n</ul>\n","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":"<h1>string 容器</h1>\n<h2 id=\"string-基本概念\">string 基本概念</h2>\n<p><strong>本质：</strong></p>\n<ul>\n<li>string 是 C++风格的字符串，而 string 本质上是一个类</li>\n</ul>\n<p><strong>string 和 char * 区别：</strong></p>\n<ul>\n<li>char * 是一个指针</li>\n<li>string 是一个类，类内部封装了 char*，管理这个字符串，是一个 char*型的容器。</li>\n</ul>\n<p><strong>特点：</strong></p>\n<p>string 类内部封装了很多成员方法</p>\n<p>例如：查找 find，拷贝 copy，删除 delete 替换 replace，插入 insert</p>\n<p>string 管理 char*所分配的内存，不用担心复制越界和取值越界等，由类内部进行负责</p>\n<h2 id=\"string-构造函数\">string 构造函数</h2>\n<p>构造函数原型：</p>\n<ul>\n<li><code>string();</code> //创建一个空的字符串 例如: string str;</li>\n<li><code>string(const char* s);</code> //使用字符串 s 初始化</li>\n<li><code>string(const string&amp; str);</code> //使用一个 string 对象初始化另一个 string 对象</li>\n<li><code>string(int n, char c);</code> //使用 n 个字符 c 初始化</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">//string构造</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring s1; <span class=\"comment\">//创建空字符串，调用无参构造函数</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; s1 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"type\">char</span>* str = <span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\">\t<span class=\"function\">string <span class=\"title\">s2</span><span class=\"params\">(str)</span></span>; <span class=\"comment\">//把c_string转换成了string</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str2 = &quot;</span> &lt;&lt; s2 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">string <span class=\"title\">s3</span><span class=\"params\">(s2)</span></span>; <span class=\"comment\">//调用拷贝构造函数</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str3 = &quot;</span> &lt;&lt; s3 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">string <span class=\"title\">s4</span><span class=\"params\">(<span class=\"number\">10</span>, <span class=\"string\">&#x27;a&#x27;</span>)</span></span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str3 = &quot;</span> &lt;&lt; s3 &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：string 的多种构造方式没有可比性，灵活使用即可</p>\n<h2 id=\"string-赋值操作\">string 赋值操作</h2>\n<p>功能描述：</p>\n<ul>\n<li>给 string 字符串进行赋值</li>\n</ul>\n<p>赋值的函数原型：</p>\n<ul>\n<li><code>string&amp; operator=(const char* s);</code> //char*类型字符串 赋值给当前的字符串</li>\n<li><code>string&amp; operator=(const string &amp;s);</code> //把字符串 s 赋给当前的字符串</li>\n<li><code>string&amp; operator=(char c);</code> //字符赋值给当前的字符串</li>\n<li><code>string&amp; assign(const char *s);</code> //把字符串 s 赋给当前的字符串</li>\n<li><code>string&amp; assign(const char *s, int n);</code> //把字符串 s 的前 n 个字符赋给当前的字符串</li>\n<li><code>string&amp; assign(const string &amp;s);</code> //把字符串 s 赋给当前字符串</li>\n<li><code>string&amp; assign(int n, char c);</code> //用 n 个字符 c 赋给当前字符串</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//赋值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring str1;</span><br><span class=\"line\">\tstr1 = <span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str2;</span><br><span class=\"line\">\tstr2 = str1;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str2 = &quot;</span> &lt;&lt; str2 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str3;</span><br><span class=\"line\">\tstr3 = <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str3 = &quot;</span> &lt;&lt; str3 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str4;</span><br><span class=\"line\">\tstr4.<span class=\"built_in\">assign</span>(<span class=\"string\">&quot;hello c++&quot;</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str4 = &quot;</span> &lt;&lt; str4 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str5;</span><br><span class=\"line\">\tstr5.<span class=\"built_in\">assign</span>(<span class=\"string\">&quot;hello c++&quot;</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str5 = &quot;</span> &lt;&lt; str5 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str6;</span><br><span class=\"line\">\tstr6.<span class=\"built_in\">assign</span>(str5);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str6 = &quot;</span> &lt;&lt; str6 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str7;</span><br><span class=\"line\">\tstr7.<span class=\"built_in\">assign</span>(<span class=\"number\">5</span>, <span class=\"string\">&#x27;x&#x27;</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str7 = &quot;</span> &lt;&lt; str7 &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<p>​ string 的赋值方式很多，<code>operator=</code> 这种方式是比较实用的</p>\n<h2 id=\"string-字符串拼接\">string 字符串拼接</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>实现在字符串末尾拼接字符串</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>string&amp; operator+=(const char* str);</code> //重载+=操作符</li>\n<li><code>string&amp; operator+=(const char c);</code> //重载+=操作符</li>\n<li><code>string&amp; operator+=(const string&amp; str);</code> //重载+=操作符</li>\n<li><code>string&amp; append(const char *s); </code> //把字符串 s 连接到当前字符串结尾</li>\n<li><code>string&amp; append(const char *s, int n);</code> //把字符串 s 的前 n 个字符连接到当前字符串结尾</li>\n<li><code>string&amp; append(const string &amp;s);</code> //同 operator+=(const string&amp; str)</li>\n<li><code>string&amp; append(const string &amp;s, int pos, int n);</code>//字符串 s 中从 pos 开始的 n 个字符连接到字符串结尾</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//字符串拼接</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring str1 = <span class=\"string\">&quot;我&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstr1 += <span class=\"string\">&quot;爱玩游戏&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstr1 += <span class=\"string\">&#x27;:&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str2 = <span class=\"string\">&quot;LOL DNF&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstr1 += str2;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str3 = <span class=\"string\">&quot;I&quot;</span>;</span><br><span class=\"line\">\tstr3.<span class=\"built_in\">append</span>(<span class=\"string\">&quot; love &quot;</span>);</span><br><span class=\"line\">\tstr3.<span class=\"built_in\">append</span>(<span class=\"string\">&quot;game abcde&quot;</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//str3.append(str2);</span></span><br><span class=\"line\">\tstr3.<span class=\"built_in\">append</span>(str2, <span class=\"number\">4</span>, <span class=\"number\">3</span>); <span class=\"comment\">// 从下标4位置开始 ，截取3个字符，拼接到字符串末尾</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str3 = &quot;</span> &lt;&lt; str3 &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：字符串拼接的重载版本很多，初学阶段记住几种即可</p>\n<h2 id=\"string-查找和替换\">string 查找和替换</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>查找：查找指定字符串是否存在</li>\n<li>替换：在指定的位置替换字符串</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>int find(const string&amp; str, int pos = 0) const;</code> //查找 str 第一次出现位置,从 pos 开始查找</li>\n<li><code>int find(const char* s, int pos = 0) const; </code> //查找 s 第一次出现位置,从 pos 开始查找</li>\n<li><code>int find(const char* s, int pos, int n) const; </code> //从 pos 位置查找 s 的前 n 个字符第一次位置</li>\n<li><code>int find(const char c, int pos = 0) const; </code> //查找字符 c 第一次出现位置</li>\n<li><code>int rfind(const string&amp; str, int pos = npos) const;</code> //查找 str 最后一次位置,从 pos 开始查找</li>\n<li><code>int rfind(const char* s, int pos = npos) const;</code> //查找 s 最后一次出现位置,从 pos 开始查找</li>\n<li><code>int rfind(const char* s, int pos, int n) const;</code> //从 pos 查找 s 的前 n 个字符最后一次位置</li>\n<li><code>int rfind(const char c, int pos = 0) const;  </code> //查找字符 c 最后一次出现位置</li>\n<li><code>string&amp; replace(int pos, int n, const string&amp; str); </code> //替换从 pos 开始 n 个字符为字符串 str</li>\n<li><code>string&amp; replace(int pos, int n,const char* s); </code> //替换从 pos 开始的 n 个字符为字符串 s</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//查找和替换</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//查找</span></span><br><span class=\"line\">\tstring str1 = <span class=\"string\">&quot;abcdefgde&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> pos = str1.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;de&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (pos == <span class=\"number\">-1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;未找到&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;pos = &quot;</span> &lt;&lt; pos &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\tpos = str1.<span class=\"built_in\">rfind</span>(<span class=\"string\">&quot;de&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;pos = &quot;</span> &lt;&lt; pos &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//替换</span></span><br><span class=\"line\">\tstring str1 = <span class=\"string\">&quot;abcdefgde&quot;</span>;</span><br><span class=\"line\">\tstr1.<span class=\"built_in\">replace</span>(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"string\">&quot;1111&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//test01();</span></span><br><span class=\"line\">\t<span class=\"comment\">//test02();</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>find 查找是从左往后，rfind 从右往左</li>\n<li>find 找到字符串后返回查找的第一个字符位置，找不到返回-1</li>\n<li>replace 在替换时，要指定从哪个位置起，多少个字符，替换成什么样的字符串</li>\n</ul>\n<h2 id=\"string-字符串比较\">string 字符串比较</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>字符串之间的比较</li>\n</ul>\n<p><strong>比较方式：</strong></p>\n<ul>\n<li>字符串比较是按字符的 ASCII 码进行对比</li>\n</ul>\n<p>= 返回 0</p>\n<p>&gt; 返回 1</p>\n<p>&lt; 返回 -1</p>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>int compare(const string &amp;s) const; </code> //与字符串 s 比较</li>\n<li><code>int compare(const char *s) const;</code> //与字符串 s 比较</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//字符串比较</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring s1 = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">\tstring s2 = <span class=\"string\">&quot;aello&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> ret = s1.<span class=\"built_in\">compare</span>(s2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ret == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;s1 等于 s2&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (ret &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;s1 大于 s2&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;s1 小于 s2&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：字符串对比主要是用于比较两个字符串是否相等，判断谁大谁小的意义并不是很大</p>\n<h2 id=\"string-字符存取\">string 字符存取</h2>\n<p>string 中单个字符存取方式有两种</p>\n<ul>\n<li><code>char&amp; operator[](int n); </code> //通过[]方式取字符</li>\n<li><code>char&amp; at(int n);   </code> //通过 at 方法获取字符</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring str = <span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; str.<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; str[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; str.<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; str.<span class=\"built_in\">at</span>(i) &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//字符修改</span></span><br><span class=\"line\">\tstr[<span class=\"number\">0</span>] = <span class=\"string\">&#x27;x&#x27;</span>;</span><br><span class=\"line\">\tstr.<span class=\"built_in\">at</span>(<span class=\"number\">1</span>) = <span class=\"string\">&#x27;x&#x27;</span>;</span><br><span class=\"line\">\tcout &lt;&lt; str &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：string 字符串中单个字符存取有两种方式，利用 [ ] 或 at</p>\n<h2 id=\"string-插入和删除\">string 插入和删除</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 string 字符串进行插入和删除字符操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>string&amp; insert(int pos, const char* s);  </code> //插入字符串</li>\n<li><code>string&amp; insert(int pos, const string&amp; str); </code> //插入字符串</li>\n<li><code>string&amp; insert(int pos, int n, char c);</code> //在指定位置插入 n 个字符 c</li>\n<li><code>string&amp; erase(int pos, int n = npos);</code> //删除从 Pos 开始的 n 个字符</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//字符串插入和删除</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring str = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">\tstr.<span class=\"built_in\">insert</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;111&quot;</span>);</span><br><span class=\"line\">\tcout &lt;&lt; str &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstr.<span class=\"built_in\">erase</span>(<span class=\"number\">1</span>, <span class=\"number\">3</span>);  <span class=\"comment\">//从1号位置开始3个字符</span></span><br><span class=\"line\">\tcout &lt;&lt; str &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>**总结：**插入和删除的起始下标都是从 0 开始</p>\n<h2 id=\"string-子串\">string 子串</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>从字符串中获取想要的子串</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>string substr(int pos = 0, int n = npos) const;</code> //返回由 pos 开始的 n 个字符组成的字符串</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//子串</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str = <span class=\"string\">&quot;abcdefg&quot;</span>;</span><br><span class=\"line\">\tstring subStr = str.<span class=\"built_in\">substr</span>(<span class=\"number\">1</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;subStr = &quot;</span> &lt;&lt; subStr &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring email = <span class=\"string\">&quot;hello@sina.com&quot;</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> pos = email.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;@&quot;</span>);</span><br><span class=\"line\">\tstring username = email.<span class=\"built_in\">substr</span>(<span class=\"number\">0</span>, pos);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;username: &quot;</span> &lt;&lt; username &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>**总结：**灵活的运用求子串功能，可以在实际开发中获取有效的信息</p>\n<h1>vector 容器</h1>\n<h2 id=\"vector-基本概念\">vector 基本概念</h2>\n<p><strong>功能：</strong></p>\n<ul>\n<li>vector 数据结构和<strong>数组非常相似</strong>，也称为<strong>单端数组</strong></li>\n</ul>\n<p><strong>vector 与普通数组区别：</strong></p>\n<ul>\n<li>不同之处在于数组是静态空间，而 vector 可以<strong>动态扩展</strong></li>\n</ul>\n<p><strong>动态扩展：</strong></p>\n<ul>\n<li>\n<p>并不是在原空间之后续接新空间，而是找更大的内存空间，然后将原数据拷贝新空间，释放原空间</p>\n</li>\n<li>\n<p>vector 容器的迭代器是支持随机访问的迭代器</p>\n</li>\n</ul>\n<h2 id=\"vector-构造函数\">vector 构造函数</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>创建 vector 容器</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>vector&lt;T&gt; v; </code> //采用模板实现类实现，默认构造函数</li>\n<li><code>vector(v.begin(), v.end());   </code> //将 v[begin(), end())区间中的元素拷贝给本身。</li>\n<li><code>vector(n, elem);</code> //构造函数将 n 个 elem 拷贝给本身。</li>\n<li><code>vector(const vector &amp;vec);</code> //拷贝构造函数。</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1; <span class=\"comment\">//无参构造</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v2</span><span class=\"params\">(v1.begin(), v1.end())</span></span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v3</span><span class=\"params\">(<span class=\"number\">10</span>, <span class=\"number\">100</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v3);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v4</span><span class=\"params\">(v3)</span></span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v4);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>**总结：**vector 的多种构造方式没有可比性，灵活使用即可</p>\n<h2 id=\"vector-赋值操作\">vector 赋值操作</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>给 vector 容器进行赋值</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>vector&amp; operator=(const vector &amp;vec);</code>//重载等号操作符</p>\n</li>\n<li>\n<p><code>assign(beg, end);</code> //将[beg, end)区间中的数据拷贝赋值给本身。</p>\n</li>\n<li>\n<p><code>assign(n, elem);</code> //将 n 个 elem 拷贝赋值给本身。</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//赋值操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1; <span class=\"comment\">//无参构造</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v2;</span><br><span class=\"line\">\tv2 = v1;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v3;</span><br><span class=\"line\">\tv3.<span class=\"built_in\">assign</span>(v1.<span class=\"built_in\">begin</span>(), v1.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v3);</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v4;</span><br><span class=\"line\">\tv4.<span class=\"built_in\">assign</span>(<span class=\"number\">10</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v4);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>总结： vector 赋值方式比较简单，使用 operator=，或者 assign 都可以</p>\n<h2 id=\"vector-容量和大小\">vector 容量和大小</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 vector 容器的容量和大小操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>empty(); </code> //判断容器是否为空</p>\n</li>\n<li>\n<p><code>capacity();</code> //容器的容量</p>\n</li>\n<li>\n<p><code>size();</code> //返回容器中元素的个数</p>\n</li>\n<li>\n<p><code>resize(int num);</code> //重新指定容器的长度为 num，若容器变长，则以默认值填充新位置。</p>\n<p>​ //如果容器变短，则末尾超出容器长度的元素被删除。</p>\n</li>\n<li>\n<p><code>resize(int num, elem);</code> //重新指定容器的长度为 num，若容器变长，则以 elem 值填充新位置。</p>\n<p>​ //如果容器变短，则末尾超出容器长度的元素被删除</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (v1.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;v1为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;v1不为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;v1的容量 = &quot;</span> &lt;&lt; v1.<span class=\"built_in\">capacity</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;v1的大小 = &quot;</span> &lt;&lt; v1.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//resize 重新指定大小 ，若指定的更大，默认用0填充新位置，可以利用重载版本替换默认填充</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">resize</span>(<span class=\"number\">15</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//resize 重新指定大小 ，若指定的更小，超出部分元素被删除</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">resize</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>判断是否为空 — empty</li>\n<li>返回元素个数 — size</li>\n<li>返回容器容量 — capacity</li>\n<li>重新指定大小 — resize</li>\n</ul>\n<h2 id=\"vector-插入和删除\">vector 插入和删除</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 vector 容器进行插入、删除操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>push_back(ele);</code> //尾部插入元素 ele</li>\n<li><code>pop_back();</code> //删除最后一个元素</li>\n<li><code>insert(const_iterator pos, ele);</code> //迭代器指向位置 pos 插入元素 ele</li>\n<li><code>insert(const_iterator pos, int count,ele);</code>//迭代器指向位置 pos 插入 count 个元素 ele</li>\n<li><code>erase(const_iterator pos);</code> //删除迭代器指向的元素</li>\n<li><code>erase(const_iterator start, const_iterator end);</code>//删除迭代器从 start 到 end 之间的元素</li>\n<li><code>clear();</code> //删除容器中所有元素</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//插入和删除</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1;</span><br><span class=\"line\">\t<span class=\"comment\">//尾插</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tv1.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tv1.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tv1.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\">\tv1.<span class=\"built_in\">push_back</span>(<span class=\"number\">50</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">\t<span class=\"comment\">//尾删</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">\t<span class=\"comment\">//插入</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">insert</span>(v1.<span class=\"built_in\">begin</span>(), <span class=\"number\">100</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\tv1.<span class=\"built_in\">insert</span>(v1.<span class=\"built_in\">begin</span>(), <span class=\"number\">2</span>, <span class=\"number\">1000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//删除</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">erase</span>(v1.<span class=\"built_in\">begin</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//清空</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">erase</span>(v1.<span class=\"built_in\">begin</span>(), v1.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\tv1.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>尾插 — push_back</li>\n<li>尾删 — pop_back</li>\n<li>插入 — insert (位置迭代器)</li>\n<li>删除 — erase （位置迭代器）</li>\n<li>清空 — clear</li>\n</ul>\n<h2 id=\"vector-数据存取\">vector 数据存取</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 vector 中的数据的存取操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>at(int idx); </code> //返回索引 idx 所指的数据</li>\n<li><code>operator[]; </code> //返回索引 idx 所指的数据</li>\n<li><code>front(); </code> //返回容器中第一个数据元素</li>\n<li><code>back();</code> //返回容器中最后一个数据元素</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v1;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; v1.<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; v1[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; v1.<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; v1.<span class=\"built_in\">at</span>(i) &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v1的第一个元素为： &quot;</span> &lt;&lt; v1.<span class=\"built_in\">front</span>() &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v1的最后一个元素为： &quot;</span> &lt;&lt; v1.<span class=\"built_in\">back</span>() &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>除了用迭代器获取 vector 容器中元素，[ ]和 at 也可以</li>\n<li>front 返回容器第一个元素</li>\n<li>back 返回容器最后一个元素</li>\n</ul>\n<h2 id=\"vector-互换容器\">vector 互换容器</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>实现两个容器内元素进行互换</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>swap(vec);</code> // 将 vec 与本身的元素互换</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v1;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v2;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">10</span>; i &gt; <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv2.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//互换容器</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;互换后&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tv1.<span class=\"built_in\">swap</span>(v2);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100000</span>; i++) &#123;</span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的容量为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">capacity</span>() &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的大小为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tv.<span class=\"built_in\">resize</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的容量为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">capacity</span>() &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的大小为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//收缩内存</span></span><br><span class=\"line\">\t<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(v).<span class=\"built_in\">swap</span>(v); <span class=\"comment\">//匿名对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的容量为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">capacity</span>() &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的大小为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test02</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>总结：swap 可以使两个容器互换，可以达到实用的收缩内存效果</p>\n<h2 id=\"vector-预留空间\">vector 预留空间</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>减少 vector 在动态扩展容量时的扩展次数</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>reserve(int len);</code>//容器预留 len 个元素长度，预留位置不初始化，元素不可访问。</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//预留空间</span></span><br><span class=\"line\">\tv.<span class=\"built_in\">reserve</span>(<span class=\"number\">100000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span>* p = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100000</span>; i++) &#123;</span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (p != &amp;v[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">\t\t\tp = &amp;v[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t\tnum++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;num:&quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：如果数据量较大，可以一开始利用 reserve 预留空间</p>\n<h1>deque 容器</h1>\n<h2 id=\"deque-容器基本概念\">deque 容器基本概念</h2>\n<p><strong>功能：</strong></p>\n<ul>\n<li>双端数组，可以对头端进行插入删除操作</li>\n</ul>\n<p><strong>deque 与 vector 区别：</strong></p>\n<ul>\n<li>vector 对于头部的插入删除效率低，数据量越大，效率越低</li>\n<li>deque 相对而言，对头部的插入删除速度回比 vector 快</li>\n<li>vector 访问元素时的速度会比 deque 快,这和两者内部实现有关</li>\n</ul>\n<p><img src=\"assets/clip_image002-1547547642923.jpg\" alt=\"说明: 2015-11-19_204101\"></p>\n<p>deque 内部工作原理:</p>\n<p>deque 内部有个<strong>中控器</strong>，维护每段缓冲区中的内容，缓冲区中存放真实数据</p>\n<p>中控器维护的是每个缓冲区的地址，使得使用 deque 时像一片连续的内存空间</p>\n<p><img src=\"assets/clip_image002-1547547896341.jpg\" alt=\"clip_image002-1547547896341\"></p>\n<ul>\n<li>deque 容器的迭代器也是支持随机访问的</li>\n</ul>\n<h2 id=\"deque-构造函数\">deque 构造函数</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>deque 容器构造</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>deque&lt;T&gt;</code> deqT; //默认构造形式</li>\n<li><code>deque(beg, end);</code> //构造函数将[beg, end)区间中的元素拷贝给本身。</li>\n<li><code>deque(n, elem);</code> //构造函数将 n 个 elem 拷贝给本身。</li>\n<li><code>deque(const deque &amp;deq);</code> //拷贝构造函数</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//deque构造</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d1; <span class=\"comment\">//无参构造函数</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\td1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d1);</span><br><span class=\"line\">\t<span class=\"function\">deque&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">d2</span><span class=\"params\">(d1.begin(),d1.end())</span></span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;<span class=\"built_in\">d3</span>(<span class=\"number\">10</span>,<span class=\"number\">100</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d3);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;d4 = d3;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d4);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>**总结：**deque 容器和 vector 容器的构造方式几乎一致，灵活使用即可</p>\n<h2 id=\"deque-赋值操作\">deque 赋值操作</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>给 deque 容器进行赋值</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>deque&amp; operator=(const deque &amp;deq); </code> //重载等号操作符</p>\n</li>\n<li>\n<p><code>assign(beg, end);</code> //将[beg, end)区间中的数据拷贝赋值给本身。</p>\n</li>\n<li>\n<p><code>assign(n, elem);</code> //将 n 个 elem 拷贝赋值给本身。</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//赋值操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d1;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\td1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d1);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;d2;</span><br><span class=\"line\">\td2 = d1;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;d3;</span><br><span class=\"line\">\td3.<span class=\"built_in\">assign</span>(d1.<span class=\"built_in\">begin</span>(), d1.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d3);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;d4;</span><br><span class=\"line\">\td4.<span class=\"built_in\">assign</span>(<span class=\"number\">10</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d4);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：deque 赋值操作也与 vector 相同，需熟练掌握</p>\n<h2 id=\"deque-大小操作\">deque 大小操作</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 deque 容器的大小进行操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>deque.empty();</code> //判断容器是否为空</p>\n</li>\n<li>\n<p><code>deque.size();</code> //返回容器中元素的个数</p>\n</li>\n<li>\n<p><code>deque.resize(num);</code> //重新指定容器的长度为 num,若容器变长，则以默认值填充新位置。</p>\n<p>​ //如果容器变短，则末尾超出容器长度的元素被删除。</p>\n</li>\n<li>\n<p><code>deque.resize(num, elem);</code> //重新指定容器的长度为 num,若容器变长，则以 elem 值填充新位置。</p>\n<p>​ //如果容器变短，则末尾超出容器长度的元素被删除。</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//大小操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d1;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\td1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//判断容器是否为空</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (d1.<span class=\"built_in\">empty</span>()) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;d1为空!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;d1不为空!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\t<span class=\"comment\">//统计大小</span></span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;d1的大小为：&quot;</span> &lt;&lt; d1.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//重新指定大小</span></span><br><span class=\"line\">\td1.<span class=\"built_in\">resize</span>(<span class=\"number\">15</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d1);</span><br><span class=\"line\"></span><br><span class=\"line\">\td1.<span class=\"built_in\">resize</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>deque 没有容量的概念</li>\n<li>判断是否为空 — empty</li>\n<li>返回元素个数 — size</li>\n<li>重新指定个数 — resize</li>\n</ul>\n<h2 id=\"deque-插入和删除\">deque 插入和删除</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>向 deque 容器中插入和删除数据</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<p>两端插入操作：</p>\n<ul>\n<li><code>push_back(elem);</code> //在容器尾部添加一个数据</li>\n<li><code>push_front(elem);</code> //在容器头部插入一个数据</li>\n<li><code>pop_back();</code> //删除容器最后一个数据</li>\n<li><code>pop_front();</code> //删除容器第一个数据</li>\n</ul>\n<p>指定位置操作：</p>\n<ul>\n<li>\n<p><code>insert(pos,elem);</code> //在 pos 位置插入一个 elem 元素的拷贝，返回新数据的位置。</p>\n</li>\n<li>\n<p><code>insert(pos,n,elem);</code> //在 pos 位置插入 n 个 elem 数据，无返回值。</p>\n</li>\n<li>\n<p><code>insert(pos,beg,end);</code> //在 pos 位置插入[beg,end)区间的数据，无返回值。</p>\n</li>\n<li>\n<p><code>clear();</code> //清空容器的所有数据</p>\n</li>\n<li>\n<p><code>erase(beg,end);</code> //删除[beg,end)区间的数据，返回下一个数据的位置。</p>\n</li>\n<li>\n<p><code>erase(pos);</code> //删除 pos 位置的数据，返回下一个数据的位置。</p>\n<p>​</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//两端操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d;</span><br><span class=\"line\">\t<span class=\"comment\">//尾插</span></span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//头插</span></span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//尾删</span></span><br><span class=\"line\">\td.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">\t<span class=\"comment\">//头删</span></span><br><span class=\"line\">\td.<span class=\"built_in\">pop_front</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//插入</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d;</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\td.<span class=\"built_in\">insert</span>(d.<span class=\"built_in\">begin</span>(), <span class=\"number\">1000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\td.<span class=\"built_in\">insert</span>(d.<span class=\"built_in\">begin</span>(), <span class=\"number\">2</span>,<span class=\"number\">10000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;d2;</span><br><span class=\"line\">\td2.<span class=\"built_in\">push_back</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">\td2.<span class=\"built_in\">push_back</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">\td2.<span class=\"built_in\">push_back</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\td.<span class=\"built_in\">insert</span>(d.<span class=\"built_in\">begin</span>(), d2.<span class=\"built_in\">begin</span>(), d2.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//删除</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test03</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d;</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\td.<span class=\"built_in\">erase</span>(d.<span class=\"built_in\">begin</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\td.<span class=\"built_in\">erase</span>(d.<span class=\"built_in\">begin</span>(), d.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\td.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//test01();</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//test02();</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">test03</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>插入和删除提供的位置是迭代器！</li>\n<li>尾插 — push_back</li>\n<li>尾删 — pop_back</li>\n<li>头插 — push_front</li>\n<li>头删 — pop_front</li>\n</ul>\n<h2 id=\"deque-数据存取\">deque 数据存取</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 deque 中的数据的存取操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>at(int idx); </code> //返回索引 idx 所指的数据</li>\n<li><code>operator[]; </code> //返回索引 idx 所指的数据</li>\n<li><code>front(); </code> //返回容器中第一个数据元素</li>\n<li><code>back();</code> //返回容器中最后一个数据元素</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//数据存取</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d;</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; d.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; d[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; d.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; d.<span class=\"built_in\">at</span>(i) &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;front:&quot;</span> &lt;&lt; d.<span class=\"built_in\">front</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;back:&quot;</span> &lt;&lt; d.<span class=\"built_in\">back</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>除了用迭代器获取 deque 容器中元素，[ ]和 at 也可以</li>\n<li>front 返回容器第一个元素</li>\n<li>back 返回容器最后一个元素</li>\n</ul>\n<h2 id=\"deque-排序\">deque 排序</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>利用算法实现对 deque 容器进行排序</li>\n</ul>\n<p><strong>算法：</strong></p>\n<ul>\n<li><code>sort(iterator beg, iterator end)</code> //对 beg 和 end 区间内元素进行排序</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d;</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\">\t<span class=\"built_in\">sort</span>(d.<span class=\"built_in\">begin</span>(), d.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：sort 算法非常实用，使用时包含头文件 algorithm 即可</p>\n<h1>案例-评委打分</h1>\n<h2 id=\"案例描述\">案例描述</h2>\n<p>有 5 名选手：选手 ABCDE，10 个评委分别对每一名选手打分，去除最高分，去除评委中最低分，取平均分。</p>\n<h2 id=\"实现步骤\">实现步骤</h2>\n<ol>\n<li>创建五名选手，放到 vector 中</li>\n<li>遍历 vector 容器，取出来每一个选手，执行 for 循环，可以把 10 个评分打分存到 deque 容器中</li>\n<li>sort 算法对 deque 容器中分数排序，去除最高和最低分</li>\n<li>deque 容器遍历一遍，累加总分</li>\n<li>获取平均分</li>\n</ol>\n<p><strong>示例代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//选手类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">Person</span>(string name, <span class=\"type\">int</span> score)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Name = name;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Score = score;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring m_Name; <span class=\"comment\">//姓名</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Score;  <span class=\"comment\">//平均分</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">createPerson</span><span class=\"params\">(vector&lt;Person&gt;&amp;v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring nameSeed = <span class=\"string\">&quot;ABCDE&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tstring name = <span class=\"string\">&quot;选手&quot;</span>;</span><br><span class=\"line\">\t\tname += nameSeed[i];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> score = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\">Person <span class=\"title\">p</span><span class=\"params\">(name, score)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//将创建的person对象 放入到容器中</span></span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(p);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//打分</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setScore</span><span class=\"params\">(vector&lt;Person&gt;&amp;v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;Person&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//将评委的分数 放入到deque容器中</span></span><br><span class=\"line\">\t\tdeque&lt;<span class=\"type\">int</span>&gt;d;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> score = <span class=\"built_in\">rand</span>() % <span class=\"number\">41</span> + <span class=\"number\">60</span>;  <span class=\"comment\">// 60 ~ 100</span></span><br><span class=\"line\">\t\t\td.<span class=\"built_in\">push_back</span>(score);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//cout &lt;&lt; &quot;选手： &quot; &lt;&lt; it-&gt;m_Name &lt;&lt; &quot; 打分： &quot; &lt;&lt; endl;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//for (deque&lt;int&gt;::iterator dit = d.begin(); dit != d.end(); dit++)</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//&#123;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//\tcout &lt;&lt; *dit &lt;&lt; &quot; &quot;;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//&#125;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//cout &lt;&lt; endl;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//排序</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">sort</span>(d.<span class=\"built_in\">begin</span>(), d.<span class=\"built_in\">end</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//去除最高和最低分</span></span><br><span class=\"line\">\t\td.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">\t\td.<span class=\"built_in\">pop_front</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//取平均分</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::iterator dit = d.<span class=\"built_in\">begin</span>(); dit != d.<span class=\"built_in\">end</span>(); dit++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tsum += *dit; <span class=\"comment\">//累加每个评委的分数</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> avg = sum / d.<span class=\"built_in\">size</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//将平均分 赋值给选手身上</span></span><br><span class=\"line\">\t\tit-&gt;m_Score = avg;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">showScore</span><span class=\"params\">(vector&lt;Person&gt;&amp;v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;Person&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; it-&gt;m_Name &lt;&lt; <span class=\"string\">&quot; 平均分： &quot;</span> &lt;&lt; it-&gt;m_Score &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//随机数种子</span></span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>((<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)<span class=\"built_in\">time</span>(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//1、创建5名选手</span></span><br><span class=\"line\">\tvector&lt;Person&gt;v;  <span class=\"comment\">//存放选手容器</span></span><br><span class=\"line\">\t<span class=\"built_in\">createPerson</span>(v);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//测试</span></span><br><span class=\"line\">\t<span class=\"comment\">//for (vector&lt;Person&gt;::iterator it = v.begin(); it != v.end(); it++)</span></span><br><span class=\"line\">\t<span class=\"comment\">//&#123;</span></span><br><span class=\"line\">\t<span class=\"comment\">//\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt; (*it).m_Name &lt;&lt; &quot; 分数： &quot; &lt;&lt; (*it).m_Score &lt;&lt; endl;</span></span><br><span class=\"line\">\t<span class=\"comment\">//&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//2、给5名选手打分</span></span><br><span class=\"line\">\t<span class=\"built_in\">setScore</span>(v);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//3、显示最后得分</span></span><br><span class=\"line\">\t<span class=\"built_in\">showScore</span>(v);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>总结：</strong> 选取不同的容器操作数据，可以提升代码的效率</p>\n<h1>stack 容器</h1>\n<h2 id=\"stack-基本概念\">stack 基本概念</h2>\n<p><strong>概念：<strong>stack 是一种</strong>先进后出</strong>(First In Last Out,FILO)的数据结构，它只有一个出口</p>\n<p><img src=\"assets/clip_image002-1547604555425.jpg\" alt=\"说明: 2015-11-15_195707\"></p>\n<p>栈中只有顶端的元素才可以被外界使用，因此栈不允许有遍历行为</p>\n<p>栈中进入数据称为 — <strong>入栈</strong> <code>push</code></p>\n<p>栈中弹出数据称为 — <strong>出栈</strong> <code>pop</code></p>\n<p>生活中的栈：</p>\n<p><img src=\"assets/clip_image002.png\" alt=\"img\"></p>\n<p><img src=\"assets/clip_image002-1547605111510.jpg\" alt=\"img\"></p>\n<h2 id=\"stack-常用接口\">stack 常用接口</h2>\n<p>功能描述：栈容器常用的对外接口</p>\n<p>构造函数：</p>\n<ul>\n<li><code>stack&lt;T&gt; stk;</code> //stack 采用模板类实现， stack 对象的默认构造形式</li>\n<li><code>stack(const stack &amp;stk);</code> //拷贝构造函数</li>\n</ul>\n<p>赋值操作：</p>\n<ul>\n<li><code>stack&amp; operator=(const stack &amp;stk);</code> //重载等号操作符</li>\n</ul>\n<p>数据存取：</p>\n<ul>\n<li><code>push(elem);</code> //向栈顶添加元素</li>\n<li><code>pop();</code> //从栈顶移除第一个元素</li>\n<li><code>top(); </code> //返回栈顶元素</li>\n</ul>\n<p>大小操作：</p>\n<ul>\n<li><code>empty();</code> //判断堆栈是否为空</li>\n<li><code>size(); </code> //返回栈的大小</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stack&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//栈容器常用接口</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//创建栈容器 栈容器必须符合先进后出</span></span><br><span class=\"line\">\tstack&lt;<span class=\"type\">int</span>&gt; s;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//向栈中添加元素，叫做 压栈 入栈</span></span><br><span class=\"line\">\ts.<span class=\"built_in\">push</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\ts.<span class=\"built_in\">push</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\ts.<span class=\"built_in\">push</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (!s.<span class=\"built_in\">empty</span>()) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出栈顶元素</span></span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;栈顶元素为： &quot;</span> &lt;&lt; s.<span class=\"built_in\">top</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t\t<span class=\"comment\">//弹出栈顶元素</span></span><br><span class=\"line\">\t\ts.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;栈的大小为：&quot;</span> &lt;&lt; s.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>入栈 — push</li>\n<li>出栈 — pop</li>\n<li>返回栈顶 — top</li>\n<li>判断栈是否为空 — empty</li>\n<li>返回栈大小 — size</li>\n</ul>\n<h1>queue 容器</h1>\n<h2 id=\"queue-基本概念\">queue 基本概念</h2>\n<p><strong>概念：<strong>Queue 是一种</strong>先进先出</strong>(First In First Out,FIFO)的数据结构，它有两个出口</p>\n<p><img src=\"assets/clip_image002-1547606475892.jpg\" alt=\"说明: 2015-11-15_214429\"></p>\n<p>队列容器允许从一端新增元素，从另一端移除元素</p>\n<p>队列中只有队头和队尾才可以被外界使用，因此队列不允许有遍历行为</p>\n<p>队列中进数据称为 — <strong>入队</strong> <code>push</code></p>\n<p>队列中出数据称为 — <strong>出队</strong> <code>pop</code></p>\n<p>生活中的队列：</p>\n<p><img src=\"assets/1547606785041.png\" alt=\"1547606785041\"></p>\n<h2 id=\"queue-常用接口\">queue 常用接口</h2>\n<p>功能描述：栈容器常用的对外接口</p>\n<p>构造函数：</p>\n<ul>\n<li><code>queue&lt;T&gt; que;</code> //queue 采用模板类实现，queue 对象的默认构造形式</li>\n<li><code>queue(const queue &amp;que);</code> //拷贝构造函数</li>\n</ul>\n<p>赋值操作：</p>\n<ul>\n<li><code>queue&amp; operator=(const queue &amp;que);</code> //重载等号操作符</li>\n</ul>\n<p>数据存取：</p>\n<ul>\n<li><code>push(elem);</code> //往队尾添加元素</li>\n<li><code>pop();</code> //从队头移除第一个元素</li>\n<li><code>back();</code> //返回最后一个元素</li>\n<li><code>front(); </code> //返回第一个元素</li>\n</ul>\n<p>大小操作：</p>\n<ul>\n<li><code>empty();</code> //判断堆栈是否为空</li>\n<li><code>size(); </code> //返回栈的大小</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">Person</span>(string name, <span class=\"type\">int</span> age)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Name = name;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Age = age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring m_Name;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Age;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//创建队列</span></span><br><span class=\"line\">\tqueue&lt;Person&gt; q;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//准备数据</span></span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p1</span><span class=\"params\">(<span class=\"string\">&quot;唐僧&quot;</span>, <span class=\"number\">30</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p2</span><span class=\"params\">(<span class=\"string\">&quot;孙悟空&quot;</span>, <span class=\"number\">1000</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p3</span><span class=\"params\">(<span class=\"string\">&quot;猪八戒&quot;</span>, <span class=\"number\">900</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p4</span><span class=\"params\">(<span class=\"string\">&quot;沙僧&quot;</span>, <span class=\"number\">800</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//向队列中添加元素  入队操作</span></span><br><span class=\"line\">\tq.<span class=\"built_in\">push</span>(p1);</span><br><span class=\"line\">\tq.<span class=\"built_in\">push</span>(p2);</span><br><span class=\"line\">\tq.<span class=\"built_in\">push</span>(p3);</span><br><span class=\"line\">\tq.<span class=\"built_in\">push</span>(p4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//队列不提供迭代器，更不支持随机访问</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (!q.<span class=\"built_in\">empty</span>()) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出队头元素</span></span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;队头元素-- 姓名： &quot;</span> &lt;&lt; q.<span class=\"built_in\">front</span>().m_Name</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot; 年龄： &quot;</span>&lt;&lt; q.<span class=\"built_in\">front</span>().m_Age &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;队尾元素-- 姓名： &quot;</span> &lt;&lt; q.<span class=\"built_in\">back</span>().m_Name</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot; 年龄： &quot;</span> &lt;&lt; q.<span class=\"built_in\">back</span>().m_Age &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tcout &lt;&lt; endl;</span><br><span class=\"line\">\t\t<span class=\"comment\">//弹出队头元素</span></span><br><span class=\"line\">\t\tq.<span class=\"built_in\">pop</span>();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;队列大小为：&quot;</span> &lt;&lt; q.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>入队 — push</li>\n<li>出队 — pop</li>\n<li>返回队头元素 — front</li>\n<li>返回队尾元素 — back</li>\n<li>判断队是否为空 — empty</li>\n<li>返回队列大小 — size</li>\n</ul>\n<h1>list 容器</h1>\n<h2 id=\"list-基本概念\">list 基本概念</h2>\n<p>**功能：**将数据进行链式存储</p>\n<p><strong>链表</strong>（list）是一种物理存储单元上非连续的存储结构，数据元素的逻辑顺序是通过链表中的指针链接实现的</p>\n<p>链表的组成：链表由一系列<strong>结点</strong>组成</p>\n<p>结点的组成：一个是存储数据元素的<strong>数据域</strong>，另一个是存储下一个结点地址的<strong>指针域</strong></p>\n<p>STL 中的链表是一个双向循环链表</p>\n<p><img src=\"assets/clip_image002-1547608564071.jpg\" alt=\"说明: 2015-11-15_225145\"></p>\n<p>由于链表的存储方式并不是连续的内存空间，因此链表 list 中的迭代器只支持前移和后移，属于<strong>双向迭代器</strong></p>\n<p>list 的优点：</p>\n<ul>\n<li>采用动态存储分配，不会造成内存浪费和溢出</li>\n<li>链表执行插入和删除操作十分方便，修改指针即可，不需要移动大量元素</li>\n</ul>\n<p>list 的缺点：</p>\n<ul>\n<li>链表灵活，但是空间(指针域) 和 时间（遍历）额外耗费较大</li>\n</ul>\n<p>List 有一个重要的性质，插入操作和删除操作都不会造成原有 list 迭代器的失效，这在 vector 是不成立的。</p>\n<p>总结：STL 中<strong>List 和 vector 是两个最常被使用的容器</strong>，各有优缺点</p>\n<h2 id=\"list-构造函数\">list 构造函数</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>创建 list 容器</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>list&lt;T&gt; lst;</code> //list 采用采用模板类实现,对象的默认构造形式：</li>\n<li><code>list(beg,end);</code> //构造函数将[beg, end)区间中的元素拷贝给本身。</li>\n<li><code>list(n,elem);</code> //构造函数将 n 个 elem 拷贝给本身。</li>\n<li><code>list(const list &amp;lst);</code> //拷贝构造函数。</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;list&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printList</span><span class=\"params\">(<span class=\"type\">const</span> list&lt;<span class=\"type\">int</span>&gt;&amp; L)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (list&lt;<span class=\"type\">int</span>&gt;::const_iterator it = L.<span class=\"built_in\">begin</span>(); it != L.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L1;</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L1);</span><br><span class=\"line\"></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;<span class=\"built_in\">L2</span>(L1.<span class=\"built_in\">begin</span>(),L1.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;<span class=\"built_in\">L3</span>(L2);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L3);</span><br><span class=\"line\"></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;<span class=\"built_in\">L4</span>(<span class=\"number\">10</span>, <span class=\"number\">1000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L4);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：list 构造方式同其他几个 STL 常用容器，熟练掌握即可</p>\n<h2 id=\"list-赋值和交换\">list 赋值和交换</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>给 list 容器进行赋值，以及交换 list 容器</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>assign(beg, end);</code> //将[beg, end)区间中的数据拷贝赋值给本身。</li>\n<li><code>assign(n, elem);</code> //将 n 个 elem 拷贝赋值给本身。</li>\n<li><code>list&amp; operator=(const list &amp;lst);</code> //重载等号操作符</li>\n<li><code>swap(lst);</code> //将 lst 与本身的元素互换。</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;list&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printList</span><span class=\"params\">(<span class=\"type\">const</span> list&lt;<span class=\"type\">int</span>&gt;&amp; L)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (list&lt;<span class=\"type\">int</span>&gt;::const_iterator it = L.<span class=\"built_in\">begin</span>(); it != L.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//赋值和交换</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L1;</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//赋值</span></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L2;</span><br><span class=\"line\">\tL2 = L1;</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L3;</span><br><span class=\"line\">\tL3.<span class=\"built_in\">assign</span>(L2.<span class=\"built_in\">begin</span>(), L2.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L3);</span><br><span class=\"line\"></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L4;</span><br><span class=\"line\">\tL4.<span class=\"built_in\">assign</span>(<span class=\"number\">10</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L4);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//交换</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L1;</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L2;</span><br><span class=\"line\">\tL2.<span class=\"built_in\">assign</span>(<span class=\"number\">10</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;交换前： &quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L1);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tL1.<span class=\"built_in\">swap</span>(L2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;交换后： &quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L1);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L2);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//test01();</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test02</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：list 赋值和交换操作能够灵活运用即可</p>\n<h2 id=\"list-大小操作\">list 大小操作</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 list 容器的大小进行操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>size(); </code> //返回容器中元素的个数</p>\n</li>\n<li>\n<p><code>empty(); </code> //判断容器是否为空</p>\n</li>\n<li>\n<p><code>resize(num);</code> //重新指定容器的长度为 num，若容器变长，则以默认值填充新位置。</p>\n<p>​ //如果容器变短，则末尾超出容器长度的元素被删除。</p>\n</li>\n<li>\n<p><code>resize(num, elem); </code> //重新指定容器的长度为 num，若容器变长，则以 elem 值填充新位置。</p>\n<p>​ //如果容器变短，则末尾超出容器长度的元素被删除。</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;list&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printList</span><span class=\"params\">(<span class=\"type\">const</span> list&lt;<span class=\"type\">int</span>&gt;&amp; L)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (list&lt;<span class=\"type\">int</span>&gt;::const_iterator it = L.<span class=\"built_in\">begin</span>(); it != L.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//大小操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L1;</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (L1.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;L1为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;L1不为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;L1的大小为： &quot;</span> &lt;&lt; L1.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//重新指定大小</span></span><br><span class=\"line\">\tL1.<span class=\"built_in\">resize</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L1);</span><br><span class=\"line\"></span><br><span class=\"line\">\tL1.<span class=\"built_in\">resize</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>判断是否为空 — empty</li>\n<li>返回元素个数 — size</li>\n<li>重新指定个数 — resize</li>\n</ul>\n<h2 id=\"list-插入和删除\">list 插入和删除</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 list 容器进行数据的插入和删除</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>push_back(elem);//在容器尾部加入一个元素</li>\n<li>pop_back();//删除容器中最后一个元素</li>\n<li>push_front(elem);//在容器开头插入一个元素</li>\n<li>pop_front();//从容器开头移除第一个元素</li>\n<li>insert(pos,elem);//在 pos 位置插 elem 元素的拷贝，返回新数据的位置。</li>\n<li>insert(pos,n,elem);//在 pos 位置插入 n 个 elem 数据，无返回值。</li>\n<li>insert(pos,beg,end);//在 pos 位置插入[beg,end)区间的数据，无返回值。</li>\n<li>clear();//移除容器的所有数据</li>\n<li>erase(beg,end);//删除[beg,end)区间的数据，返回下一个数据的位置。</li>\n<li>erase(pos);//删除 pos 位置的数据，返回下一个数据的位置。</li>\n<li>remove(elem);//删除容器中所有与 elem 值匹配的元素。</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;list&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printList</span><span class=\"params\">(<span class=\"type\">const</span> list&lt;<span class=\"type\">int</span>&gt;&amp; L)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (list&lt;<span class=\"type\">int</span>&gt;::const_iterator it = L.<span class=\"built_in\">begin</span>(); it != L.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//插入和删除</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt; L;</span><br><span class=\"line\">\t<span class=\"comment\">//尾插</span></span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//头插</span></span><br><span class=\"line\">\tL.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_front</span>(<span class=\"number\">300</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//尾删</span></span><br><span class=\"line\">\tL.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//头删</span></span><br><span class=\"line\">\tL.<span class=\"built_in\">pop_front</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//插入</span></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;::iterator it = L.<span class=\"built_in\">begin</span>();</span><br><span class=\"line\">\tL.<span class=\"built_in\">insert</span>(++it, <span class=\"number\">1000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//删除</span></span><br><span class=\"line\">\tit = L.<span class=\"built_in\">begin</span>();</span><br><span class=\"line\">\tL.<span class=\"built_in\">erase</span>(++it);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//移除</span></span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">10000</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">10000</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">10000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\">\tL.<span class=\"built_in\">remove</span>(<span class=\"number\">10000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//清空</span></span><br><span class=\"line\">\tL.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>尾插 — push_back</li>\n<li>尾删 — pop_back</li>\n<li>头插 — push_front</li>\n<li>头删 — pop_front</li>\n<li>插入 — insert</li>\n<li>删除 — erase</li>\n<li>移除 — remove</li>\n<li>清空 — clear</li>\n</ul>\n<h2 id=\"list-数据存取\">list 数据存取</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 list 容器中数据进行存取</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>front();</code> //返回第一个元素。</li>\n<li><code>back();</code> //返回最后一个元素。</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;list&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//数据存取</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;L1;</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tL1.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//cout &lt;&lt; L1.at(0) &lt;&lt; endl;//错误 不支持at访问数据</span></span><br><span class=\"line\">\t<span class=\"comment\">//cout &lt;&lt; L1[0] &lt;&lt; endl; //错误  不支持[]方式访问数据</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;第一个元素为： &quot;</span> &lt;&lt; L1.<span class=\"built_in\">front</span>() &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;最后一个元素为： &quot;</span> &lt;&lt; L1.<span class=\"built_in\">back</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//list容器的迭代器是双向迭代器，不支持随机访问</span></span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt;::iterator it = L1.<span class=\"built_in\">begin</span>();</span><br><span class=\"line\">\t<span class=\"comment\">//it = it + 1;//错误，不可以跳跃访问，即使是+1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>list 容器中不可以通过[]或者 at 方式访问数据</li>\n<li>返回第一个元素 — front</li>\n<li>返回最后一个元素 — back</li>\n</ul>\n<h2 id=\"list-反转和排序\">list 反转和排序</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>将容器中的元素反转，以及将容器中的数据进行排序</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>reverse();</code> //反转链表</li>\n<li><code>sort();</code> //链表排序</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printList</span><span class=\"params\">(<span class=\"type\">const</span> list&lt;<span class=\"type\">int</span>&gt;&amp; L)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (list&lt;<span class=\"type\">int</span>&gt;::const_iterator it = L.<span class=\"built_in\">begin</span>(); it != L.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">myCompare</span><span class=\"params\">(<span class=\"type\">int</span> val1 , <span class=\"type\">int</span> val2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> val1 &gt; val2;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//反转和排序</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tlist&lt;<span class=\"type\">int</span>&gt; L;</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">90</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(<span class=\"number\">70</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//反转容器的元素</span></span><br><span class=\"line\">\tL.<span class=\"built_in\">reverse</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//排序</span></span><br><span class=\"line\">\tL.<span class=\"built_in\">sort</span>(); <span class=\"comment\">//默认的排序规则 从小到大</span></span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\"></span><br><span class=\"line\">\tL.<span class=\"built_in\">sort</span>(myCompare); <span class=\"comment\">//指定规则，从大到小</span></span><br><span class=\"line\">\t<span class=\"built_in\">printList</span>(L);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>反转 — reverse</li>\n<li>排序 — sort （成员函数）</li>\n</ul>\n<h2 id=\"排序案例\">排序案例</h2>\n<p>案例描述：将 Person 自定义数据类型进行排序，Person 中属性有姓名、年龄、身高</p>\n<p>排序规则：按照年龄进行升序，如果年龄相同按照身高进行降序</p>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;list&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">Person</span>(string name, <span class=\"type\">int</span> age , <span class=\"type\">int</span> height) &#123;</span><br><span class=\"line\">\t\tm_Name = name;</span><br><span class=\"line\">\t\tm_Age = age;</span><br><span class=\"line\">\t\tm_Height = height;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\tstring m_Name;  <span class=\"comment\">//姓名</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Age;      <span class=\"comment\">//年龄</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Height;   <span class=\"comment\">//身高</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">ComparePerson</span><span class=\"params\">(Person&amp; p1, Person&amp; p2)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (p1.m_Age == p2.m_Age) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> p1.m_Height  &gt; p2.m_Height;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>  p1.m_Age &lt; p2.m_Age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tlist&lt;Person&gt; L;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p1</span><span class=\"params\">(<span class=\"string\">&quot;刘备&quot;</span>, <span class=\"number\">35</span> , <span class=\"number\">175</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p2</span><span class=\"params\">(<span class=\"string\">&quot;曹操&quot;</span>, <span class=\"number\">45</span> , <span class=\"number\">180</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p3</span><span class=\"params\">(<span class=\"string\">&quot;孙权&quot;</span>, <span class=\"number\">40</span> , <span class=\"number\">170</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p4</span><span class=\"params\">(<span class=\"string\">&quot;赵云&quot;</span>, <span class=\"number\">25</span> , <span class=\"number\">190</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p5</span><span class=\"params\">(<span class=\"string\">&quot;张飞&quot;</span>, <span class=\"number\">35</span> , <span class=\"number\">160</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p6</span><span class=\"params\">(<span class=\"string\">&quot;关羽&quot;</span>, <span class=\"number\">35</span> , <span class=\"number\">200</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(p1);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(p2);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(p3);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(p4);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(p5);</span><br><span class=\"line\">\tL.<span class=\"built_in\">push_back</span>(p6);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (list&lt;Person&gt;::iterator it = L.<span class=\"built_in\">begin</span>(); it != L.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; it-&gt;m_Name &lt;&lt; <span class=\"string\">&quot; 年龄： &quot;</span> &lt;&lt; it-&gt;m_Age</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot; 身高： &quot;</span> &lt;&lt; it-&gt;m_Height &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;---------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tL.<span class=\"built_in\">sort</span>(ComparePerson); <span class=\"comment\">//排序</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (list&lt;Person&gt;::iterator it = L.<span class=\"built_in\">begin</span>(); it != L.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; it-&gt;m_Name &lt;&lt; <span class=\"string\">&quot; 年龄： &quot;</span> &lt;&lt; it-&gt;m_Age</span><br><span class=\"line\">              &lt;&lt; <span class=\"string\">&quot; 身高： &quot;</span> &lt;&lt; it-&gt;m_Height &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>对于自定义数据类型，必须要指定排序规则，否则编译器不知道如何进行排序</li>\n<li>高级排序只是在排序规则上再进行一次逻辑规则制定，并不复杂</li>\n</ul>\n<h1>set/ multiset 容器</h1>\n<h2 id=\"set-基本概念\">set 基本概念</h2>\n<p><strong>简介：</strong></p>\n<ul>\n<li>所有元素都会在插入时自动被排序</li>\n</ul>\n<p><strong>本质：</strong></p>\n<ul>\n<li>set/multiset 属于<strong>关联式容器</strong>，底层结构是用<strong>二叉树</strong>实现。</li>\n</ul>\n<p><strong>set 和 multiset 区别</strong>：</p>\n<ul>\n<li>set 不允许容器中有重复的元素</li>\n<li>multiset 允许容器中有重复的元素</li>\n</ul>\n<h2 id=\"set-构造和赋值\">set 构造和赋值</h2>\n<p>功能描述：创建 set 容器以及赋值</p>\n<p>构造：</p>\n<ul>\n<li><code>set&lt;T&gt; st;</code> //默认构造函数：</li>\n<li><code>set(const set &amp;st);</code> //拷贝构造函数</li>\n</ul>\n<p>赋值：</p>\n<ul>\n<li><code>set&amp; operator=(const set &amp;st);</code> //重载等号操作符</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;set&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printSet</span><span class=\"params\">(set&lt;<span class=\"type\">int</span>&gt; &amp; s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (set&lt;<span class=\"type\">int</span>&gt;::iterator it = s.<span class=\"built_in\">begin</span>(); it != s.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//构造和赋值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt; s1;</span><br><span class=\"line\"></span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//拷贝构造</span></span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt;<span class=\"built_in\">s2</span>(s1);</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//赋值</span></span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt;s3;</span><br><span class=\"line\">\ts3 = s2;</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s3);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>set 容器插入数据时用 insert</li>\n<li>set 容器插入数据的数据会自动排序</li>\n</ul>\n<h2 id=\"set-大小和交换\">set 大小和交换</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>统计 set 容器大小以及交换 set 容器</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>size();</code> //返回容器中元素的数目</li>\n<li><code>empty();</code> //判断容器是否为空</li>\n<li><code>swap(st);</code> //交换两个集合容器</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;set&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printSet</span><span class=\"params\">(set&lt;<span class=\"type\">int</span>&gt; &amp; s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (set&lt;<span class=\"type\">int</span>&gt;::iterator it = s.<span class=\"built_in\">begin</span>(); it != s.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//大小</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt; s1;</span><br><span class=\"line\"></span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (s1.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;s1为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;s1不为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;s1的大小为： &quot;</span> &lt;&lt; s1.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//交换</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt; s1;</span><br><span class=\"line\"></span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt; s2;</span><br><span class=\"line\"></span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">300</span>);</span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">400</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;交换前&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s1);</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s2);</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;交换后&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\ts1.<span class=\"built_in\">swap</span>(s2);</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s1);</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//test01();</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test02</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>统计大小 — size</li>\n<li>判断是否为空 — empty</li>\n<li>交换容器 — swap</li>\n</ul>\n<h2 id=\"set-插入和删除\">set 插入和删除</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>set 容器进行插入数据和删除数据</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>insert(elem);</code> //在容器中插入元素。</li>\n<li><code>clear();</code> //清除所有元素</li>\n<li><code>erase(pos);</code> //删除 pos 迭代器所指的元素，返回下一个元素的迭代器。</li>\n<li><code>erase(beg, end);</code> //删除区间[beg,end)的所有元素 ，返回下一个元素的迭代器。</li>\n<li><code>erase(elem);</code> //删除容器中值为 elem 的元素。</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;set&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printSet</span><span class=\"params\">(set&lt;<span class=\"type\">int</span>&gt; &amp; s)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (set&lt;<span class=\"type\">int</span>&gt;::iterator it = s.<span class=\"built_in\">begin</span>(); it != s.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//插入和删除</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt; s1;</span><br><span class=\"line\">\t<span class=\"comment\">//插入</span></span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//删除</span></span><br><span class=\"line\">\ts1.<span class=\"built_in\">erase</span>(s1.<span class=\"built_in\">begin</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s1);</span><br><span class=\"line\"></span><br><span class=\"line\">\ts1.<span class=\"built_in\">erase</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//清空</span></span><br><span class=\"line\">\t<span class=\"comment\">//s1.erase(s1.begin(), s1.end());</span></span><br><span class=\"line\">\ts1.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printSet</span>(s1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>插入 — insert</li>\n<li>删除 — erase</li>\n<li>清空 — clear</li>\n</ul>\n<h2 id=\"set-查找和统计\">set 查找和统计</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 set 容器进行查找数据以及统计数据</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>find(key);</code> //查找 key 是否存在,若存在，返回该键的元素的迭代器；若不存在，返回 set.end();</li>\n<li><code>count(key);</code> //统计 key 的元素个数</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;set&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//查找和统计</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt; s1;</span><br><span class=\"line\">\t<span class=\"comment\">//插入</span></span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//查找</span></span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt;::iterator pos = s1.<span class=\"built_in\">find</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (pos != s1.<span class=\"built_in\">end</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;找到了元素 ： &quot;</span> &lt;&lt; *pos &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;未找到元素&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//统计</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> num = s1.<span class=\"built_in\">count</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;num = &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>查找 — find （返回的是迭代器）</li>\n<li>统计 — count （对于 set，结果为 0 或者 1）</li>\n</ul>\n<h2 id=\"set-和-multiset-区别\">set 和 multiset 区别</h2>\n<p><strong>学习目标：</strong></p>\n<ul>\n<li>掌握 set 和 multiset 的区别</li>\n</ul>\n<p><strong>区别：</strong></p>\n<ul>\n<li>set 不可以插入重复数据，而 multiset 可以</li>\n<li>set 插入数据的同时会返回插入结果，表示插入是否成功</li>\n<li>multiset 不会检测数据，因此可以插入重复数据</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;set&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//set和multiset区别</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt; s;</span><br><span class=\"line\">\tpair&lt;set&lt;<span class=\"type\">int</span>&gt;::iterator, <span class=\"type\">bool</span>&gt;  ret = s.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ret.second) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;第一次插入成功!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;第一次插入失败!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tret = s.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ret.second) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;第二次插入成功!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;第二次插入失败!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//multiset</span></span><br><span class=\"line\">\tmultiset&lt;<span class=\"type\">int</span>&gt; ms;</span><br><span class=\"line\">\tms.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tms.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (multiset&lt;<span class=\"type\">int</span>&gt;::iterator it = ms.<span class=\"built_in\">begin</span>(); it != ms.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>如果不允许插入重复数据可以利用 set</li>\n<li>如果需要插入重复数据利用 multiset</li>\n</ul>\n<h2 id=\"pair-对组创建\">pair 对组创建</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>成对出现的数据，利用对组可以返回两个数据</li>\n</ul>\n<p><strong>两种创建方式：</strong></p>\n<ul>\n<li><code>pair&lt;type, type&gt; p ( value1, value2 );</code></li>\n<li><code>pair&lt;type, type&gt; p = make_pair( value1, value2 );</code></li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//对组创建</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"function\">pair&lt;string, <span class=\"type\">int</span>&gt; <span class=\"title\">p</span><span class=\"params\">(string(<span class=\"string\">&quot;Tom&quot;</span>), <span class=\"number\">20</span>)</span></span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt;  p.first &lt;&lt; <span class=\"string\">&quot; 年龄： &quot;</span> &lt;&lt; p.second &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpair&lt;string, <span class=\"type\">int</span>&gt; p2 = <span class=\"built_in\">make_pair</span>(<span class=\"string\">&quot;Jerry&quot;</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; p2.first &lt;&lt; <span class=\"string\">&quot; 年龄： &quot;</span> &lt;&lt; p2.second &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<p>两种方式都可以创建对组，记住一种即可</p>\n<h2 id=\"set-容器排序\">set 容器排序</h2>\n<p>学习目标：</p>\n<ul>\n<li>set 容器默认排序规则为从小到大，掌握如何改变排序规则</li>\n</ul>\n<p>主要技术点：</p>\n<ul>\n<li>利用仿函数，可以改变排序规则</li>\n</ul>\n<p><strong>示例一</strong> set 存放内置数据类型</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;set&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyCompare</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> v1, <span class=\"type\">int</span> v2)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> v1 &gt; v2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>&gt; s1;</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\ts1.<span class=\"built_in\">insert</span>(<span class=\"number\">50</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//默认从小到大</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (set&lt;<span class=\"type\">int</span>&gt;::iterator it = s1.<span class=\"built_in\">begin</span>(); it != s1.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//指定排序规则</span></span><br><span class=\"line\">\tset&lt;<span class=\"type\">int</span>,MyCompare&gt; s2;</span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\ts2.<span class=\"built_in\">insert</span>(<span class=\"number\">50</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (set&lt;<span class=\"type\">int</span>, MyCompare&gt;::iterator it = s2.<span class=\"built_in\">begin</span>(); it != s2.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：利用仿函数可以指定 set 容器的排序规则</p>\n<p><strong>示例二</strong> set 存放自定义数据类型</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;set&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">Person</span>(string name, <span class=\"type\">int</span> age)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Name = name;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Age = age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring m_Name;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Age;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">comparePerson</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">const</span> Person&amp; p1, <span class=\"type\">const</span> Person &amp;p2)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//按照年龄进行排序  降序</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> p1.m_Age &gt; p2.m_Age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tset&lt;Person, comparePerson&gt; s;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p1</span><span class=\"params\">(<span class=\"string\">&quot;刘备&quot;</span>, <span class=\"number\">23</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p2</span><span class=\"params\">(<span class=\"string\">&quot;关羽&quot;</span>, <span class=\"number\">27</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p3</span><span class=\"params\">(<span class=\"string\">&quot;张飞&quot;</span>, <span class=\"number\">25</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p4</span><span class=\"params\">(<span class=\"string\">&quot;赵云&quot;</span>, <span class=\"number\">21</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\ts.<span class=\"built_in\">insert</span>(p1);</span><br><span class=\"line\">\ts.<span class=\"built_in\">insert</span>(p2);</span><br><span class=\"line\">\ts.<span class=\"built_in\">insert</span>(p3);</span><br><span class=\"line\">\ts.<span class=\"built_in\">insert</span>(p4);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (set&lt;Person, comparePerson&gt;::iterator it = s.<span class=\"built_in\">begin</span>(); it != s.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; it-&gt;m_Name &lt;&lt; <span class=\"string\">&quot; 年龄： &quot;</span> &lt;&lt; it-&gt;m_Age &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<p>对于自定义数据类型，set 必须指定排序规则才可以插入数据</p>\n<h1>map/ multimap 容器</h1>\n<h2 id=\"map-基本概念\">map 基本概念</h2>\n<p><strong>简介：</strong></p>\n<ul>\n<li>map 中所有元素都是 pair</li>\n<li>pair 中第一个元素为 key（键值），起到索引作用，第二个元素为 value（实值）</li>\n<li>所有元素都会根据元素的键值自动排序</li>\n</ul>\n<p><strong>本质：</strong></p>\n<ul>\n<li>map/multimap 属于<strong>关联式容器</strong>，底层结构是用二叉树实现。</li>\n</ul>\n<p><strong>优点：</strong></p>\n<ul>\n<li>可以根据 key 值快速找到 value 值</li>\n</ul>\n<p>map 和 multimap<strong>区别</strong>：</p>\n<ul>\n<li>map 不允许容器中有重复 key 值元素</li>\n<li>multimap 允许容器中有重复 key 值元素</li>\n</ul>\n<h2 id=\"map-构造和赋值\">map 构造和赋值</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 map 容器进行构造和赋值操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<p><strong>构造：</strong></p>\n<ul>\n<li><code>map&lt;T1, T2&gt; mp;</code> //map 默认构造函数:</li>\n<li><code>map(const map &amp;mp);</code> //拷贝构造函数</li>\n</ul>\n<p><strong>赋值：</strong></p>\n<ul>\n<li><code>map&amp; operator=(const map &amp;mp);</code> //重载等号操作符</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;map&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printMap</span><span class=\"params\">(map&lt;<span class=\"type\">int</span>,<span class=\"type\">int</span>&gt;&amp;m)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;::iterator it = m.<span class=\"built_in\">begin</span>(); it != m.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;key = &quot;</span> &lt;&lt; it-&gt;first &lt;&lt; <span class=\"string\">&quot; value = &quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>,<span class=\"type\">int</span>&gt;m; <span class=\"comment\">//默认构造</span></span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">10</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">2</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">3</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m);</span><br><span class=\"line\"></span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;<span class=\"built_in\">m2</span>(m); <span class=\"comment\">//拷贝构造</span></span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;m3;</span><br><span class=\"line\">\tm3 = m2; <span class=\"comment\">//赋值</span></span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m3);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：map 中所有元素都是成对出现，插入数据时候要使用对组</p>\n<h2 id=\"map-大小和交换\">map 大小和交换</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>统计 map 容器大小以及交换 map 容器</li>\n</ul>\n<p>函数原型：</p>\n<ul>\n<li><code>size();</code> //返回容器中元素的数目</li>\n<li><code>empty();</code> //判断容器是否为空</li>\n<li><code>swap(st);</code> //交换两个集合容器</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;map&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printMap</span><span class=\"params\">(map&lt;<span class=\"type\">int</span>,<span class=\"type\">int</span>&gt;&amp;m)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;::iterator it = m.<span class=\"built_in\">begin</span>(); it != m.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;key = &quot;</span> &lt;&lt; it-&gt;first &lt;&lt; <span class=\"string\">&quot; value = &quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;m;</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">10</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">2</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">3</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (m.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;m为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;m不为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;m的大小为： &quot;</span> &lt;&lt; m.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//交换</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;m;</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">10</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">2</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">3</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;m2;</span><br><span class=\"line\">\tm2.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">4</span>, <span class=\"number\">100</span>));</span><br><span class=\"line\">\tm2.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">5</span>, <span class=\"number\">200</span>));</span><br><span class=\"line\">\tm2.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">6</span>, <span class=\"number\">300</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;交换前&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m);</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;交换后&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tm.<span class=\"built_in\">swap</span>(m2);</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m);</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test02</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>统计大小 — size</li>\n<li>判断是否为空 — empty</li>\n<li>交换容器 — swap</li>\n</ul>\n<h2 id=\"map-插入和删除\">map 插入和删除</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>map 容器进行插入数据和删除数据</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>insert(elem);</code> //在容器中插入元素。</li>\n<li><code>clear();</code> //清除所有元素</li>\n<li><code>erase(pos);</code> //删除 pos 迭代器所指的元素，返回下一个元素的迭代器。</li>\n<li><code>erase(beg, end);</code> //删除区间[beg,end)的所有元素 ，返回下一个元素的迭代器。</li>\n<li><code>erase(key);</code> //删除容器中值为 key 的元素。</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;map&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printMap</span><span class=\"params\">(map&lt;<span class=\"type\">int</span>,<span class=\"type\">int</span>&gt;&amp;m)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;::iterator it = m.<span class=\"built_in\">begin</span>(); it != m.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;key = &quot;</span> &lt;&lt; it-&gt;first &lt;&lt; <span class=\"string\">&quot; value = &quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//插入</span></span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; m;</span><br><span class=\"line\">\t<span class=\"comment\">//第一种插入方式</span></span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">10</span>));</span><br><span class=\"line\">\t<span class=\"comment\">//第二种插入方式</span></span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">make_pair</span>(<span class=\"number\">2</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">\t<span class=\"comment\">//第三种插入方式</span></span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;::<span class=\"built_in\">value_type</span>(<span class=\"number\">3</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\">\t<span class=\"comment\">//第四种插入方式</span></span><br><span class=\"line\">\tm[<span class=\"number\">4</span>] = <span class=\"number\">40</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//删除</span></span><br><span class=\"line\">\tm.<span class=\"built_in\">erase</span>(m.<span class=\"built_in\">begin</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m);</span><br><span class=\"line\"></span><br><span class=\"line\">\tm.<span class=\"built_in\">erase</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//清空</span></span><br><span class=\"line\">\tm.<span class=\"built_in\">erase</span>(m.<span class=\"built_in\">begin</span>(),m.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\tm.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printMap</span>(m);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>map 插入方式很多，记住其一即可</li>\n</ul>\n<ul>\n<li>插入 — insert</li>\n<li>删除 — erase</li>\n<li>清空 — clear</li>\n</ul>\n<h2 id=\"map-查找和统计\">map 查找和统计</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对 map 容器进行查找数据以及统计数据</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>find(key);</code> //查找 key 是否存在,若存在，返回该键的元素的迭代器；若不存在，返回 set.end();</li>\n<li><code>count(key);</code> //统计 key 的元素个数</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;map&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//查找和统计</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;m;</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">1</span>, <span class=\"number\">10</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">2</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">pair</span>&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;(<span class=\"number\">3</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//查找</span></span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;::iterator pos = m.<span class=\"built_in\">find</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (pos != m.<span class=\"built_in\">end</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;找到了元素 key = &quot;</span> &lt;&lt; (*pos).first &lt;&lt; <span class=\"string\">&quot; value = &quot;</span> &lt;&lt; (*pos).second &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;未找到元素&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//统计</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> num = m.<span class=\"built_in\">count</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;num = &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>查找 — find （返回的是迭代器）</li>\n<li>统计 — count （对于 map，结果为 0 或者 1）</li>\n</ul>\n<h2 id=\"map-容器排序\">map 容器排序</h2>\n<p><strong>学习目标：</strong></p>\n<ul>\n<li>map 容器默认排序规则为 按照 key 值进行 从小到大排序，掌握如何改变排序规则</li>\n</ul>\n<p><strong>主要技术点:</strong></p>\n<ul>\n<li>利用仿函数，可以改变排序规则</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;map&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyCompare</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> v1, <span class=\"type\">int</span> v2)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> v1 &gt; v2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//默认从小到大排序</span></span><br><span class=\"line\">\t<span class=\"comment\">//利用仿函数实现从大到小排序</span></span><br><span class=\"line\">\tmap&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>, MyCompare&gt; m;</span><br><span class=\"line\"></span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">make_pair</span>(<span class=\"number\">1</span>, <span class=\"number\">10</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">make_pair</span>(<span class=\"number\">2</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">make_pair</span>(<span class=\"number\">3</span>, <span class=\"number\">30</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">make_pair</span>(<span class=\"number\">4</span>, <span class=\"number\">40</span>));</span><br><span class=\"line\">\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">make_pair</span>(<span class=\"number\">5</span>, <span class=\"number\">50</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>, MyCompare&gt;::iterator it = m.<span class=\"built_in\">begin</span>(); it != m.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;key:&quot;</span> &lt;&lt; it-&gt;first &lt;&lt; <span class=\"string\">&quot; value:&quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>利用仿函数可以指定 map 容器的排序规则</li>\n<li>对于自定义数据类型，map 必须要指定排序规则,同 set 容器</li>\n</ul>\n<h1>案例-员工分组</h1>\n<h2 id=\"案例描述-2\">案例描述</h2>\n<ul>\n<li>公司今天招聘了 10 个员工（ABCDEFGHIJ），10 名员工进入公司之后，需要指派员工在那个部门工作</li>\n<li>员工信息有: 姓名 工资组成；部门分为：策划、美术、研发</li>\n<li>随机给 10 名员工分配部门和工资</li>\n<li>通过 multimap 进行信息的插入 key(部门编号) value(员工)</li>\n<li>分部门显示员工信息</li>\n</ul>\n<h2 id=\"实现步骤-2\">实现步骤</h2>\n<ol>\n<li>创建 10 名员工，放到 vector 中</li>\n<li>遍历 vector 容器，取出每个员工，进行随机分组</li>\n<li>分组后，将员工部门编号作为 key，具体员工作为 value，放入到 multimap 容器中</li>\n<li>分部门显示员工信息</li>\n</ol>\n<p><strong>案例代码：</strong></p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;map&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;ctime&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">- 公司今天招聘了10个员工（ABCDEFGHIJ），10名员工进入公司之后，需要指派员工在那个部门工作</span></span><br><span class=\"line\"><span class=\"comment\">- 员工信息有: 姓名  工资组成；部门分为：策划、美术、研发</span></span><br><span class=\"line\"><span class=\"comment\">- 随机给10名员工分配部门和工资</span></span><br><span class=\"line\"><span class=\"comment\">- 通过multimap进行信息的插入  key(部门编号) value(员工)</span></span><br><span class=\"line\"><span class=\"comment\">- 分部门显示员工信息</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> CEHUA  0</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MEISHU 1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> YANFA  2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Worker</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\tstring m_Name;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Salary;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">createWorker</span><span class=\"params\">(vector&lt;Worker&gt;&amp;v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring nameSeed = <span class=\"string\">&quot;ABCDEFGHIJ&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tWorker worker;</span><br><span class=\"line\">\t\tworker.m_Name = <span class=\"string\">&quot;员工&quot;</span>;</span><br><span class=\"line\">\t\tworker.m_Name += nameSeed[i];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tworker.m_Salary = <span class=\"built_in\">rand</span>() % <span class=\"number\">10000</span> + <span class=\"number\">10000</span>; <span class=\"comment\">// 10000 ~ 19999</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//将员工放入到容器中</span></span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(worker);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//员工分组</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setGroup</span><span class=\"params\">(vector&lt;Worker&gt;&amp;v,multimap&lt;<span class=\"type\">int</span>,Worker&gt;&amp;m)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;Worker&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//产生随机部门编号</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> deptId = <span class=\"built_in\">rand</span>() % <span class=\"number\">3</span>; <span class=\"comment\">// 0 1 2</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//将员工插入到分组中</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//key部门编号，value具体员工</span></span><br><span class=\"line\">\t\tm.<span class=\"built_in\">insert</span>(<span class=\"built_in\">make_pair</span>(deptId, *it));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">showWorkerByGourp</span><span class=\"params\">(multimap&lt;<span class=\"type\">int</span>,Worker&gt;&amp;m)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 0  A  B  C   1  D  E   2  F G ...</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;策划部门：&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tmultimap&lt;<span class=\"type\">int</span>,Worker&gt;::iterator pos = m.<span class=\"built_in\">find</span>(CEHUA);</span><br><span class=\"line\">\t<span class=\"type\">int</span> count = m.<span class=\"built_in\">count</span>(CEHUA); <span class=\"comment\">// 统计具体人数</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; pos != m.<span class=\"built_in\">end</span>() &amp;&amp; index &lt; count; pos++ , index++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; pos-&gt;second.m_Name &lt;&lt; <span class=\"string\">&quot; 工资： &quot;</span> &lt;&lt; pos-&gt;second.m_Salary &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;----------------------&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;美术部门： &quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tpos = m.<span class=\"built_in\">find</span>(MEISHU);</span><br><span class=\"line\">\tcount = m.<span class=\"built_in\">count</span>(MEISHU); <span class=\"comment\">// 统计具体人数</span></span><br><span class=\"line\">\tindex = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; pos != m.<span class=\"built_in\">end</span>() &amp;&amp; index &lt; count; pos++, index++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; pos-&gt;second.m_Name &lt;&lt; <span class=\"string\">&quot; 工资： &quot;</span> &lt;&lt; pos-&gt;second.m_Salary &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;----------------------&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;研发部门： &quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tpos = m.<span class=\"built_in\">find</span>(YANFA);</span><br><span class=\"line\">\tcount = m.<span class=\"built_in\">count</span>(YANFA); <span class=\"comment\">// 统计具体人数</span></span><br><span class=\"line\">\tindex = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (; pos != m.<span class=\"built_in\">end</span>() &amp;&amp; index &lt; count; pos++, index++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; pos-&gt;second.m_Name &lt;&lt; <span class=\"string\">&quot; 工资： &quot;</span> &lt;&lt; pos-&gt;second.m_Salary &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>((<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)<span class=\"built_in\">time</span>(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//1、创建员工</span></span><br><span class=\"line\">\tvector&lt;Worker&gt;vWorker;</span><br><span class=\"line\">\t<span class=\"built_in\">createWorker</span>(vWorker);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//2、员工分组</span></span><br><span class=\"line\">\tmultimap&lt;<span class=\"type\">int</span>, Worker&gt;mWorker;</span><br><span class=\"line\">\t<span class=\"built_in\">setGroup</span>(vWorker, mWorker);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//3、分组显示员工</span></span><br><span class=\"line\">\t<span class=\"built_in\">showWorkerByGourp</span>(mWorker);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">////测试</span></span><br><span class=\"line\">\t<span class=\"comment\">//for (vector&lt;Worker&gt;::iterator it = vWorker.begin(); it != vWorker.end(); it++)</span></span><br><span class=\"line\">\t<span class=\"comment\">//&#123;</span></span><br><span class=\"line\">\t<span class=\"comment\">//\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt; it-&gt;m_Name &lt;&lt; &quot; 工资： &quot; &lt;&lt; it-&gt;m_Salary &lt;&lt; endl;</span></span><br><span class=\"line\">\t<span class=\"comment\">//&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>当数据以键值对形式存在，可以考虑用 map 或 multimap</li>\n</ul>\n"},{"title":"MAC 的一些快捷键","abbrlink":"bb3a64f2","date":"2024-01-06T07:56:38.000Z","description":null,"_content":"\n<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<table>\n\t<tr>\t<th>功能<th>命令</tr>\n\t<tr>\t<td>截全屏<td>command shift 3</tr>\n\t<tr>\t<td>截窗口<td>command shift 4</tr>\n\t<tr>\t<td>可视/不可视隐藏文件<td>command shift .</tr>\n\t<tr>\t<td>光标移至行尾<td>command →</tr>\n\t<tr>\t<td>光标移至末行<td>command ↓</tr>\n\t<tr>\t<td>隐藏当前窗口<td>command H</tr>\n\t<tr>  <td>待更新...<td></tr>\n</table>\n","source":"_posts/MAC-的一些快捷键.md","raw":"---\ntitle: MAC 的一些快捷键\nabbrlink: bb3a64f2\ndate: 2024-01-06 15:56:38\ntags: \n  - shortcut\n  - macos\ncategories: shortcut\ndescription: \n---\n\n<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<table>\n\t<tr>\t<th>功能<th>命令</tr>\n\t<tr>\t<td>截全屏<td>command shift 3</tr>\n\t<tr>\t<td>截窗口<td>command shift 4</tr>\n\t<tr>\t<td>可视/不可视隐藏文件<td>command shift .</tr>\n\t<tr>\t<td>光标移至行尾<td>command →</tr>\n\t<tr>\t<td>光标移至末行<td>command ↓</tr>\n\t<tr>\t<td>隐藏当前窗口<td>command H</tr>\n\t<tr>  <td>待更新...<td></tr>\n</table>\n","slug":"MAC-的一些快捷键","published":1,"updated":"2024-01-09T09:21:46.140Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gax000fbiub4tbg6e3j","content":"<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<table>\n\t<tr>\t<th>功能<th>命令</tr>\n\t<tr>\t<td>截全屏<td>command shift 3</tr>\n\t<tr>\t<td>截窗口<td>command shift 4</tr>\n\t<tr>\t<td>可视/不可视隐藏文件<td>command shift .</tr>\n\t<tr>\t<td>光标移至行尾<td>command →</tr>\n\t<tr>\t<td>光标移至末行<td>command ↓</tr>\n\t<tr>\t<td>隐藏当前窗口<td>command H</tr>\n\t<tr>  <td>待更新...<td></tr>\n</table>\n","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":"<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<table>\n\t<tr>\t<th>功能<th>命令</tr>\n\t<tr>\t<td>截全屏<td>command shift 3</tr>\n\t<tr>\t<td>截窗口<td>command shift 4</tr>\n\t<tr>\t<td>可视/不可视隐藏文件<td>command shift .</tr>\n\t<tr>\t<td>光标移至行尾<td>command →</tr>\n\t<tr>\t<td>光标移至末行<td>command ↓</tr>\n\t<tr>\t<td>隐藏当前窗口<td>command H</tr>\n\t<tr>  <td>待更新...<td></tr>\n</table>\n"},{"title":"MAC终端实用命令","abbrlink":"a0829425","date":"2024-01-06T07:57:35.000Z","description":null,"_content":"\n<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<table>\n\t<tr>\t<th>功能<th>命令</tr>\n\t<tr>\t<td>表示用户文件夹位置，等价于/User/用户名<td>~</tr>\n\t<tr>\t<td>表示根目录，即Untitled盘下<td>/</tr>\n\t<tr>\t<td>创建文件<td>touch file.format</tr>\n\t<tr>\t<td>创建目录<td>mkdir dir</tr>\n\t<tr>\t<td>编辑文件/目录<br/>若不存在则创建，输入i或o进入编辑<br/>按esc退出后输入\t\t\t  <br/>:w 保存<br/>:wq 保存并退出<br/>:q! 不保存强制退出<td>vim dir/file</tr>\n\t<tr>\t<td>显示当前目录下的内容<td>ls</tr>\n\t<tr>\t<td>显示当前目录下的详细内容<td>ls -la</tr>\n\t<tr>\t<td>显示当前目录下的内容，包含.开头的文件<td>ls -A</tr>\n\t<tr>\t<td>显示当前的目录路径<td>pwd</tr>\n\t<tr>\t<td>移动目录<td>mvdir dir1 dir2</tr>\n\t<tr>\t<td>移动文件/文件夹，存在移动，否则重命名<td>mv dir1 dir2</tr>\n\t<tr>\t<td>删除文件/空目录<td>rm</tr>\n\t<tr>\t<td>删除非空目录<td>rm -rf dir</tr>\n\t<tr>\t<td>删除空目录<td>rmdir</tr>\n\t<tr>\t<td>复制文件或目录<td>cp file1 file2</tr>\n\t<tr>\t<td>显示文件类型<td>file fileName</tr>\n\t<tr>\t<td>chrome开发者模式<td>option command i</tr>\n\t<tr>\t<td>锁定屏幕<td>control command q</tr>\n\t<tr>  <td>待更新...<td></tr>\n</table>\n","source":"_posts/MAC终端实用命令.md","raw":"---\ntitle: MAC终端实用命令\nabbrlink: a0829425\ndate: 2024-01-06 15:57:35\ntags: \n  - shortcut\n  - macos\ncategories: shortcut\ndescription: \n---\n\n<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<table>\n\t<tr>\t<th>功能<th>命令</tr>\n\t<tr>\t<td>表示用户文件夹位置，等价于/User/用户名<td>~</tr>\n\t<tr>\t<td>表示根目录，即Untitled盘下<td>/</tr>\n\t<tr>\t<td>创建文件<td>touch file.format</tr>\n\t<tr>\t<td>创建目录<td>mkdir dir</tr>\n\t<tr>\t<td>编辑文件/目录<br/>若不存在则创建，输入i或o进入编辑<br/>按esc退出后输入\t\t\t  <br/>:w 保存<br/>:wq 保存并退出<br/>:q! 不保存强制退出<td>vim dir/file</tr>\n\t<tr>\t<td>显示当前目录下的内容<td>ls</tr>\n\t<tr>\t<td>显示当前目录下的详细内容<td>ls -la</tr>\n\t<tr>\t<td>显示当前目录下的内容，包含.开头的文件<td>ls -A</tr>\n\t<tr>\t<td>显示当前的目录路径<td>pwd</tr>\n\t<tr>\t<td>移动目录<td>mvdir dir1 dir2</tr>\n\t<tr>\t<td>移动文件/文件夹，存在移动，否则重命名<td>mv dir1 dir2</tr>\n\t<tr>\t<td>删除文件/空目录<td>rm</tr>\n\t<tr>\t<td>删除非空目录<td>rm -rf dir</tr>\n\t<tr>\t<td>删除空目录<td>rmdir</tr>\n\t<tr>\t<td>复制文件或目录<td>cp file1 file2</tr>\n\t<tr>\t<td>显示文件类型<td>file fileName</tr>\n\t<tr>\t<td>chrome开发者模式<td>option command i</tr>\n\t<tr>\t<td>锁定屏幕<td>control command q</tr>\n\t<tr>  <td>待更新...<td></tr>\n</table>\n","slug":"MAC终端实用命令","published":1,"updated":"2024-01-09T09:21:58.209Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gax000kbiub9mt18lp1","content":"<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<table>\n\t<tr>\t<th>功能<th>命令</tr>\n\t<tr>\t<td>表示用户文件夹位置，等价于/User/用户名<td>~</tr>\n\t<tr>\t<td>表示根目录，即Untitled盘下<td>/</tr>\n\t<tr>\t<td>创建文件<td>touch file.format</tr>\n\t<tr>\t<td>创建目录<td>mkdir dir</tr>\n\t<tr>\t<td>编辑文件/目录<br/>若不存在则创建，输入i或o进入编辑<br/>按esc退出后输入\t\t\t  <br/>:w 保存<br/>:wq 保存并退出<br/>:q! 不保存强制退出<td>vim dir/file</tr>\n\t<tr>\t<td>显示当前目录下的内容<td>ls</tr>\n\t<tr>\t<td>显示当前目录下的详细内容<td>ls -la</tr>\n\t<tr>\t<td>显示当前目录下的内容，包含.开头的文件<td>ls -A</tr>\n\t<tr>\t<td>显示当前的目录路径<td>pwd</tr>\n\t<tr>\t<td>移动目录<td>mvdir dir1 dir2</tr>\n\t<tr>\t<td>移动文件/文件夹，存在移动，否则重命名<td>mv dir1 dir2</tr>\n\t<tr>\t<td>删除文件/空目录<td>rm</tr>\n\t<tr>\t<td>删除非空目录<td>rm -rf dir</tr>\n\t<tr>\t<td>删除空目录<td>rmdir</tr>\n\t<tr>\t<td>复制文件或目录<td>cp file1 file2</tr>\n\t<tr>\t<td>显示文件类型<td>file fileName</tr>\n\t<tr>\t<td>chrome开发者模式<td>option command i</tr>\n\t<tr>\t<td>锁定屏幕<td>control command q</tr>\n\t<tr>  <td>待更新...<td></tr>\n</table>\n","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":"<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<table>\n\t<tr>\t<th>功能<th>命令</tr>\n\t<tr>\t<td>表示用户文件夹位置，等价于/User/用户名<td>~</tr>\n\t<tr>\t<td>表示根目录，即Untitled盘下<td>/</tr>\n\t<tr>\t<td>创建文件<td>touch file.format</tr>\n\t<tr>\t<td>创建目录<td>mkdir dir</tr>\n\t<tr>\t<td>编辑文件/目录<br/>若不存在则创建，输入i或o进入编辑<br/>按esc退出后输入\t\t\t  <br/>:w 保存<br/>:wq 保存并退出<br/>:q! 不保存强制退出<td>vim dir/file</tr>\n\t<tr>\t<td>显示当前目录下的内容<td>ls</tr>\n\t<tr>\t<td>显示当前目录下的详细内容<td>ls -la</tr>\n\t<tr>\t<td>显示当前目录下的内容，包含.开头的文件<td>ls -A</tr>\n\t<tr>\t<td>显示当前的目录路径<td>pwd</tr>\n\t<tr>\t<td>移动目录<td>mvdir dir1 dir2</tr>\n\t<tr>\t<td>移动文件/文件夹，存在移动，否则重命名<td>mv dir1 dir2</tr>\n\t<tr>\t<td>删除文件/空目录<td>rm</tr>\n\t<tr>\t<td>删除非空目录<td>rm -rf dir</tr>\n\t<tr>\t<td>删除空目录<td>rmdir</tr>\n\t<tr>\t<td>复制文件或目录<td>cp file1 file2</tr>\n\t<tr>\t<td>显示文件类型<td>file fileName</tr>\n\t<tr>\t<td>chrome开发者模式<td>option command i</tr>\n\t<tr>\t<td>锁定屏幕<td>control command q</tr>\n\t<tr>  <td>待更新...<td></tr>\n</table>\n"},{"title":"Stable Diffusion WebUI本地部署中遇到的一些错误","abbrlink":"9138967b","date":"2024-01-07T12:57:24.000Z","description":"画个画","_content":"\n进来AI绘画大火，我便尝试在本地部署一下，电脑是M1的MacBook，不过windows应该也差不多。\n参考[官网的方法](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Installation-on-Apple-Silicon)一步步安装，虽然最后成功了，但中途还是有不少问题。\n\n---\n首先安装homebrew，由于我早就已经安装好了，自然也没遇到什么问题。初次安装的朋友若按照homebrew官网的方法安装，很大概率会遇到无法访问的问题，因此这里建议直接使用`/bin/bash -c \"$(curl -fsSL https://gitee.com/ineo6/homebrew-install/raw/master/install.sh)\"`脚本，该脚本出自[知乎的一位大神](https://zhuanlan.zhihu.com/p/341831809)，他在文中详细介绍了更换源等一些列问题。\n\n---\n安装好homebrew后，我们便可以使用它来安装stable-diffusion-webui所需要的环境，执行以下脚本：\n```c\nbrew install cmake protobuf rust python@3.10 git wget\n```\n如果电脑没有git的话，也需要安装git：\n```bash\nbrew install git\n```\n这里主要是安装python3。如果你的电脑有python环境，并且版本不低于3.10，可以不执行此脚本。\n\n---\n接下来需要克隆存储库：\n```bash\ngit clone https://github.com/AUTOMATIC1111/stable-diffusion-webui\n```\n克隆好以后，我们本地就会多出一个stable-diffusion-webui文件夹，这个文件夹下的`models/Stable-diffusion/`文件中，我们要存放一些模型。\n\n---\n克隆好以后，我们就需要下载模型，来到[Hugging face](https://huggingface.co/CompVis/stable-diffusion-v-1-4-original/tree/main)就可以下载一些模型，推荐使用v1.4的，这个版本的模型训练的会多一些，然后将下载好的文件放到上一步提到的目录中。\n\n---\n然后我们需要进入到webUI目录下，执行sh脚本：\n```shell\ncd stable-diffusion-webui\n./webui.sh\n```\n在此之前，我都没有遇到什么问题，但是当我在执行webui.sh脚本的时候，由于这个脚本也是需要安装一些东西的，因此很多问题就发生了。\n首先就是ERROR: Could not find a version that satisfies the requirement torch\\==1.12.1 (from versions: none)\nERROR: No matching distribution found for torch==1.12.1\n![](/img/stablediffusion1.png)\nerror: metadata-generation-failed\n× Encountered error while generating package metadata.\n![](/img/stablediffusion2.png)\n我首先尝试自己安装torch，以及他所需要的依赖文件，都是通过homebrew，但是安装好以后仍然有这个问题。然后我就想到可能是我的python有问题，因为我并不是使用官方提供的脚本安装的python，而是自己使用homebrew安装的。我便将自己安装的python卸载了，然后看了一下电脑是不是还有其他的python，结果发现还真有一个，在usr/bin目录下，这个应该是电脑自带的，版本也符合要求，我便没有自己重新下，就用这个，再次执行sh脚本的时候那个错误就没有再出现。\n\n这里**提醒大家如果后来执行sh脚本出现莫名其妙的错误（上图），可以尝试把自己安装的python卸载掉，用系统自带的就可以，版本也是够用的。**\n\n然后继续安装就出现了各种由于访问github引起的问题：安装gfpgan失败、安装clip失败，这类问题你可以在错误提示里看到无法访问github这样的字样：\n```C\n致命错误：无法访问 'git+https://github.com/openai/CLIP.git/'：The requested URL returned\n致命错误：无法访问 'https://github.com/TencentARC/GFPGAN.git/'：HTTP/2 stream 1 was not \n closed cleanly before end of the underlying stream\n```\n解决方法有很多，你可以换源，也可以使用代理。首先根据错误提示找到具体的文件，定位到`launch.py`这个文件，在看一下具体的url，在前边加上ghproxy代理即可解决问题。\n调整好以后，再运行`./webui.sh`命令就没什么问题了，会一路运行到底。\n\n---\n如果是正常运行，最后他会给你返回一个地址`http://127.0.0.1:7860/`，复制这个地址浏览器打开就可以使用AI绘图了。\n","source":"_posts/Stable-Diffusion-WebUI本地部署中遇到的一些错误.md","raw":"---\ntitle: Stable Diffusion WebUI本地部署中遇到的一些错误\ntags:\n  - AI\n  - homebrew\nabbrlink: 9138967b\ndate: 2024-01-07 20:57:24\ncategories: DIY\ndescription: 画个画\n---\n\n进来AI绘画大火，我便尝试在本地部署一下，电脑是M1的MacBook，不过windows应该也差不多。\n参考[官网的方法](https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Installation-on-Apple-Silicon)一步步安装，虽然最后成功了，但中途还是有不少问题。\n\n---\n首先安装homebrew，由于我早就已经安装好了，自然也没遇到什么问题。初次安装的朋友若按照homebrew官网的方法安装，很大概率会遇到无法访问的问题，因此这里建议直接使用`/bin/bash -c \"$(curl -fsSL https://gitee.com/ineo6/homebrew-install/raw/master/install.sh)\"`脚本，该脚本出自[知乎的一位大神](https://zhuanlan.zhihu.com/p/341831809)，他在文中详细介绍了更换源等一些列问题。\n\n---\n安装好homebrew后，我们便可以使用它来安装stable-diffusion-webui所需要的环境，执行以下脚本：\n```c\nbrew install cmake protobuf rust python@3.10 git wget\n```\n如果电脑没有git的话，也需要安装git：\n```bash\nbrew install git\n```\n这里主要是安装python3。如果你的电脑有python环境，并且版本不低于3.10，可以不执行此脚本。\n\n---\n接下来需要克隆存储库：\n```bash\ngit clone https://github.com/AUTOMATIC1111/stable-diffusion-webui\n```\n克隆好以后，我们本地就会多出一个stable-diffusion-webui文件夹，这个文件夹下的`models/Stable-diffusion/`文件中，我们要存放一些模型。\n\n---\n克隆好以后，我们就需要下载模型，来到[Hugging face](https://huggingface.co/CompVis/stable-diffusion-v-1-4-original/tree/main)就可以下载一些模型，推荐使用v1.4的，这个版本的模型训练的会多一些，然后将下载好的文件放到上一步提到的目录中。\n\n---\n然后我们需要进入到webUI目录下，执行sh脚本：\n```shell\ncd stable-diffusion-webui\n./webui.sh\n```\n在此之前，我都没有遇到什么问题，但是当我在执行webui.sh脚本的时候，由于这个脚本也是需要安装一些东西的，因此很多问题就发生了。\n首先就是ERROR: Could not find a version that satisfies the requirement torch\\==1.12.1 (from versions: none)\nERROR: No matching distribution found for torch==1.12.1\n![](/img/stablediffusion1.png)\nerror: metadata-generation-failed\n× Encountered error while generating package metadata.\n![](/img/stablediffusion2.png)\n我首先尝试自己安装torch，以及他所需要的依赖文件，都是通过homebrew，但是安装好以后仍然有这个问题。然后我就想到可能是我的python有问题，因为我并不是使用官方提供的脚本安装的python，而是自己使用homebrew安装的。我便将自己安装的python卸载了，然后看了一下电脑是不是还有其他的python，结果发现还真有一个，在usr/bin目录下，这个应该是电脑自带的，版本也符合要求，我便没有自己重新下，就用这个，再次执行sh脚本的时候那个错误就没有再出现。\n\n这里**提醒大家如果后来执行sh脚本出现莫名其妙的错误（上图），可以尝试把自己安装的python卸载掉，用系统自带的就可以，版本也是够用的。**\n\n然后继续安装就出现了各种由于访问github引起的问题：安装gfpgan失败、安装clip失败，这类问题你可以在错误提示里看到无法访问github这样的字样：\n```C\n致命错误：无法访问 'git+https://github.com/openai/CLIP.git/'：The requested URL returned\n致命错误：无法访问 'https://github.com/TencentARC/GFPGAN.git/'：HTTP/2 stream 1 was not \n closed cleanly before end of the underlying stream\n```\n解决方法有很多，你可以换源，也可以使用代理。首先根据错误提示找到具体的文件，定位到`launch.py`这个文件，在看一下具体的url，在前边加上ghproxy代理即可解决问题。\n调整好以后，再运行`./webui.sh`命令就没什么问题了，会一路运行到底。\n\n---\n如果是正常运行，最后他会给你返回一个地址`http://127.0.0.1:7860/`，复制这个地址浏览器打开就可以使用AI绘图了。\n","slug":"Stable-Diffusion-WebUI本地部署中遇到的一些错误","published":1,"updated":"2024-01-09T09:24:59.511Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gax000lbiub3neae091","content":"<p>进来AI绘画大火，我便尝试在本地部署一下，电脑是M1的MacBook，不过windows应该也差不多。<br>\n参考<a href=\"https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Installation-on-Apple-Silicon\">官网的方法</a>一步步安装，虽然最后成功了，但中途还是有不少问题。</p>\n<hr>\n<p>首先安装homebrew，由于我早就已经安装好了，自然也没遇到什么问题。初次安装的朋友若按照homebrew官网的方法安装，很大概率会遇到无法访问的问题，因此这里建议直接使用<code>/bin/bash -c &quot;$(curl -fsSL https://gitee.com/ineo6/homebrew-install/raw/master/install.sh)&quot;</code>脚本，该脚本出自<a href=\"https://zhuanlan.zhihu.com/p/341831809\">知乎的一位大神</a>，他在文中详细介绍了更换源等一些列问题。</p>\n<hr>\n<p>安装好homebrew后，我们便可以使用它来安装stable-diffusion-webui所需要的环境，执行以下脚本：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install cmake protobuf rust python@<span class=\"number\">3.10</span> git wget</span><br></pre></td></tr></table></figure>\n<p>如果电脑没有git的话，也需要安装git：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install git</span><br></pre></td></tr></table></figure>\n<p>这里主要是安装python3。如果你的电脑有python环境，并且版本不低于3.10，可以不执行此脚本。</p>\n<hr>\n<p>接下来需要克隆存储库：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/AUTOMATIC1111/stable-diffusion-webui</span><br></pre></td></tr></table></figure>\n<p>克隆好以后，我们本地就会多出一个stable-diffusion-webui文件夹，这个文件夹下的<code>models/Stable-diffusion/</code>文件中，我们要存放一些模型。</p>\n<hr>\n<p>克隆好以后，我们就需要下载模型，来到<a href=\"https://huggingface.co/CompVis/stable-diffusion-v-1-4-original/tree/main\">Hugging face</a>就可以下载一些模型，推荐使用v1.4的，这个版本的模型训练的会多一些，然后将下载好的文件放到上一步提到的目录中。</p>\n<hr>\n<p>然后我们需要进入到webUI目录下，执行sh脚本：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd stable-diffusion-webui</span><br><span class=\"line\">./webui.sh</span><br></pre></td></tr></table></figure>\n<p>在此之前，我都没有遇到什么问题，但是当我在执行webui.sh脚本的时候，由于这个脚本也是需要安装一些东西的，因此很多问题就发生了。<br>\n首先就是ERROR: Could not find a version that satisfies the requirement torch==1.12.1 (from versions: none)<br>\nERROR: No matching distribution found for torch==1.12.1<br>\n<img src=\"/img/stablediffusion1.png\" alt=\"\"><br>\nerror: metadata-generation-failed<br>\n× Encountered error while generating package metadata.<br>\n<img src=\"/img/stablediffusion2.png\" alt=\"\"><br>\n我首先尝试自己安装torch，以及他所需要的依赖文件，都是通过homebrew，但是安装好以后仍然有这个问题。然后我就想到可能是我的python有问题，因为我并不是使用官方提供的脚本安装的python，而是自己使用homebrew安装的。我便将自己安装的python卸载了，然后看了一下电脑是不是还有其他的python，结果发现还真有一个，在usr/bin目录下，这个应该是电脑自带的，版本也符合要求，我便没有自己重新下，就用这个，再次执行sh脚本的时候那个错误就没有再出现。</p>\n<p>这里<strong>提醒大家如果后来执行sh脚本出现莫名其妙的错误（上图），可以尝试把自己安装的python卸载掉，用系统自带的就可以，版本也是够用的。</strong></p>\n<p>然后继续安装就出现了各种由于访问github引起的问题：安装gfpgan失败、安装clip失败，这类问题你可以在错误提示里看到无法访问github这样的字样：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">致命错误：无法访问 <span class=\"string\">&#x27;git+https://github.com/openai/CLIP.git/&#x27;</span>：The requested URL returned</span><br><span class=\"line\">致命错误：无法访问 <span class=\"string\">&#x27;https://github.com/TencentARC/GFPGAN.git/&#x27;</span>：HTTP/<span class=\"number\">2</span> stream <span class=\"number\">1</span> was not </span><br><span class=\"line\"> closed cleanly before end of the underlying stream</span><br></pre></td></tr></table></figure>\n<p>解决方法有很多，你可以换源，也可以使用代理。首先根据错误提示找到具体的文件，定位到<code>launch.py</code>这个文件，在看一下具体的url，在前边加上ghproxy代理即可解决问题。<br>\n调整好以后，再运行<code>./webui.sh</code>命令就没什么问题了，会一路运行到底。</p>\n<hr>\n<p>如果是正常运行，最后他会给你返回一个地址<code>http://127.0.0.1:7860/</code>，复制这个地址浏览器打开就可以使用AI绘图了。</p>\n","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":"<p>进来AI绘画大火，我便尝试在本地部署一下，电脑是M1的MacBook，不过windows应该也差不多。<br>\n参考<a href=\"https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Installation-on-Apple-Silicon\">官网的方法</a>一步步安装，虽然最后成功了，但中途还是有不少问题。</p>\n<hr>\n<p>首先安装homebrew，由于我早就已经安装好了，自然也没遇到什么问题。初次安装的朋友若按照homebrew官网的方法安装，很大概率会遇到无法访问的问题，因此这里建议直接使用<code>/bin/bash -c &quot;$(curl -fsSL https://gitee.com/ineo6/homebrew-install/raw/master/install.sh)&quot;</code>脚本，该脚本出自<a href=\"https://zhuanlan.zhihu.com/p/341831809\">知乎的一位大神</a>，他在文中详细介绍了更换源等一些列问题。</p>\n<hr>\n<p>安装好homebrew后，我们便可以使用它来安装stable-diffusion-webui所需要的环境，执行以下脚本：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install cmake protobuf rust python@<span class=\"number\">3.10</span> git wget</span><br></pre></td></tr></table></figure>\n<p>如果电脑没有git的话，也需要安装git：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install git</span><br></pre></td></tr></table></figure>\n<p>这里主要是安装python3。如果你的电脑有python环境，并且版本不低于3.10，可以不执行此脚本。</p>\n<hr>\n<p>接下来需要克隆存储库：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/AUTOMATIC1111/stable-diffusion-webui</span><br></pre></td></tr></table></figure>\n<p>克隆好以后，我们本地就会多出一个stable-diffusion-webui文件夹，这个文件夹下的<code>models/Stable-diffusion/</code>文件中，我们要存放一些模型。</p>\n<hr>\n<p>克隆好以后，我们就需要下载模型，来到<a href=\"https://huggingface.co/CompVis/stable-diffusion-v-1-4-original/tree/main\">Hugging face</a>就可以下载一些模型，推荐使用v1.4的，这个版本的模型训练的会多一些，然后将下载好的文件放到上一步提到的目录中。</p>\n<hr>\n<p>然后我们需要进入到webUI目录下，执行sh脚本：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd stable-diffusion-webui</span><br><span class=\"line\">./webui.sh</span><br></pre></td></tr></table></figure>\n<p>在此之前，我都没有遇到什么问题，但是当我在执行webui.sh脚本的时候，由于这个脚本也是需要安装一些东西的，因此很多问题就发生了。<br>\n首先就是ERROR: Could not find a version that satisfies the requirement torch==1.12.1 (from versions: none)<br>\nERROR: No matching distribution found for torch==1.12.1<br>\n<img src=\"/img/stablediffusion1.png\" alt=\"\"><br>\nerror: metadata-generation-failed<br>\n× Encountered error while generating package metadata.<br>\n<img src=\"/img/stablediffusion2.png\" alt=\"\"><br>\n我首先尝试自己安装torch，以及他所需要的依赖文件，都是通过homebrew，但是安装好以后仍然有这个问题。然后我就想到可能是我的python有问题，因为我并不是使用官方提供的脚本安装的python，而是自己使用homebrew安装的。我便将自己安装的python卸载了，然后看了一下电脑是不是还有其他的python，结果发现还真有一个，在usr/bin目录下，这个应该是电脑自带的，版本也符合要求，我便没有自己重新下，就用这个，再次执行sh脚本的时候那个错误就没有再出现。</p>\n<p>这里<strong>提醒大家如果后来执行sh脚本出现莫名其妙的错误（上图），可以尝试把自己安装的python卸载掉，用系统自带的就可以，版本也是够用的。</strong></p>\n<p>然后继续安装就出现了各种由于访问github引起的问题：安装gfpgan失败、安装clip失败，这类问题你可以在错误提示里看到无法访问github这样的字样：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">致命错误：无法访问 <span class=\"string\">&#x27;git+https://github.com/openai/CLIP.git/&#x27;</span>：The requested URL returned</span><br><span class=\"line\">致命错误：无法访问 <span class=\"string\">&#x27;https://github.com/TencentARC/GFPGAN.git/&#x27;</span>：HTTP/<span class=\"number\">2</span> stream <span class=\"number\">1</span> was not </span><br><span class=\"line\"> closed cleanly before end of the underlying stream</span><br></pre></td></tr></table></figure>\n<p>解决方法有很多，你可以换源，也可以使用代理。首先根据错误提示找到具体的文件，定位到<code>launch.py</code>这个文件，在看一下具体的url，在前边加上ghproxy代理即可解决问题。<br>\n调整好以后，再运行<code>./webui.sh</code>命令就没什么问题了，会一路运行到底。</p>\n<hr>\n<p>如果是正常运行，最后他会给你返回一个地址<code>http://127.0.0.1:7860/</code>，复制这个地址浏览器打开就可以使用AI绘图了。</p>\n"},{"title":"supervised learning","abbrlink":"acf03113","date":"2024-01-08T03:12:34.000Z","description":"something about supervised learning","_content":"\n同一系列的[神经网络](https://b-white07.github.io/posts/1ca572.html)和[无监督学习](https://b-white07.github.io/posts/9915f4c8.html)相关笔记点击查看\n\n# 机器学习两种常见算法\n\n## 监督学习Supervised Learning\n\n监督学习的目的是根据给定的数据集，来预测某一个想知道的结果，而数据集中的每一个数据都是有对应结果的。来看两个例子：\n\n- 在预测房价的数据集中，保存着如100平米的房子的售价是1000万元、300平米的房子的售价是2500万元这样的信息。这里我们想知到的结果就是x平米的房子能卖多少钱，比如我们输入200，希望得到一个价格。\n\n- 在乳腺癌的数据集中，记录着如肿瘤大小为0.75mm是恶性的、肿瘤大小为0.01mm是良性的这种信息。这里我们想知道结果就是一个x大小的肿瘤是否为良性，比我我们输入0.45，希望他告诉我们是良性还是恶性。\n\n### 回归问题Regression\n\n在上述第一个举例中，我们要预测的房价其实是一种**连续值**，可以从几百万到几千万不等。***回归问题***就是针对这种***连续值问题***。\n\n### 分类问题Classification\n\n在上述第二个举例中，我们要判断的是一个肿瘤是否为良性，只可能有两种结果，要么是良性，要么不是良性，明显这是一个**离散值**。***分类问题***解决的就是这种***离散值问题***。\n\n## 无监督学习Unsupervised Learning\n\n无监督学习的目的是分析给定的数据集，寻找数据集中各数据的关系而不是想要得到一个结果。\n\n比如监督学习中预测房价的例子，监督学习做的是根据数据集中的房子大小这一特征来预测某一大小房子的价格。\n\n而在无监督学习中，房子大小和房子价格都会作为房子的特征，来分析房子之间的关系。比如他也许会将房子面积很大价格很高的那些房子归为一类，将房子面积很小但价格很高又归为一类等等.\n\n下面是Google news的一部分，可以看到新闻被分为了很多类别，这也许就可以用无监督学习分析每个新闻的特征，将特征相似的新闻归为一类：\n\n![google news](/img/googlenews.png)\n\n\n\n#  线性回归模型\n\n## 单变量线性回归\n\n先介绍几个符号以便说明：\n\nm：训练样本的数量\n\nx：输入变量（或特征）\n\ny：输出变量（或目标变量）\n\n### hypothesis函数\n\n单变量线性回归模型中，我们的目标是找到一条线性的hypothesis函数$f_{w,b}(x)= wx + b$来拟合数据集中的数据，这样输入一个变量就能得到估计的结果。将数据集作为样本，通过学习算法的训练，就可以得到$w、b$，这样也就得到了目标函数。对于该函数，我们自然希望得到使误差尽可能小的$w、b$，因此我们又引入了代价函数来计算$f_{w,b}(x)$的误差。\n\n### cost function代价函数\n\n可以选取均方误差函数$J(\\vec{w},b) = \\frac{1}{2m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})^2}$，我们的目标就是求得$b和w$，使该函数的值最小。其中$f_{\\vec{w},b} (\\vec{x}^{(i)})$是输入第i个样本得到的估计值，$y^{(i)}$是第i个样本的实际值。比如样本为(1,1)、(2,2)、(3,3),$f_{\\vec{w},b}(\\vec{x})=0.5x$,即$b=0,w=0.5$.如图所示：\n\n![](/img/costfun.png)\n\n则$J(\\vec{w},b) = \\frac{1}{2m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})^2}\\approx 0.58$\n\n当然，不难看出当$w=1、b=0$时，$J(\\vec{w},b) = 0$,此时便找到了我们所需要的$b 、 w$.\n\n---\n\n上边的情况实际上我所选择的样本可以使$b=0$,相当于只有$w$一个参数，简化了问题。下面讨论一下更为实际的线性回归即两个参数都可以为任意值。\n\n此时不难发现，$J(\\vec{w},b)$是关于$w、b$的二元函数。为了方便描述，可以使用等高线来绘制$J(\\vec{w},b)$.下图所示为一组$J(\\vec{w},b)$和$f_{\\vec{w},b}(\\vec{x})$\n\n![](/img/hxjtheta.png)\n\n等高线各椭圆的中心是我们的目标，此时我们得到的点（右图的红叉❌）很明显举例目标还有一段距离，因此反映在左图中，得到的假设函数与数据集的拟合程度肉眼可见的差。此时便需要重新计算$w、b$的值以生成更优秀的假设函数。一种比较常见的算法就是梯度下降算法。\n\n### Gradient descent梯度下降算法\n\n使用梯度下降算法可以一次次迭代，最终找到可以使得$J(\\vec{w},b)$最小的$w、b$.梯度下降算法可以应用于更一般的$J(w_1,w_2,...,w_n,b)$函数，而不是仅仅能应用于线性回归的代价函数。\n\n单变量梯度下降算法描述如下：\n\n$repeat\\quad until\\quad  convergence \\quad\\{$\n\n$\\quad\\quad w=w-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial w}$\n$\\quad\\quad b=b -\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial b}$\n\n$\\}$\n\n其中$\\alpha$为学习速率，反映了每次迭代时，$w、b$变化的跨度，不宜太大也不宜太小; 对于一个固定不变的$\\alpha$,由于偏导数是越来越小的，因此$w、b$的变化也会越来越小，最后收敛。\n\n另外再仔细观察一下该算法和$J(\\vec{w},b)$会发现一个事实：由于$J(\\vec{w},b)$是对m个样本的某种运算的求和形式，因此此处的偏导数也是一种求和形式，因此每次***更新参数都遍历了整个样本***，这种形式梯度下降可以叫做Batch gradient descent即批量梯度下降。还有两种方法是：1.每次迭代只采集一个样本，计算该样本损失函数的梯度并更新参数，这种方式叫随机梯度下降。当经过足够多迭代后，随机梯度下降也会收敛到全局最优。2.每次迭代选取一小部分训练样本，他是批量梯度下降和随机梯度下降的这种方法，叫**小批量梯度下降**，是现在常用的一种方法。\n\n$w、b$初值可以都取为0，当然这不是固定的，根据具体情况可以灵活调整。但有一点要格外注意：***二者要同时变化而不能先变一个，另一个再变***：\n\n\n\nCorrect:\n\n$temp\\_w=w-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial w}$\n\n$temp\\_b=b-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial b}$\n\n$w=temp\\_w$\n\n$b=temp\\_b$\n\n\n\nIncorrect:\n\n$temp\\_w=w-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial w}$\n\n$w=temp\\_w$\n\n$temp\\_b=b-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial b}$\n\n$b=temp\\_b$\n\n\n\n对于一般的代价函数，其形状不一定是图函数，因此对于不同的起点，可能找到不同的局部最优点：\n\n![case1](/img/gradientdescent1.png)\n\n![case2](/img/gradientdescent2.png)\n\n尽管起点相差很小，但最终得到的代价函数完全不一样。\n\n---\n\n将该算法应用到线性回归模型中：\n\n说明一点：线性回归的代价函数总是一个凸函数，因此他不会出现一般代价函数的局部最优的情况，他总会收敛到全局最优。\n\n$f_{\\vec{w},b}(\\vec{x})=\\vec{w} \\vec{x}+b$\n\n$J(\\vec{w},b) = \\frac{1}{2m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})^2}$\n\n$w:\\frac{\\partial J(\\vec{w},b)}{\\partial w}=\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}}$\n\n$b:\\frac{\\partial J(\\vec{w},b)}{\\partial b}=\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})}$\n\n\n\n\n\nGradient descent algorithm:\n\n$repeat\\quad until\\quad  convergence\\quad \\{$\n\n$\\quad\\quad w=w-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}}$\n\n$\\quad\\quad b=b-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})}$\n\n$\\}$\n\n![gradient descent](/img/gradientdescent.gif)\n\n这样就得到了一条拟合程度还不错的假设函数。\n\n## 多变量线性回归\n\n### 向量化多特征\n\n实际情况往往不仅含一个特征，比如房价的预测不仅仅和房子大小有关，也和楼层、层高、位置等有关，此时就会出现多个特征。而要对多个特征逐一使用梯度下降算法的话，不仅代码冗长，且运算速度慢。为了解决这个问题，可以将多个特征记为向量$\\vec{x}=(x_1,x_2,...,x_n)$.此时可以将假设函数记为$f_{\\vec{w},b}(\\vec{x})=\\vec{w}  \\cdot  \\vec{x}+b.$NumPy为向量运算提供了的方法，可以并行让硬件工作以加速运算。\n\n```python\ndef my_dot(a, b): \n    \"\"\"\n   Compute the dot product of two vectors\n \n    Args:\n      a (ndarray (n,)):  input vector \n      b (ndarray (n,)):  input vector with same dimension as a\n    \n    Returns:\n      x (scalar): \n    \"\"\"\n    x=0\n    for i in range(a.shape[0]):\n        x = x + a[i] * b[i]\n    return x\n  \nnp.random.seed(1)\na = np.random.rand(10000000)  # very large arrays\nb = np.random.rand(10000000)\n\ntic = time.time()  # capture start time\nc = np.dot(a, b)\ntoc = time.time()  # capture end time\n\nprint(f\"np.dot(a, b) =  {c:.4f}\")\nprint(f\"Vectorized version duration: {1000*(toc-tic):.4f} ms \")\n\ntic = time.time()  # capture start time\nc = my_dot(a,b)\ntoc = time.time()  # capture end time\n\nprint(f\"my_dot(a, b) =  {c:.4f}\")\nprint(f\"loop version duration: {1000*(toc-tic):.4f} ms \")\n\ndel(a);del(b)  #remove these big arrays from memory\n```\n\n```python\n# result\nnp.dot(a, b) =  2501072.5817\nVectorized version duration: 13.3328 ms \nmy_dot(a, b) =  2501072.5817\nloop version duration: 1374.0389 ms \n```\n\n可以看出，本例中运算速度相差了100倍左右。\n\n### Normal equation正规方程求解w、b\n\n 在说明多特征值线性回归梯度下降算法之前，介绍一种快速求解**线性回归问题**中w、b的方法：正规方程法。相较于梯度下降算法，正规方程有以下下局限性：\n\n- 只能应用于线性回归\n- 特征数量很多时，效率较低\n\n同时也有一些优点：\n\n- 不需要设置学习率$\\alpha$\n- 不需要迭代，对于规模较小的特征，有不错的效率\n\n具体实现，留白，有空回来补\n\n### 多特征线性回归梯度下降算法\n\n和单特征线性回归梯度下降算法相似，只不过多了几个特征而已：\n\n$repeat\\quad until\\quad  convergence \\quad\\{$\n\n$\\quad\\quad w_1=w_1-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}_1}$\n\n$\\quad\\quad w_2=w_2-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}_2}$\n\n$\\quad\\quad\\quad \\vdots$ \n\n$\\quad\\quad w_n=w_n-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}_n}$\n\n$\\quad\\quad b=b -\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})}$\n\n$\\}$\n\n### 特征缩放\n\n当多个特征的取值范围相差很大时，梯度下降算法运行的很慢，此时需要将多个特征值缩放到一个相近的范围内，同时保证这个范围不要太大像-100-100，或者太小像-0.0001-0.0001.\n\n比如现在有两个特征房子的大小$300\\leqslant x_1 \\leqslant1000$和房子的层高$0\\leqslant x_2\\leqslant6$，此时两个特征的范围相差较大，需要对特征进行放缩以得到更好的梯度下降效果。\n\n![origin](/img/origin.png)\n\n#### 除以最大值\n\n比较简单的一个方法，就是将各特征除以该特征的最大值，这样就可以得到的新特征的范围便可以满足要求。$x_1$和$x_2$进行该操作后，范围变成了$0.3\\leqslant x_{1,scaled} \\leqslant1$、$0\\leqslant x_{2,scaled} \\leqslant 1$，此时就可以很好的运行梯度下降算法。\n\n![divideMax](/img/divideMax.png)\n\n#### Mean normalization\n\n均值归一化首先要计算每个特征的平均值$\\mu_i$,然后将原特征$x_i$放缩为$x_{i,scaled}=\\frac{x_i - \\mu_i}{Max-Min}$,$Max、Min$分别为原特征的最大和最小值。即使原特征都为正，均值归一化后的特征也会出现负数，且分布在原点附近。\n\n![meannormalization](/img/meannormalization.png)\n\n#### Z-score normalize\n\nZ-score归一化首先要计算每个特征的平均值$\\mu_i$和标准差$\\sigma_i$,然后将原特征$x_i$放缩为$x_{i,scaled}=\\frac{x_i-\\mu_i}{\\sigma_i}$.同样的，可以看出，归一化后的特征也会出现正负。\n\n![Znormalization](/img/Znormalization.png)\n\n---\n\n下面举个例子判断一下某个特征是否需要rescale:\n\n$0\\leqslant x_1\\leqslant3、-2\\leqslant x_2\\leqslant0.5、-100\\leqslant x_3\\leqslant100、-0.001\\leqslant x_1\\leqslant0.001、98.6\\leqslant x_1\\leqslant105$\n\n简单判断一下，其实$x_1、x_2$范围相差不太，且范围跨度合理，不需要rescale.而$x_3、x_4、x_5$要么太大，要么太小，因此需要放缩一下，向$x_1、x_2$看齐。\n\n如果一个特征的范围比较暧昧，对他进行放缩就可以，因为放缩到合适的尺度不会对算法有什么负面效果。\n\n### 判断梯度下降是否收敛\n\n一个方法是可以观察y轴为$J(\\vec{w},b)$、x轴为迭代次数的图像，通过斜率可以大概判断是否收敛：\n\n![](/img/converge.png)\n\n当迭代次数达到400时，斜率几乎为0，此时便可以判断出函数$J(\\vec{w},b)$已经收敛。\n\n---\n\n另一个方法是自动收敛测试，该方法需要选择一个合适的$\\varepsilon$,当在某一次迭代中，$J(\\vec{w},b)$的值小于$\\varepsilon$时，则认为此时的$\\vec{w},b$可以是算法收敛。但是寻找合适的$\\varepsilon$值不是容易的事情，因此第一种方法可能更常用。\n\n### 学习率的设置\n\n直观来讲，学习率是一个影响代价参数$\\vec{w},b$变化幅度的量，因此学习率的设置不宜过大也不宜过小。若过大可能会导致得到的新参数使$J(\\vec{w},b)$每次都越过最小值点，进而使该函数发散。若学习率过小，则会使函数$J(\\vec{w},b)$收敛的太慢了。要注意的是，合理的学习率总能使函数$J(\\vec{w},b)$随迭代次数单调递减，若出现了下图上边的两种情况，要么是学习率设置太大了，要么是程序代码出现了Bug.\n\n![学习率](/img/学习率.png)\n\n通常可以依次尝试这几个学习率：0.001、0.003、0.01、0.03、0.1、0.3、1、...\n\n即从0.001开始，每次扩大大约3倍，或者缩小3倍左右。\n\n这样一次次尝试后，可以找到一个最大值和一个最小值，为了使收敛的速度更快一些，可以选择比找到的最大值小一些的可以使$J(\\vec{w},b)$收敛的$\\alpha$值。\n\n### 特征工程\n\n特征工程就是将原本的一些特征进行组合，得到一些新的特征，这样也许可以使模型更加精准。\n\n如原数据集中有房子的长和宽两个特征$x_1、x_2$,此时的房价预测模型可以是$f_{\\vec{w},b}(\\vec{x})=w_1x_1+w_2x_2+b$.\n\n现在我们可以让$x_3=x_1 \\times x_2$,这样就可以得到一个新的模型$f_{\\vec{w},b}(\\vec{x})=w_1x_1+w_2x_2+w_3x_3+b$.\n\n### 多项式回归\n\n线性回归中我们使用线性函数来拟合数据集，多项是回归中，我们可以使用非线性的函数来拟合数据集。\n\n![polyregression](/img/polyregression.png)\n\n如图，这个数据集如果用线性函数来拟合的话，很明显不太合适。可以选择$f_{\\vec{w},b}(x)=w_1x+w_2 \\sqrt{x}+b$.这其实也用到了特征工程，因为我们对原始的特征取了根号。\n\n需要注意的是，在使用多项式回归的时候，不同的特征范围的差别可能很大，比如对同一特征的平方和立方，这是要记得使用特征缩放让他们处于一个相对合理的范围。\n\n# 逻辑回归模型\n\n逻辑回归模型可用于**二元分类问题**，其形式为$f_{\\vec{w},b}(\\vec{x}) = g(z) = \\frac{1}{1+e^{-z}},$其中$z=\\vec{w}  \\cdot  \\vec{x}+b$.不难看出$\\displaystyle \\lim_{z \\to -\\infin} g(z) = 0,\\displaystyle \\lim_{z \\to +\\infin} g(z) = 1$,即该函数的输出值$\\hat{y}$在零和一之间，因此可以用于表示**某事件发生的概率**，则$P(y=1|x;\\vec{w},b)+P(y=0|x;\\vec{w},b)=1.$\n\n<img src=\"/img/sigomid.png\" alt=\"sigomid\" style=\"zoom:50%;\" />\n\n我们可以设置一个threshold=0.5,当$0<g(z)<0.5$时$\\hat{y} = 0$，当$0.5 \\le g(z)<1$时$\\hat{y} = 1$.\n\n可以看出当$z=0$时，$g(z)=0.5$.而$z=\\vec{w}  \\cdot  \\vec{x}+b=0$这条线称之为***决策边界***。和线性回归一样，$\\vec{w},\\vec{x}$可以是线性组合，也可以是多项式，因此决策边界也可以是线性或者非线性。它的作用就是区分出模型预测出的结果，即决策边界的两侧代表着不同的预测结果。如下图两种不同的决策边界：\n\n<img src=\"/img/decisionboundaryline.png\" alt=\"decisionboundaryline\" style=\"zoom:40%;\" />\n\n<img src=\"/img/decision boundarylog.png\" alt=\"decision boundarylog\" style=\"zoom:40%;\" />\n\n下面以肿瘤为例看一下为什么对于二元分类问题，线性回归模型不能解决：\n\n<img src=\"/img/linearmodel1.png\" alt=\"linearmodel1\" style=\"zoom:40%;\" />\n\n<img src=\"/img/linearmodel2.png\" alt=\"linearmodel2\" style=\"zoom:40%;\" />\n\n对比以上两幅图片不难看出，若肿瘤大小分别在较小处和较大处的聚集，线性回归对于肿瘤性质的判断会出现越来越大的误差，这显然是不正确的。而逻辑回归模型则可以解决这一问题：\n\n<img src=\"/img/logistic1.png\" alt=\"logistic1\" style=\"zoom:50%;\" />\n\n<img src=\"/img/logistic2.png\" alt=\"logistic2\" style=\"zoom:50%;\" />\n\n可以看出，逻辑回归模型在两端数据聚集时的表现仍然出色。\n\n## 代价函数\n\n线性回归中使用平方误差函数$J(\\vec{w},b) = \\frac{1}{2m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})^2}$作为代价函数。对于线性回归，该函数总是严格的凸函数，因此总会找到是该函数收敛到全局最低的w、b.而逻辑回归中若使用该函数作为代价函数，会发现其图像并不是严格的凸函数，也就无法找到w、b使其收敛到全局最小值，因此需要使用其他函数作为代价函数。\n\n<img src=\"/img/costfunvs.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n\n\n逻辑回归中的代价函数为$J(\\vec{w},b) = \\frac{1}{m} \\sum_{i=0}^{m-1} \\left[ loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)}) \\right]$,其中\n\n$loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)}) = \\left\\{\\begin{matrix}\n -\\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right), & if \\quad y^{(i)}=1\\\\\n -\\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right), & if \\quad  y^{(i)}=0\\\\\n\\end{matrix}\\right.$\n\n可化简为：\n\n$$loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)}) = -y^{(i)} \\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right)$$\n\n$loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)})$表示单个样本的误差（代价函数$J()$则需要遍历整个样本），不要忘记$0 \\le f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\le 1$,其图像如下：\n\n<img src=\"/img/loss1.png\" alt=\"loss1\" style=\"zoom:50%;\" />\n\n<img src=\"/img/loss0.png\" alt=\"loss0\" style=\"zoom:50%;\" />\n\n可以看出：\n\n- $if \\quad y=1$\n\n  - 若$f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow1,loss() \\rightarrow0$,即损失很小，说明预测结果准确\n\n  - 若$f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 0,loss() \\rightarrow \\infin$,即损失很大，说明预测结果不准确\n\n  而此时$y=1$表明恶性肿瘤，这与这与损失很小的情况即$f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 1$预测的结果相吻合。\n\n- $if \\quad y=0$\n\n  - 若$f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 0,loss() \\rightarrow 0$,即损失很小，说明预测结果准确\n\n  - 若$f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 1,loss() \\rightarrow \\infin$,即损失很大，说明预测结果不准确\n\n  而此时$y=0$表明是良性肿瘤，这与损失很小的情况即$f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 0$预测的结果相吻合。\n\n别忘记了代价函数是要寻找参数$\\vec{w}、b,$当$loss() \\rightarrow \\infin$时说明此时的$\\vec{w}、b$并不合适，接下来就可以利用梯度下降迭代寻找$\\vec{w}、b.$\n\n对了还有一点需要指出，高等数学中常用$ln$表示底数为$e$的对数函数，但是此处的$log$实际上也是底数为$e$,不过没有采用前边的写法。\n\n## 梯度下降\n\n算法的原理与线性回归类似，只不过由于预测函数和代价函数都不一样：\n\n$$\\begin{align*}\n&\\text{repeat until convergence:} \\; \\lbrace \\\\\n&  \\; \\; \\;w_j = w_j -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial w_j}  \\; & \\text{for j = 0,...,n-1} \\\\ \n&  \\; \\; \\;  \\; \\;b = b -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial b} \\\\\n&\\rbrace\n\\end{align*}$$\n\n其中：\n\n$$\\begin{align*}\n\\frac{\\partial J(\\vec{w},b)}{\\partial w_j}  &= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)} \\\\\n\\frac{\\partial J(\\vec{w},b)}{\\partial b}  &= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)}) \n\\end{align*}$$\n\n于是，逻辑回归的梯度下降算法就变成了：\n\n$$\\begin{align*}\n&repeat \\quad until  \\quad convergence: \\; \\lbrace \\\\\n&  \\; \\; \\;w_j = w_j -  \\alpha \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)}  \\; & \\text{for j = 0,...,n-1} \\\\ \n&  \\; \\; \\;  \\; \\;b = b -  \\alpha \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)}) \\\\\n&\\rbrace simultaneous \\quad updates\n\\end{align*}$$\n\n但是经过计算后会发现，即使代价函数不一样，但是对于$\\vec{w}、b$的偏导数计算后的形式还是与线性回归一样的，让我不由得发出感叹，妙啊。这里可能有朋友想要自己动手算一下，我稍微提个醒，注意这里的预测函数与线性回归的预测函数是不一样的，求到的时候别带错模型了，我第一次算的时候就使用线性回归模型带入的，然后发现模型带错了。\n\n$Linear \\quad regression: \\quad f_{\\vec{w},b}(\\vec{x})=\\vec{w}  \\cdot  \\vec{x}+b$\n\n$Logistic \\quad regression:  \\quad f_{\\vec{w},b}(\\vec{x})=\\frac{1}{1+e^{-(\\vec{w} \\cdot  \\vec{x}+b)}}$\n\n## 过拟合\n\n对于预测模型，我们通常希望他能得到较为准确的预测结果，一个方法来提高准确性是通过多项式来拟合数据集。但是如果追求能完美拟合某数据集的模型，该模型往往会出现过拟合的现象。\n\n<div style=\"display: flex; justify-content: space-between;\">\n    <img src=\"/img/x1.png\" alt=\"x1\" style=\"zoom:30%;\" />\n    <img src=\"/img/x2.png\" alt=\"x2\" style=\"zoom:30%;\" />\n</div>\n\n<div style=\"display: flex; justify-content: space-between;\">\n\t\t<img src=\"/img/x3.png\" alt=\"x3\" style=\"zoom:30%;\" />\n    <img src=\"/img/x4.png\" alt=\"x4\" style=\"zoom:30%;\" />\n</div>\n\n上边的四张图片分别代表了4个不同的模型对于同一数据集的拟合情况。可以看到，对于更为复杂的模型，对数据集的拟合程度越好。接下来我会对数据集进行一些改动，然后再次用相同次数的多项式分别对数据集进行拟合。\n\n<div style=\"display: flex; justify-content: space-between;\">\n    <img src=\"/img/x11.png\" alt=\"x11\" style=\"zoom:30%;\" />\n    <img src=\"/img/x22.png\" alt=\"x22\" style=\"zoom:30%;\" />\n</div>\n\n<div style=\"display: flex; justify-content: space-between;\">\n    <img src=\"/img/x33.png\" alt=\"x33\" style=\"zoom:30%;\" />\n    <img src=\"/img/x44.png\" alt=\"x44\" style=\"zoom:30%;\" />\n</div>\n\n可以看出来，在对数据集行进了一些改动后，有两个现象：\n\n- 上边两个较为低次的多项式模型对数据集的拟合程度仍然不如下面两个高次模型\n- 对同一数据集进行微调前后，上边两个低次模型的拟合情况变化并不大；而下边两个高次模型在微调前后的拟合情况相差非常大\n\n这个时候下面两个高次的模型实际上已经出现了**过拟合**的现象。\n\n模型应该随着数据集的变化而变化，但是不应该因为数据集中的某个或某几个样本而发生明显的巨大变化。比如样本有10000个，而仅仅在添加或更改了其中一个样本后，模型前后就发生了巨大的变化，尽管他能完美拟合数据集中的样本，但是该模型其实并不能有效预测一个合理的值。比如在10000个肿瘤的样本中，如果我们的模型是过拟合的，那么很有可能出现这样一种情况：变化之前的模型在拟合数据集后，预测大小0.1的肿瘤是良性的，这个时候又多了一个样本，由于过拟合现象的存在，该模型发生了很大变化，变化后它很有可能预测刚刚那个0.1的肿瘤是恶性的。而没有过拟合现象的模型仍然会认为0.1的肿瘤是良性的。而这对比一下，明显是没有过拟合模型更合理一些。\n\n一些术语：欠拟合underfit<=>高偏差high bias、过拟合overfit<=>高方差high variance\n\n## 解决过拟合\n\n解决过拟合的方法有三种，分别是增加数据集的样本数量、选取和预测结果最相关的特征作为子集训练而不是训练整个数据集、正则化。\n\n- 增加样本数量：局限性比较大，毕竟实际情况中样本的数量不可能想有多少就有多少\n- 特征选择：这么做是为了选择与结果最为相关的特征进行训练，但是可能每一个特征都与预测结果直接相关，选择一个子集就会丢掉一些有用的特征\n- 正则化：如果说特征选择是直接消灭掉不太相关的特征，那么正则化做的就不那么绝对，它会削弱这些不太相关特征的影响，算是一种弱化版的“特征选择”\n\n正则化实现的方法是对代价函数进行改进，在原有的代价函数基础上增加一个正则化项以减小不同特征对于模型的影响，一般来讲只需要将$\\vec{w}$进行正则化而不需要对$b$进行正则化，因为$b$是否正则化对结果影响并不大。所以正则化项往往只有$\\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2$(若想对$b$正则化，相应的添加$\\frac{\\lambda}{2m}b^2$即可).其中$\\lambda$是正则化参数。\n\n---\n\n线性回归的正则化：\n\n$$J(\\vec{w},b) = \\frac{1}{2m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})^2  + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2$$ \n其中：\n$$ f_{\\vec{w},b}(\\vec{x}^{(i)}) = \\vec{w} \\cdot \\vec{x}^{(i)} + b $$ \n\n---\n\n逻辑回归的正则化：\n\n$$J(\\vec{w},b) = \\frac{1}{m}  \\sum_{i=0}^{m-1} \\left[ -y^{(i)} \\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) \\right] + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2$$\n其中：\n$$ f_{\\vec{w},b}(\\vec{x}^{(i)}) = sigmoid(\\vec{w} \\cdot \\vec{x}^{(i)} + b)= \\frac{1}{1+e^{-(\\vec{w} \\cdot \\vec{x} + b)}}$$ \n\n---\n\n对于改进后的代价函数，可以直观的看出$\\lambda$的作用（不要忘记我们的目的是缩小代价函数）：若$\\lambda$过小，那么正则化项对参数$\\vec{w}$的约束作用就不大。不妨想象$\\lambda=0,$此时相当于没有对参数$\\vec{w}$正则化，也就无法有效解决过拟合的问题；若$\\lambda$太大，为了使代价函数尽可能小，参数$\\vec{w}$不得不很小很小，那么参数$b$最终对模型起到了决定性作用，这显然也是不合理的。这样看来$\\lambda$似乎可以理解成正则化项的权重。\n\n\n\n正则化后再进行梯度下降\n\n---\n\n线性回归梯度下降：\n\n$$\\begin{align*}\n&\\text{repeat until convergence:} \\; \\lbrace \\\\\n&  \\; \\; \\;w_j = w_j -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial w_j}   \\; & \\text{for j = 0,...,n-1} \\\\ \n&  \\; \\; \\;  \\; \\;b = b -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial b} \\\\\n&\\rbrace\n\\end{align*}$$\n\n其中：\n\n$$J(\\vec{w},b) = \\frac{1}{2m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})^2  + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2$$ \n\n于是：\n\n$$\\begin{align*}\n\\frac{\\partial J(\\vec{w},b)}{\\partial w_j}  &= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)}  +  \\frac{\\lambda}{m} w_j \\\\\n\\frac{\\partial J(\\vec{w},b)}{\\partial b}  &= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)}) \n\\end{align*}$$\n\n---\n\n逻辑回归梯度下降：\n\n$$\\begin{align*}\n&\\text{repeat until convergence:} \\; \\lbrace \\\\\n&  \\; \\; \\;w_j = w_j -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial w_j}   \\; & \\text{for j = 0,...,n-1} \\\\ \n&  \\; \\; \\;  \\; \\;b = b -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial b} \\\\\n&\\rbrace\n\\end{align*}$$\n\n其中：\n\n$$J(\\vec{w},b) = \\frac{1}{m}  \\sum_{i=0}^{m-1} \\left[ -y^{(i)} \\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) \\right] + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2$$\n\n于是：\n\n$$\\begin{align*}\n\\frac{\\partial J(\\vec{w},b)}{\\partial w_j}  &= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)}  +  \\frac{\\lambda}{m} w_j \\\\\n\\frac{\\partial J(\\vec{w},b)}{\\partial b}  &= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)}) \n\\end{align*}$$\n\n---\n\n同样，而这除了模型不一样，其余地方都是一样的。\n\n\n\n# 一个问题\n\n对正则化后的代价函数运行梯度下降时，对$\\vec{w}$的偏导数进行整理可以得到：\n\n$w_j = w_j -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial w_j} =(1-\\alpha \\frac{\\lambda}{m})w_j- \\alpha \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)}$\n\n吴恩达依据$\\alpha 、\\lambda$都不大，因此$w_j$每次迭代都是乘一个小于1的数，于是每次他都会减小，以此来达到正则化的目的，对此有三个疑问：\n\n第一：学习率$\\alpha$可以很小，因为过大了可能导致不收敛。但是$\\lambda$一定也是一个比较小的值吗？或者说其与m的比值乘$\\alpha$一定小于1吗？\n\n第二：第一项仅仅是一次迭代中的一部分，并没有计算完，还有第二项呢，第二项的正负也没办法确定吧，那每次迭代$w_j$是变大变小不是都有可能吗？\n\n第三：正则化过程中参数$\\vec{w}$不一定要每次减小吧，不是找到一组合适的就可以吗？\n\n有这个问题是因为在没有正则化的梯度下降中，我们的目的是寻找一组合适的而不是最小的$\\vec{w} 、b$使得代价函数最小，而在该过程中只能保证代价函数是递减的，但是没有规定$\\vec{w}、b$的增减变化。为此我也回去看了一下JupyterLab的C1_W1_Lab05_Gradient_Descent_Soln,证实了确实没有这样的规定，所以听到他那么说就有点儿不理解。\n","source":"_posts/ML-Andrew-Ng-0.md","raw":"---\ntitle: supervised learning\ntags:\n  - AI\n  - machine learning\nabbrlink: acf03113\ndate: 2024-01-08 11:12:34\ncategories: Machine Learning\ndescription: something about supervised learning\n---\n\n同一系列的[神经网络](https://b-white07.github.io/posts/1ca572.html)和[无监督学习](https://b-white07.github.io/posts/9915f4c8.html)相关笔记点击查看\n\n# 机器学习两种常见算法\n\n## 监督学习Supervised Learning\n\n监督学习的目的是根据给定的数据集，来预测某一个想知道的结果，而数据集中的每一个数据都是有对应结果的。来看两个例子：\n\n- 在预测房价的数据集中，保存着如100平米的房子的售价是1000万元、300平米的房子的售价是2500万元这样的信息。这里我们想知到的结果就是x平米的房子能卖多少钱，比如我们输入200，希望得到一个价格。\n\n- 在乳腺癌的数据集中，记录着如肿瘤大小为0.75mm是恶性的、肿瘤大小为0.01mm是良性的这种信息。这里我们想知道结果就是一个x大小的肿瘤是否为良性，比我我们输入0.45，希望他告诉我们是良性还是恶性。\n\n### 回归问题Regression\n\n在上述第一个举例中，我们要预测的房价其实是一种**连续值**，可以从几百万到几千万不等。***回归问题***就是针对这种***连续值问题***。\n\n### 分类问题Classification\n\n在上述第二个举例中，我们要判断的是一个肿瘤是否为良性，只可能有两种结果，要么是良性，要么不是良性，明显这是一个**离散值**。***分类问题***解决的就是这种***离散值问题***。\n\n## 无监督学习Unsupervised Learning\n\n无监督学习的目的是分析给定的数据集，寻找数据集中各数据的关系而不是想要得到一个结果。\n\n比如监督学习中预测房价的例子，监督学习做的是根据数据集中的房子大小这一特征来预测某一大小房子的价格。\n\n而在无监督学习中，房子大小和房子价格都会作为房子的特征，来分析房子之间的关系。比如他也许会将房子面积很大价格很高的那些房子归为一类，将房子面积很小但价格很高又归为一类等等.\n\n下面是Google news的一部分，可以看到新闻被分为了很多类别，这也许就可以用无监督学习分析每个新闻的特征，将特征相似的新闻归为一类：\n\n![google news](/img/googlenews.png)\n\n\n\n#  线性回归模型\n\n## 单变量线性回归\n\n先介绍几个符号以便说明：\n\nm：训练样本的数量\n\nx：输入变量（或特征）\n\ny：输出变量（或目标变量）\n\n### hypothesis函数\n\n单变量线性回归模型中，我们的目标是找到一条线性的hypothesis函数$f_{w,b}(x)= wx + b$来拟合数据集中的数据，这样输入一个变量就能得到估计的结果。将数据集作为样本，通过学习算法的训练，就可以得到$w、b$，这样也就得到了目标函数。对于该函数，我们自然希望得到使误差尽可能小的$w、b$，因此我们又引入了代价函数来计算$f_{w,b}(x)$的误差。\n\n### cost function代价函数\n\n可以选取均方误差函数$J(\\vec{w},b) = \\frac{1}{2m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})^2}$，我们的目标就是求得$b和w$，使该函数的值最小。其中$f_{\\vec{w},b} (\\vec{x}^{(i)})$是输入第i个样本得到的估计值，$y^{(i)}$是第i个样本的实际值。比如样本为(1,1)、(2,2)、(3,3),$f_{\\vec{w},b}(\\vec{x})=0.5x$,即$b=0,w=0.5$.如图所示：\n\n![](/img/costfun.png)\n\n则$J(\\vec{w},b) = \\frac{1}{2m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})^2}\\approx 0.58$\n\n当然，不难看出当$w=1、b=0$时，$J(\\vec{w},b) = 0$,此时便找到了我们所需要的$b 、 w$.\n\n---\n\n上边的情况实际上我所选择的样本可以使$b=0$,相当于只有$w$一个参数，简化了问题。下面讨论一下更为实际的线性回归即两个参数都可以为任意值。\n\n此时不难发现，$J(\\vec{w},b)$是关于$w、b$的二元函数。为了方便描述，可以使用等高线来绘制$J(\\vec{w},b)$.下图所示为一组$J(\\vec{w},b)$和$f_{\\vec{w},b}(\\vec{x})$\n\n![](/img/hxjtheta.png)\n\n等高线各椭圆的中心是我们的目标，此时我们得到的点（右图的红叉❌）很明显举例目标还有一段距离，因此反映在左图中，得到的假设函数与数据集的拟合程度肉眼可见的差。此时便需要重新计算$w、b$的值以生成更优秀的假设函数。一种比较常见的算法就是梯度下降算法。\n\n### Gradient descent梯度下降算法\n\n使用梯度下降算法可以一次次迭代，最终找到可以使得$J(\\vec{w},b)$最小的$w、b$.梯度下降算法可以应用于更一般的$J(w_1,w_2,...,w_n,b)$函数，而不是仅仅能应用于线性回归的代价函数。\n\n单变量梯度下降算法描述如下：\n\n$repeat\\quad until\\quad  convergence \\quad\\{$\n\n$\\quad\\quad w=w-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial w}$\n$\\quad\\quad b=b -\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial b}$\n\n$\\}$\n\n其中$\\alpha$为学习速率，反映了每次迭代时，$w、b$变化的跨度，不宜太大也不宜太小; 对于一个固定不变的$\\alpha$,由于偏导数是越来越小的，因此$w、b$的变化也会越来越小，最后收敛。\n\n另外再仔细观察一下该算法和$J(\\vec{w},b)$会发现一个事实：由于$J(\\vec{w},b)$是对m个样本的某种运算的求和形式，因此此处的偏导数也是一种求和形式，因此每次***更新参数都遍历了整个样本***，这种形式梯度下降可以叫做Batch gradient descent即批量梯度下降。还有两种方法是：1.每次迭代只采集一个样本，计算该样本损失函数的梯度并更新参数，这种方式叫随机梯度下降。当经过足够多迭代后，随机梯度下降也会收敛到全局最优。2.每次迭代选取一小部分训练样本，他是批量梯度下降和随机梯度下降的这种方法，叫**小批量梯度下降**，是现在常用的一种方法。\n\n$w、b$初值可以都取为0，当然这不是固定的，根据具体情况可以灵活调整。但有一点要格外注意：***二者要同时变化而不能先变一个，另一个再变***：\n\n\n\nCorrect:\n\n$temp\\_w=w-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial w}$\n\n$temp\\_b=b-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial b}$\n\n$w=temp\\_w$\n\n$b=temp\\_b$\n\n\n\nIncorrect:\n\n$temp\\_w=w-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial w}$\n\n$w=temp\\_w$\n\n$temp\\_b=b-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial b}$\n\n$b=temp\\_b$\n\n\n\n对于一般的代价函数，其形状不一定是图函数，因此对于不同的起点，可能找到不同的局部最优点：\n\n![case1](/img/gradientdescent1.png)\n\n![case2](/img/gradientdescent2.png)\n\n尽管起点相差很小，但最终得到的代价函数完全不一样。\n\n---\n\n将该算法应用到线性回归模型中：\n\n说明一点：线性回归的代价函数总是一个凸函数，因此他不会出现一般代价函数的局部最优的情况，他总会收敛到全局最优。\n\n$f_{\\vec{w},b}(\\vec{x})=\\vec{w} \\vec{x}+b$\n\n$J(\\vec{w},b) = \\frac{1}{2m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})^2}$\n\n$w:\\frac{\\partial J(\\vec{w},b)}{\\partial w}=\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}}$\n\n$b:\\frac{\\partial J(\\vec{w},b)}{\\partial b}=\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})}$\n\n\n\n\n\nGradient descent algorithm:\n\n$repeat\\quad until\\quad  convergence\\quad \\{$\n\n$\\quad\\quad w=w-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}}$\n\n$\\quad\\quad b=b-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})}$\n\n$\\}$\n\n![gradient descent](/img/gradientdescent.gif)\n\n这样就得到了一条拟合程度还不错的假设函数。\n\n## 多变量线性回归\n\n### 向量化多特征\n\n实际情况往往不仅含一个特征，比如房价的预测不仅仅和房子大小有关，也和楼层、层高、位置等有关，此时就会出现多个特征。而要对多个特征逐一使用梯度下降算法的话，不仅代码冗长，且运算速度慢。为了解决这个问题，可以将多个特征记为向量$\\vec{x}=(x_1,x_2,...,x_n)$.此时可以将假设函数记为$f_{\\vec{w},b}(\\vec{x})=\\vec{w}  \\cdot  \\vec{x}+b.$NumPy为向量运算提供了的方法，可以并行让硬件工作以加速运算。\n\n```python\ndef my_dot(a, b): \n    \"\"\"\n   Compute the dot product of two vectors\n \n    Args:\n      a (ndarray (n,)):  input vector \n      b (ndarray (n,)):  input vector with same dimension as a\n    \n    Returns:\n      x (scalar): \n    \"\"\"\n    x=0\n    for i in range(a.shape[0]):\n        x = x + a[i] * b[i]\n    return x\n  \nnp.random.seed(1)\na = np.random.rand(10000000)  # very large arrays\nb = np.random.rand(10000000)\n\ntic = time.time()  # capture start time\nc = np.dot(a, b)\ntoc = time.time()  # capture end time\n\nprint(f\"np.dot(a, b) =  {c:.4f}\")\nprint(f\"Vectorized version duration: {1000*(toc-tic):.4f} ms \")\n\ntic = time.time()  # capture start time\nc = my_dot(a,b)\ntoc = time.time()  # capture end time\n\nprint(f\"my_dot(a, b) =  {c:.4f}\")\nprint(f\"loop version duration: {1000*(toc-tic):.4f} ms \")\n\ndel(a);del(b)  #remove these big arrays from memory\n```\n\n```python\n# result\nnp.dot(a, b) =  2501072.5817\nVectorized version duration: 13.3328 ms \nmy_dot(a, b) =  2501072.5817\nloop version duration: 1374.0389 ms \n```\n\n可以看出，本例中运算速度相差了100倍左右。\n\n### Normal equation正规方程求解w、b\n\n 在说明多特征值线性回归梯度下降算法之前，介绍一种快速求解**线性回归问题**中w、b的方法：正规方程法。相较于梯度下降算法，正规方程有以下下局限性：\n\n- 只能应用于线性回归\n- 特征数量很多时，效率较低\n\n同时也有一些优点：\n\n- 不需要设置学习率$\\alpha$\n- 不需要迭代，对于规模较小的特征，有不错的效率\n\n具体实现，留白，有空回来补\n\n### 多特征线性回归梯度下降算法\n\n和单特征线性回归梯度下降算法相似，只不过多了几个特征而已：\n\n$repeat\\quad until\\quad  convergence \\quad\\{$\n\n$\\quad\\quad w_1=w_1-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}_1}$\n\n$\\quad\\quad w_2=w_2-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}_2}$\n\n$\\quad\\quad\\quad \\vdots$ \n\n$\\quad\\quad w_n=w_n-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}_n}$\n\n$\\quad\\quad b=b -\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})}$\n\n$\\}$\n\n### 特征缩放\n\n当多个特征的取值范围相差很大时，梯度下降算法运行的很慢，此时需要将多个特征值缩放到一个相近的范围内，同时保证这个范围不要太大像-100-100，或者太小像-0.0001-0.0001.\n\n比如现在有两个特征房子的大小$300\\leqslant x_1 \\leqslant1000$和房子的层高$0\\leqslant x_2\\leqslant6$，此时两个特征的范围相差较大，需要对特征进行放缩以得到更好的梯度下降效果。\n\n![origin](/img/origin.png)\n\n#### 除以最大值\n\n比较简单的一个方法，就是将各特征除以该特征的最大值，这样就可以得到的新特征的范围便可以满足要求。$x_1$和$x_2$进行该操作后，范围变成了$0.3\\leqslant x_{1,scaled} \\leqslant1$、$0\\leqslant x_{2,scaled} \\leqslant 1$，此时就可以很好的运行梯度下降算法。\n\n![divideMax](/img/divideMax.png)\n\n#### Mean normalization\n\n均值归一化首先要计算每个特征的平均值$\\mu_i$,然后将原特征$x_i$放缩为$x_{i,scaled}=\\frac{x_i - \\mu_i}{Max-Min}$,$Max、Min$分别为原特征的最大和最小值。即使原特征都为正，均值归一化后的特征也会出现负数，且分布在原点附近。\n\n![meannormalization](/img/meannormalization.png)\n\n#### Z-score normalize\n\nZ-score归一化首先要计算每个特征的平均值$\\mu_i$和标准差$\\sigma_i$,然后将原特征$x_i$放缩为$x_{i,scaled}=\\frac{x_i-\\mu_i}{\\sigma_i}$.同样的，可以看出，归一化后的特征也会出现正负。\n\n![Znormalization](/img/Znormalization.png)\n\n---\n\n下面举个例子判断一下某个特征是否需要rescale:\n\n$0\\leqslant x_1\\leqslant3、-2\\leqslant x_2\\leqslant0.5、-100\\leqslant x_3\\leqslant100、-0.001\\leqslant x_1\\leqslant0.001、98.6\\leqslant x_1\\leqslant105$\n\n简单判断一下，其实$x_1、x_2$范围相差不太，且范围跨度合理，不需要rescale.而$x_3、x_4、x_5$要么太大，要么太小，因此需要放缩一下，向$x_1、x_2$看齐。\n\n如果一个特征的范围比较暧昧，对他进行放缩就可以，因为放缩到合适的尺度不会对算法有什么负面效果。\n\n### 判断梯度下降是否收敛\n\n一个方法是可以观察y轴为$J(\\vec{w},b)$、x轴为迭代次数的图像，通过斜率可以大概判断是否收敛：\n\n![](/img/converge.png)\n\n当迭代次数达到400时，斜率几乎为0，此时便可以判断出函数$J(\\vec{w},b)$已经收敛。\n\n---\n\n另一个方法是自动收敛测试，该方法需要选择一个合适的$\\varepsilon$,当在某一次迭代中，$J(\\vec{w},b)$的值小于$\\varepsilon$时，则认为此时的$\\vec{w},b$可以是算法收敛。但是寻找合适的$\\varepsilon$值不是容易的事情，因此第一种方法可能更常用。\n\n### 学习率的设置\n\n直观来讲，学习率是一个影响代价参数$\\vec{w},b$变化幅度的量，因此学习率的设置不宜过大也不宜过小。若过大可能会导致得到的新参数使$J(\\vec{w},b)$每次都越过最小值点，进而使该函数发散。若学习率过小，则会使函数$J(\\vec{w},b)$收敛的太慢了。要注意的是，合理的学习率总能使函数$J(\\vec{w},b)$随迭代次数单调递减，若出现了下图上边的两种情况，要么是学习率设置太大了，要么是程序代码出现了Bug.\n\n![学习率](/img/学习率.png)\n\n通常可以依次尝试这几个学习率：0.001、0.003、0.01、0.03、0.1、0.3、1、...\n\n即从0.001开始，每次扩大大约3倍，或者缩小3倍左右。\n\n这样一次次尝试后，可以找到一个最大值和一个最小值，为了使收敛的速度更快一些，可以选择比找到的最大值小一些的可以使$J(\\vec{w},b)$收敛的$\\alpha$值。\n\n### 特征工程\n\n特征工程就是将原本的一些特征进行组合，得到一些新的特征，这样也许可以使模型更加精准。\n\n如原数据集中有房子的长和宽两个特征$x_1、x_2$,此时的房价预测模型可以是$f_{\\vec{w},b}(\\vec{x})=w_1x_1+w_2x_2+b$.\n\n现在我们可以让$x_3=x_1 \\times x_2$,这样就可以得到一个新的模型$f_{\\vec{w},b}(\\vec{x})=w_1x_1+w_2x_2+w_3x_3+b$.\n\n### 多项式回归\n\n线性回归中我们使用线性函数来拟合数据集，多项是回归中，我们可以使用非线性的函数来拟合数据集。\n\n![polyregression](/img/polyregression.png)\n\n如图，这个数据集如果用线性函数来拟合的话，很明显不太合适。可以选择$f_{\\vec{w},b}(x)=w_1x+w_2 \\sqrt{x}+b$.这其实也用到了特征工程，因为我们对原始的特征取了根号。\n\n需要注意的是，在使用多项式回归的时候，不同的特征范围的差别可能很大，比如对同一特征的平方和立方，这是要记得使用特征缩放让他们处于一个相对合理的范围。\n\n# 逻辑回归模型\n\n逻辑回归模型可用于**二元分类问题**，其形式为$f_{\\vec{w},b}(\\vec{x}) = g(z) = \\frac{1}{1+e^{-z}},$其中$z=\\vec{w}  \\cdot  \\vec{x}+b$.不难看出$\\displaystyle \\lim_{z \\to -\\infin} g(z) = 0,\\displaystyle \\lim_{z \\to +\\infin} g(z) = 1$,即该函数的输出值$\\hat{y}$在零和一之间，因此可以用于表示**某事件发生的概率**，则$P(y=1|x;\\vec{w},b)+P(y=0|x;\\vec{w},b)=1.$\n\n<img src=\"/img/sigomid.png\" alt=\"sigomid\" style=\"zoom:50%;\" />\n\n我们可以设置一个threshold=0.5,当$0<g(z)<0.5$时$\\hat{y} = 0$，当$0.5 \\le g(z)<1$时$\\hat{y} = 1$.\n\n可以看出当$z=0$时，$g(z)=0.5$.而$z=\\vec{w}  \\cdot  \\vec{x}+b=0$这条线称之为***决策边界***。和线性回归一样，$\\vec{w},\\vec{x}$可以是线性组合，也可以是多项式，因此决策边界也可以是线性或者非线性。它的作用就是区分出模型预测出的结果，即决策边界的两侧代表着不同的预测结果。如下图两种不同的决策边界：\n\n<img src=\"/img/decisionboundaryline.png\" alt=\"decisionboundaryline\" style=\"zoom:40%;\" />\n\n<img src=\"/img/decision boundarylog.png\" alt=\"decision boundarylog\" style=\"zoom:40%;\" />\n\n下面以肿瘤为例看一下为什么对于二元分类问题，线性回归模型不能解决：\n\n<img src=\"/img/linearmodel1.png\" alt=\"linearmodel1\" style=\"zoom:40%;\" />\n\n<img src=\"/img/linearmodel2.png\" alt=\"linearmodel2\" style=\"zoom:40%;\" />\n\n对比以上两幅图片不难看出，若肿瘤大小分别在较小处和较大处的聚集，线性回归对于肿瘤性质的判断会出现越来越大的误差，这显然是不正确的。而逻辑回归模型则可以解决这一问题：\n\n<img src=\"/img/logistic1.png\" alt=\"logistic1\" style=\"zoom:50%;\" />\n\n<img src=\"/img/logistic2.png\" alt=\"logistic2\" style=\"zoom:50%;\" />\n\n可以看出，逻辑回归模型在两端数据聚集时的表现仍然出色。\n\n## 代价函数\n\n线性回归中使用平方误差函数$J(\\vec{w},b) = \\frac{1}{2m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})^2}$作为代价函数。对于线性回归，该函数总是严格的凸函数，因此总会找到是该函数收敛到全局最低的w、b.而逻辑回归中若使用该函数作为代价函数，会发现其图像并不是严格的凸函数，也就无法找到w、b使其收敛到全局最小值，因此需要使用其他函数作为代价函数。\n\n<img src=\"/img/costfunvs.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n\n\n逻辑回归中的代价函数为$J(\\vec{w},b) = \\frac{1}{m} \\sum_{i=0}^{m-1} \\left[ loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)}) \\right]$,其中\n\n$loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)}) = \\left\\{\\begin{matrix}\n -\\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right), & if \\quad y^{(i)}=1\\\\\n -\\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right), & if \\quad  y^{(i)}=0\\\\\n\\end{matrix}\\right.$\n\n可化简为：\n\n$$loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)}) = -y^{(i)} \\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right)$$\n\n$loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)})$表示单个样本的误差（代价函数$J()$则需要遍历整个样本），不要忘记$0 \\le f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\le 1$,其图像如下：\n\n<img src=\"/img/loss1.png\" alt=\"loss1\" style=\"zoom:50%;\" />\n\n<img src=\"/img/loss0.png\" alt=\"loss0\" style=\"zoom:50%;\" />\n\n可以看出：\n\n- $if \\quad y=1$\n\n  - 若$f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow1,loss() \\rightarrow0$,即损失很小，说明预测结果准确\n\n  - 若$f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 0,loss() \\rightarrow \\infin$,即损失很大，说明预测结果不准确\n\n  而此时$y=1$表明恶性肿瘤，这与这与损失很小的情况即$f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 1$预测的结果相吻合。\n\n- $if \\quad y=0$\n\n  - 若$f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 0,loss() \\rightarrow 0$,即损失很小，说明预测结果准确\n\n  - 若$f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 1,loss() \\rightarrow \\infin$,即损失很大，说明预测结果不准确\n\n  而此时$y=0$表明是良性肿瘤，这与损失很小的情况即$f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 0$预测的结果相吻合。\n\n别忘记了代价函数是要寻找参数$\\vec{w}、b,$当$loss() \\rightarrow \\infin$时说明此时的$\\vec{w}、b$并不合适，接下来就可以利用梯度下降迭代寻找$\\vec{w}、b.$\n\n对了还有一点需要指出，高等数学中常用$ln$表示底数为$e$的对数函数，但是此处的$log$实际上也是底数为$e$,不过没有采用前边的写法。\n\n## 梯度下降\n\n算法的原理与线性回归类似，只不过由于预测函数和代价函数都不一样：\n\n$$\\begin{align*}\n&\\text{repeat until convergence:} \\; \\lbrace \\\\\n&  \\; \\; \\;w_j = w_j -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial w_j}  \\; & \\text{for j = 0,...,n-1} \\\\ \n&  \\; \\; \\;  \\; \\;b = b -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial b} \\\\\n&\\rbrace\n\\end{align*}$$\n\n其中：\n\n$$\\begin{align*}\n\\frac{\\partial J(\\vec{w},b)}{\\partial w_j}  &= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)} \\\\\n\\frac{\\partial J(\\vec{w},b)}{\\partial b}  &= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)}) \n\\end{align*}$$\n\n于是，逻辑回归的梯度下降算法就变成了：\n\n$$\\begin{align*}\n&repeat \\quad until  \\quad convergence: \\; \\lbrace \\\\\n&  \\; \\; \\;w_j = w_j -  \\alpha \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)}  \\; & \\text{for j = 0,...,n-1} \\\\ \n&  \\; \\; \\;  \\; \\;b = b -  \\alpha \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)}) \\\\\n&\\rbrace simultaneous \\quad updates\n\\end{align*}$$\n\n但是经过计算后会发现，即使代价函数不一样，但是对于$\\vec{w}、b$的偏导数计算后的形式还是与线性回归一样的，让我不由得发出感叹，妙啊。这里可能有朋友想要自己动手算一下，我稍微提个醒，注意这里的预测函数与线性回归的预测函数是不一样的，求到的时候别带错模型了，我第一次算的时候就使用线性回归模型带入的，然后发现模型带错了。\n\n$Linear \\quad regression: \\quad f_{\\vec{w},b}(\\vec{x})=\\vec{w}  \\cdot  \\vec{x}+b$\n\n$Logistic \\quad regression:  \\quad f_{\\vec{w},b}(\\vec{x})=\\frac{1}{1+e^{-(\\vec{w} \\cdot  \\vec{x}+b)}}$\n\n## 过拟合\n\n对于预测模型，我们通常希望他能得到较为准确的预测结果，一个方法来提高准确性是通过多项式来拟合数据集。但是如果追求能完美拟合某数据集的模型，该模型往往会出现过拟合的现象。\n\n<div style=\"display: flex; justify-content: space-between;\">\n    <img src=\"/img/x1.png\" alt=\"x1\" style=\"zoom:30%;\" />\n    <img src=\"/img/x2.png\" alt=\"x2\" style=\"zoom:30%;\" />\n</div>\n\n<div style=\"display: flex; justify-content: space-between;\">\n\t\t<img src=\"/img/x3.png\" alt=\"x3\" style=\"zoom:30%;\" />\n    <img src=\"/img/x4.png\" alt=\"x4\" style=\"zoom:30%;\" />\n</div>\n\n上边的四张图片分别代表了4个不同的模型对于同一数据集的拟合情况。可以看到，对于更为复杂的模型，对数据集的拟合程度越好。接下来我会对数据集进行一些改动，然后再次用相同次数的多项式分别对数据集进行拟合。\n\n<div style=\"display: flex; justify-content: space-between;\">\n    <img src=\"/img/x11.png\" alt=\"x11\" style=\"zoom:30%;\" />\n    <img src=\"/img/x22.png\" alt=\"x22\" style=\"zoom:30%;\" />\n</div>\n\n<div style=\"display: flex; justify-content: space-between;\">\n    <img src=\"/img/x33.png\" alt=\"x33\" style=\"zoom:30%;\" />\n    <img src=\"/img/x44.png\" alt=\"x44\" style=\"zoom:30%;\" />\n</div>\n\n可以看出来，在对数据集行进了一些改动后，有两个现象：\n\n- 上边两个较为低次的多项式模型对数据集的拟合程度仍然不如下面两个高次模型\n- 对同一数据集进行微调前后，上边两个低次模型的拟合情况变化并不大；而下边两个高次模型在微调前后的拟合情况相差非常大\n\n这个时候下面两个高次的模型实际上已经出现了**过拟合**的现象。\n\n模型应该随着数据集的变化而变化，但是不应该因为数据集中的某个或某几个样本而发生明显的巨大变化。比如样本有10000个，而仅仅在添加或更改了其中一个样本后，模型前后就发生了巨大的变化，尽管他能完美拟合数据集中的样本，但是该模型其实并不能有效预测一个合理的值。比如在10000个肿瘤的样本中，如果我们的模型是过拟合的，那么很有可能出现这样一种情况：变化之前的模型在拟合数据集后，预测大小0.1的肿瘤是良性的，这个时候又多了一个样本，由于过拟合现象的存在，该模型发生了很大变化，变化后它很有可能预测刚刚那个0.1的肿瘤是恶性的。而没有过拟合现象的模型仍然会认为0.1的肿瘤是良性的。而这对比一下，明显是没有过拟合模型更合理一些。\n\n一些术语：欠拟合underfit<=>高偏差high bias、过拟合overfit<=>高方差high variance\n\n## 解决过拟合\n\n解决过拟合的方法有三种，分别是增加数据集的样本数量、选取和预测结果最相关的特征作为子集训练而不是训练整个数据集、正则化。\n\n- 增加样本数量：局限性比较大，毕竟实际情况中样本的数量不可能想有多少就有多少\n- 特征选择：这么做是为了选择与结果最为相关的特征进行训练，但是可能每一个特征都与预测结果直接相关，选择一个子集就会丢掉一些有用的特征\n- 正则化：如果说特征选择是直接消灭掉不太相关的特征，那么正则化做的就不那么绝对，它会削弱这些不太相关特征的影响，算是一种弱化版的“特征选择”\n\n正则化实现的方法是对代价函数进行改进，在原有的代价函数基础上增加一个正则化项以减小不同特征对于模型的影响，一般来讲只需要将$\\vec{w}$进行正则化而不需要对$b$进行正则化，因为$b$是否正则化对结果影响并不大。所以正则化项往往只有$\\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2$(若想对$b$正则化，相应的添加$\\frac{\\lambda}{2m}b^2$即可).其中$\\lambda$是正则化参数。\n\n---\n\n线性回归的正则化：\n\n$$J(\\vec{w},b) = \\frac{1}{2m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})^2  + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2$$ \n其中：\n$$ f_{\\vec{w},b}(\\vec{x}^{(i)}) = \\vec{w} \\cdot \\vec{x}^{(i)} + b $$ \n\n---\n\n逻辑回归的正则化：\n\n$$J(\\vec{w},b) = \\frac{1}{m}  \\sum_{i=0}^{m-1} \\left[ -y^{(i)} \\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) \\right] + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2$$\n其中：\n$$ f_{\\vec{w},b}(\\vec{x}^{(i)}) = sigmoid(\\vec{w} \\cdot \\vec{x}^{(i)} + b)= \\frac{1}{1+e^{-(\\vec{w} \\cdot \\vec{x} + b)}}$$ \n\n---\n\n对于改进后的代价函数，可以直观的看出$\\lambda$的作用（不要忘记我们的目的是缩小代价函数）：若$\\lambda$过小，那么正则化项对参数$\\vec{w}$的约束作用就不大。不妨想象$\\lambda=0,$此时相当于没有对参数$\\vec{w}$正则化，也就无法有效解决过拟合的问题；若$\\lambda$太大，为了使代价函数尽可能小，参数$\\vec{w}$不得不很小很小，那么参数$b$最终对模型起到了决定性作用，这显然也是不合理的。这样看来$\\lambda$似乎可以理解成正则化项的权重。\n\n\n\n正则化后再进行梯度下降\n\n---\n\n线性回归梯度下降：\n\n$$\\begin{align*}\n&\\text{repeat until convergence:} \\; \\lbrace \\\\\n&  \\; \\; \\;w_j = w_j -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial w_j}   \\; & \\text{for j = 0,...,n-1} \\\\ \n&  \\; \\; \\;  \\; \\;b = b -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial b} \\\\\n&\\rbrace\n\\end{align*}$$\n\n其中：\n\n$$J(\\vec{w},b) = \\frac{1}{2m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})^2  + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2$$ \n\n于是：\n\n$$\\begin{align*}\n\\frac{\\partial J(\\vec{w},b)}{\\partial w_j}  &= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)}  +  \\frac{\\lambda}{m} w_j \\\\\n\\frac{\\partial J(\\vec{w},b)}{\\partial b}  &= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)}) \n\\end{align*}$$\n\n---\n\n逻辑回归梯度下降：\n\n$$\\begin{align*}\n&\\text{repeat until convergence:} \\; \\lbrace \\\\\n&  \\; \\; \\;w_j = w_j -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial w_j}   \\; & \\text{for j = 0,...,n-1} \\\\ \n&  \\; \\; \\;  \\; \\;b = b -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial b} \\\\\n&\\rbrace\n\\end{align*}$$\n\n其中：\n\n$$J(\\vec{w},b) = \\frac{1}{m}  \\sum_{i=0}^{m-1} \\left[ -y^{(i)} \\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) \\right] + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2$$\n\n于是：\n\n$$\\begin{align*}\n\\frac{\\partial J(\\vec{w},b)}{\\partial w_j}  &= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)}  +  \\frac{\\lambda}{m} w_j \\\\\n\\frac{\\partial J(\\vec{w},b)}{\\partial b}  &= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)}) \n\\end{align*}$$\n\n---\n\n同样，而这除了模型不一样，其余地方都是一样的。\n\n\n\n# 一个问题\n\n对正则化后的代价函数运行梯度下降时，对$\\vec{w}$的偏导数进行整理可以得到：\n\n$w_j = w_j -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial w_j} =(1-\\alpha \\frac{\\lambda}{m})w_j- \\alpha \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)}$\n\n吴恩达依据$\\alpha 、\\lambda$都不大，因此$w_j$每次迭代都是乘一个小于1的数，于是每次他都会减小，以此来达到正则化的目的，对此有三个疑问：\n\n第一：学习率$\\alpha$可以很小，因为过大了可能导致不收敛。但是$\\lambda$一定也是一个比较小的值吗？或者说其与m的比值乘$\\alpha$一定小于1吗？\n\n第二：第一项仅仅是一次迭代中的一部分，并没有计算完，还有第二项呢，第二项的正负也没办法确定吧，那每次迭代$w_j$是变大变小不是都有可能吗？\n\n第三：正则化过程中参数$\\vec{w}$不一定要每次减小吧，不是找到一组合适的就可以吗？\n\n有这个问题是因为在没有正则化的梯度下降中，我们的目的是寻找一组合适的而不是最小的$\\vec{w} 、b$使得代价函数最小，而在该过程中只能保证代价函数是递减的，但是没有规定$\\vec{w}、b$的增减变化。为此我也回去看了一下JupyterLab的C1_W1_Lab05_Gradient_Descent_Soln,证实了确实没有这样的规定，所以听到他那么说就有点儿不理解。\n","slug":"ML-Andrew-Ng-0","published":1,"updated":"2024-07-13T13:09:26.497Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gay000qbiubgl4l3gvg","content":"<p>同一系列的<a href=\"https://b-white07.github.io/posts/1ca572.html\">神经网络</a>和<a href=\"https://b-white07.github.io/posts/9915f4c8.html\">无监督学习</a>相关笔记点击查看</p>\n<h1>机器学习两种常见算法</h1>\n<h2 id=\"监督学习Supervised-Learning\">监督学习Supervised Learning</h2>\n<p>监督学习的目的是根据给定的数据集，来预测某一个想知道的结果，而数据集中的每一个数据都是有对应结果的。来看两个例子：</p>\n<ul>\n<li>\n<p>在预测房价的数据集中，保存着如100平米的房子的售价是1000万元、300平米的房子的售价是2500万元这样的信息。这里我们想知到的结果就是x平米的房子能卖多少钱，比如我们输入200，希望得到一个价格。</p>\n</li>\n<li>\n<p>在乳腺癌的数据集中，记录着如肿瘤大小为0.75mm是恶性的、肿瘤大小为0.01mm是良性的这种信息。这里我们想知道结果就是一个x大小的肿瘤是否为良性，比我我们输入0.45，希望他告诉我们是良性还是恶性。</p>\n</li>\n</ul>\n<h3 id=\"回归问题Regression\">回归问题Regression</h3>\n<p>在上述第一个举例中，我们要预测的房价其实是一种<strong>连续值</strong>，可以从几百万到几千万不等。<em><strong>回归问题</strong></em>就是针对这种<em><strong>连续值问题</strong></em>。</p>\n<h3 id=\"分类问题Classification\">分类问题Classification</h3>\n<p>在上述第二个举例中，我们要判断的是一个肿瘤是否为良性，只可能有两种结果，要么是良性，要么不是良性，明显这是一个<strong>离散值</strong>。<em><strong>分类问题</strong></em>解决的就是这种<em><strong>离散值问题</strong></em>。</p>\n<h2 id=\"无监督学习Unsupervised-Learning\">无监督学习Unsupervised Learning</h2>\n<p>无监督学习的目的是分析给定的数据集，寻找数据集中各数据的关系而不是想要得到一个结果。</p>\n<p>比如监督学习中预测房价的例子，监督学习做的是根据数据集中的房子大小这一特征来预测某一大小房子的价格。</p>\n<p>而在无监督学习中，房子大小和房子价格都会作为房子的特征，来分析房子之间的关系。比如他也许会将房子面积很大价格很高的那些房子归为一类，将房子面积很小但价格很高又归为一类等等.</p>\n<p>下面是Google news的一部分，可以看到新闻被分为了很多类别，这也许就可以用无监督学习分析每个新闻的特征，将特征相似的新闻归为一类：</p>\n<p><img src=\"/img/googlenews.png\" alt=\"google news\"></p>\n<h1>线性回归模型</h1>\n<h2 id=\"单变量线性回归\">单变量线性回归</h2>\n<p>先介绍几个符号以便说明：</p>\n<p>m：训练样本的数量</p>\n<p>x：输入变量（或特征）</p>\n<p>y：输出变量（或目标变量）</p>\n<h3 id=\"hypothesis函数\">hypothesis函数</h3>\n<p>单变量线性回归模型中，我们的目标是找到一条线性的hypothesis函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>w</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">f_{w,b}(x)= wx + b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>来拟合数据集中的数据，这样输入一个变量就能得到估计的结果。将数据集作为样本，通过学习算法的训练，就可以得到<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>，这样也就得到了目标函数。对于该函数，我们自然希望得到使误差尽可能小的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>，因此我们又引入了代价函数来计算<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f_{w,b}(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>的误差。</p>\n<h3 id=\"cost-function代价函数\">cost function代价函数</h3>\n<p>可以选取均方误差函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{2m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})^2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span>，我们的目标就是求得<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mtext>和</mtext><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">b和w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span>，使该函数的值最小。其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b} (\\vec{x}^{(i)})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>是输入第i个样本得到的估计值，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">y^{(i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0824em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span>是第i个样本的实际值。比如样本为(1,1)、(2,2)、(3,3),<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0.5</mn><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x})=0.5x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.5</span><span class=\"mord mathnormal\">x</span></span></span></span>,即<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>=</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>w</mi><mo>=</mo><mn>0.5</mn></mrow><annotation encoding=\"application/x-tex\">b=0,w=0.5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.5</span></span></span></span>.如图所示：</p>\n<p><img src=\"/img/costfun.png\" alt=\"\"></p>\n<p>则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><mo>≈</mo><mn>0.58</mn></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{2m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})^2}\\approx 0.58</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.58</span></span></span></span></p>\n<p>当然，不难看出当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo>=</mo><mn>1</mn><mtext>、</mtext><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">w=1、b=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>时，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>,此时便找到了我们所需要的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mtext>、</mtext><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">b 、 w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span>.</p>\n<hr>\n<p>上边的情况实际上我所选择的样本可以使<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">b=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>,相当于只有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span>一个参数，简化了问题。下面讨论一下更为实际的线性回归即两个参数都可以为任意值。</p>\n<p>此时不难发现，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>是关于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>的二元函数。为了方便描述，可以使用等高线来绘制<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>.下图所示为一组<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p><img src=\"/img/hxjtheta.png\" alt=\"\"></p>\n<p>等高线各椭圆的中心是我们的目标，此时我们得到的点（右图的红叉❌）很明显举例目标还有一段距离，因此反映在左图中，得到的假设函数与数据集的拟合程度肉眼可见的差。此时便需要重新计算<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>的值以生成更优秀的假设函数。一种比较常见的算法就是梯度下降算法。</p>\n<h3 id=\"Gradient-descent梯度下降算法\">Gradient descent梯度下降算法</h3>\n<p>使用梯度下降算法可以一次次迭代，最终找到可以使得<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>最小的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>.梯度下降算法可以应用于更一般的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(w_1,w_2,...,w_n,b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>函数，而不是仅仅能应用于线性回归的代价函数。</p>\n<p>单变量梯度下降算法描述如下：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi><mspace width=\"1em\"/><mi>u</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>l</mi><mspace width=\"1em\"/><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>n</mi><mi>c</mi><mi>e</mi><mspace width=\"1em\"/><mo stretchy=\"false\">{</mo></mrow><annotation encoding=\"application/x-tex\">repeat\\quad until\\quad  convergence \\quad\\{</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">re</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">er</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">ce</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">{</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mi>w</mi><mo>=</mo><mi>w</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad w=w-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad b=b -\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial b}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mclose\">}</span></span></span></span></p>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>为学习速率，反映了每次迭代时，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>变化的跨度，不宜太大也不宜太小; 对于一个固定不变的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>,由于偏导数是越来越小的，因此<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>的变化也会越来越小，最后收敛。</p>\n<p>另外再仔细观察一下该算法和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>会发现一个事实：由于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>是对m个样本的某种运算的求和形式，因此此处的偏导数也是一种求和形式，因此每次<em><strong>更新参数都遍历了整个样本</strong></em>，这种形式梯度下降可以叫做Batch gradient descent即批量梯度下降。还有两种方法是：1.每次迭代只采集一个样本，计算该样本损失函数的梯度并更新参数，这种方式叫随机梯度下降。当经过足够多迭代后，随机梯度下降也会收敛到全局最优。2.每次迭代选取一小部分训练样本，他是批量梯度下降和随机梯度下降的这种方法，叫<strong>小批量梯度下降</strong>，是现在常用的一种方法。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>初值可以都取为0，当然这不是固定的，根据具体情况可以灵活调整。但有一点要格外注意：<em><strong>二者要同时变化而不能先变一个，另一个再变</strong></em>：</p>\n<p>Correct:</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant=\"normal\">_</mi><mi>w</mi><mo>=</mo><mi>w</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">temp\\_w=w-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9251em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant=\"normal\">_</mi><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">temp\\_b=b-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial b}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0044em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo>=</mo><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant=\"normal\">_</mi><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">w=temp\\_w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9251em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>=</mo><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant=\"normal\">_</mi><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b=temp\\_b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0044em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\">b</span></span></span></span></p>\n<p>Incorrect:</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant=\"normal\">_</mi><mi>w</mi><mo>=</mo><mi>w</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">temp\\_w=w-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9251em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo>=</mo><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant=\"normal\">_</mi><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">w=temp\\_w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9251em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant=\"normal\">_</mi><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">temp\\_b=b-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial b}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0044em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>=</mo><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant=\"normal\">_</mi><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b=temp\\_b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0044em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\">b</span></span></span></span></p>\n<p>对于一般的代价函数，其形状不一定是图函数，因此对于不同的起点，可能找到不同的局部最优点：</p>\n<p><img src=\"/img/gradientdescent1.png\" alt=\"case1\"></p>\n<p><img src=\"/img/gradientdescent2.png\" alt=\"case2\"></p>\n<p>尽管起点相差很小，但最终得到的代价函数完全不一样。</p>\n<hr>\n<p>将该算法应用到线性回归模型中：</p>\n<p>说明一点：线性回归的代价函数总是一个凸函数，因此他不会出现一般代价函数的局部最优的情况，他总会收敛到全局最优。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x})=\\vec{w} \\vec{x}+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7973em;vertical-align:-0.0833em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{2m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})^2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo>:</mo><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>w</mi></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mrow><annotation encoding=\"application/x-tex\">w:\\frac{\\partial J(\\vec{w},b)}{\\partial w}=\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>:</mo><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">b:\\frac{\\partial J(\\vec{w},b)}{\\partial b}=\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>Gradient descent algorithm:</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi><mspace width=\"1em\"/><mi>u</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>l</mi><mspace width=\"1em\"/><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>n</mi><mi>c</mi><mi>e</mi><mspace width=\"1em\"/><mo stretchy=\"false\">{</mo></mrow><annotation encoding=\"application/x-tex\">repeat\\quad until\\quad  convergence\\quad \\{</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">re</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">er</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">ce</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">{</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mi>w</mi><mo>=</mo><mi>w</mi><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad w=w-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad b=b-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mclose\">}</span></span></span></span></p>\n<p><img src=\"/img/gradientdescent.gif\" alt=\"gradient descent\"></p>\n<p>这样就得到了一条拟合程度还不错的假设函数。</p>\n<h2 id=\"多变量线性回归\">多变量线性回归</h2>\n<h3 id=\"向量化多特征\">向量化多特征</h3>\n<p>实际情况往往不仅含一个特征，比如房价的预测不仅仅和房子大小有关，也和楼层、层高、位置等有关，此时就会出现多个特征。而要对多个特征逐一使用梯度下降算法的话，不仅代码冗长，且运算速度慢。为了解决这个问题，可以将多个特征记为向量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\vec{x}=(x_1,x_2,...,x_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>.此时可以将假设函数记为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x})=\\vec{w}  \\cdot  \\vec{x}+b.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7973em;vertical-align:-0.0833em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord\">.</span></span></span></span>NumPy为向量运算提供了的方法，可以并行让硬件工作以加速运算。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">my_dot</span>(<span class=\"params\">a, b</span>): </span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">   Compute the dot product of two vectors</span></span><br><span class=\"line\"><span class=\"string\"> </span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">      a (ndarray (n,)):  input vector </span></span><br><span class=\"line\"><span class=\"string\">      b (ndarray (n,)):  input vector with same dimension as a</span></span><br><span class=\"line\"><span class=\"string\">    </span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">      x (scalar): </span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    x=<span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(a.shape[<span class=\"number\">0</span>]):</span><br><span class=\"line\">        x = x + a[i] * b[i]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x</span><br><span class=\"line\">  </span><br><span class=\"line\">np.random.seed(<span class=\"number\">1</span>)</span><br><span class=\"line\">a = np.random.rand(<span class=\"number\">10000000</span>)  <span class=\"comment\"># very large arrays</span></span><br><span class=\"line\">b = np.random.rand(<span class=\"number\">10000000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">tic = time.time()  <span class=\"comment\"># capture start time</span></span><br><span class=\"line\">c = np.dot(a, b)</span><br><span class=\"line\">toc = time.time()  <span class=\"comment\"># capture end time</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;np.dot(a, b) =  <span class=\"subst\">&#123;c:<span class=\"number\">.4</span>f&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Vectorized version duration: <span class=\"subst\">&#123;<span class=\"number\">1000</span>*(toc-tic):<span class=\"number\">.4</span>f&#125;</span> ms &quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">tic = time.time()  <span class=\"comment\"># capture start time</span></span><br><span class=\"line\">c = my_dot(a,b)</span><br><span class=\"line\">toc = time.time()  <span class=\"comment\"># capture end time</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;my_dot(a, b) =  <span class=\"subst\">&#123;c:<span class=\"number\">.4</span>f&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;loop version duration: <span class=\"subst\">&#123;<span class=\"number\">1000</span>*(toc-tic):<span class=\"number\">.4</span>f&#125;</span> ms &quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">del</span>(a);<span class=\"keyword\">del</span>(b)  <span class=\"comment\">#remove these big arrays from memory</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># result</span></span><br><span class=\"line\">np.dot(a, b) =  <span class=\"number\">2501072.5817</span></span><br><span class=\"line\">Vectorized version duration: <span class=\"number\">13.3328</span> ms </span><br><span class=\"line\">my_dot(a, b) =  <span class=\"number\">2501072.5817</span></span><br><span class=\"line\">loop version duration: <span class=\"number\">1374.0389</span> ms </span><br></pre></td></tr></table></figure>\n<p>可以看出，本例中运算速度相差了100倍左右。</p>\n<h3 id=\"Normal-equation正规方程求解w、b\">Normal equation正规方程求解w、b</h3>\n<p>在说明多特征值线性回归梯度下降算法之前，介绍一种快速求解<strong>线性回归问题</strong>中w、b的方法：正规方程法。相较于梯度下降算法，正规方程有以下下局限性：</p>\n<ul>\n<li>只能应用于线性回归</li>\n<li>特征数量很多时，效率较低</li>\n</ul>\n<p>同时也有一些优点：</p>\n<ul>\n<li>不需要设置学习率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span></li>\n<li>不需要迭代，对于规模较小的特征，有不错的效率</li>\n</ul>\n<p>具体实现，留白，有空回来补</p>\n<h3 id=\"多特征线性回归梯度下降算法\">多特征线性回归梯度下降算法</h3>\n<p>和单特征线性回归梯度下降算法相似，只不过多了几个特征而已：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi><mspace width=\"1em\"/><mi>u</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>l</mi><mspace width=\"1em\"/><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>n</mi><mi>c</mi><mi>e</mi><mspace width=\"1em\"/><mo stretchy=\"false\">{</mo></mrow><annotation encoding=\"application/x-tex\">repeat\\quad until\\quad  convergence \\quad\\{</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">re</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">er</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">ce</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">{</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><msub><mi>w</mi><mn>1</mn></msub><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msubsup><mi>x</mi><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad w_1=w_1-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}_1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3898em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4337em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2663em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><msub><mi>w</mi><mn>2</mn></msub><mo>=</mo><msub><mi>w</mi><mn>2</mn></msub><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msubsup><mi>x</mi><mn>2</mn><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad w_2=w_2-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}_2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3898em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4337em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2663em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mspace width=\"1em\"/><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad\\quad \\vdots</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.53em;vertical-align:-0.03em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><msub><mi>w</mi><mi>n</mi></msub><mo>=</mo><msub><mi>w</mi><mi>n</mi></msub><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msubsup><mi>x</mi><mi>n</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad w_n=w_n-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}_n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3898em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1166em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad b=b -\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mclose\">}</span></span></span></span></p>\n<h3 id=\"特征缩放\">特征缩放</h3>\n<p>当多个特征的取值范围相差很大时，梯度下降算法运行的很慢，此时需要将多个特征值缩放到一个相近的范围内，同时保证这个范围不要太大像-100-100，或者太小像-0.0001-0.0001.</p>\n<p>比如现在有两个特征房子的大小<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>300</mn><mo>⩽</mo><msub><mi>x</mi><mn>1</mn></msub><mo>⩽</mo><mn>1000</mn></mrow><annotation encoding=\"application/x-tex\">300\\leqslant x_1 \\leqslant1000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7811em;vertical-align:-0.1367em;\"></span><span class=\"mord\">300</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7867em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1000</span></span></span></span>和房子的层高<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>⩽</mo><msub><mi>x</mi><mn>2</mn></msub><mo>⩽</mo><mn>6</mn></mrow><annotation encoding=\"application/x-tex\">0\\leqslant x_2\\leqslant6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7811em;vertical-align:-0.1367em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7867em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">6</span></span></span></span>，此时两个特征的范围相差较大，需要对特征进行放缩以得到更好的梯度下降效果。</p>\n<p><img src=\"/img/origin.png\" alt=\"origin\"></p>\n<h4 id=\"除以最大值\">除以最大值</h4>\n<p>比较简单的一个方法，就是将各特征除以该特征的最大值，这样就可以得到的新特征的范围便可以满足要求。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>进行该操作后，范围变成了<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0.3</mn><mo>⩽</mo><msub><mi>x</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>⩽</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0.3\\leqslant x_{1,scaled} \\leqslant1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7811em;vertical-align:-0.1367em;\"></span><span class=\"mord\">0.3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9228em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">sc</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>⩽</mo><msub><mi>x</mi><mrow><mn>2</mn><mo separator=\"true\">,</mo><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>⩽</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0\\leqslant x_{2,scaled} \\leqslant 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7811em;vertical-align:-0.1367em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9228em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">sc</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>，此时就可以很好的运行梯度下降算法。</p>\n<p><img src=\"/img/divideMax.png\" alt=\"divideMax\"></p>\n<h4 id=\"Mean-normalization\">Mean normalization</h4>\n<p>均值归一化首先要计算每个特征的平均值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>μ</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mu_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,然后将原特征<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>放缩为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>=</mo><mfrac><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>μ</mi><mi>i</mi></msub></mrow><mrow><mi>M</mi><mi>a</mi><mi>x</mi><mo>−</mo><mi>M</mi><mi>i</mi><mi>n</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">x_{i,scaled}=\\frac{x_i - \\mu_i}{Max-Min}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">sc</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2578em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8544em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal mtight\">in</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>,<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mi>a</mi><mi>x</mi><mtext>、</mtext><mi>M</mi><mi>i</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">Max、Min</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">in</span></span></span></span>分别为原特征的最大和最小值。即使原特征都为正，均值归一化后的特征也会出现负数，且分布在原点附近。</p>\n<p><img src=\"/img/meannormalization.png\" alt=\"meannormalization\"></p>\n<h4 id=\"Z-score-normalize\">Z-score normalize</h4>\n<p>Z-score归一化首先要计算每个特征的平均值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>μ</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mu_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>和标准差<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>σ</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\sigma_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,然后将原特征<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>放缩为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>=</mo><mfrac><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>μ</mi><mi>i</mi></msub></mrow><msub><mi>σ</mi><mi>i</mi></msub></mfrac></mrow><annotation encoding=\"application/x-tex\">x_{i,scaled}=\\frac{x_i-\\mu_i}{\\sigma_i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">sc</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2995em;vertical-align:-0.4451em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8544em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>.同样的，可以看出，归一化后的特征也会出现正负。</p>\n<p><img src=\"/img/Znormalization.png\" alt=\"Znormalization\"></p>\n<hr>\n<p>下面举个例子判断一下某个特征是否需要rescale:</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>⩽</mo><msub><mi>x</mi><mn>1</mn></msub><mo>⩽</mo><mn>3</mn><mtext>、</mtext><mo>−</mo><mn>2</mn><mo>⩽</mo><msub><mi>x</mi><mn>2</mn></msub><mo>⩽</mo><mn>0.5</mn><mtext>、</mtext><mo>−</mo><mn>100</mn><mo>⩽</mo><msub><mi>x</mi><mn>3</mn></msub><mo>⩽</mo><mn>100</mn><mtext>、</mtext><mo>−</mo><mn>0.001</mn><mo>⩽</mo><msub><mi>x</mi><mn>1</mn></msub><mo>⩽</mo><mn>0.001</mn><mtext>、</mtext><mn>98.6</mn><mo>⩽</mo><msub><mi>x</mi><mn>1</mn></msub><mo>⩽</mo><mn>105</mn></mrow><annotation encoding=\"application/x-tex\">0\\leqslant x_1\\leqslant3、-2\\leqslant x_2\\leqslant0.5、-100\\leqslant x_3\\leqslant100、-0.001\\leqslant x_1\\leqslant0.001、98.6\\leqslant x_1\\leqslant105</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7811em;vertical-align:-0.1367em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7867em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">3</span><span class=\"mord cjk_fallback\">、</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7811em;vertical-align:-0.1367em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7867em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">0.5</span><span class=\"mord cjk_fallback\">、</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7811em;vertical-align:-0.1367em;\"></span><span class=\"mord\">100</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7867em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">100</span><span class=\"mord cjk_fallback\">、</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7811em;vertical-align:-0.1367em;\"></span><span class=\"mord\">0.001</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7867em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.82em;vertical-align:-0.1367em;\"></span><span class=\"mord\">0.001</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\">98.6</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7867em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">105</span></span></span></span></p>\n<p>简单判断一下，其实<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mtext>、</mtext><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1、x_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>范围相差不太，且范围跨度合理，不需要rescale.而<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>3</mn></msub><mtext>、</mtext><msub><mi>x</mi><mn>4</mn></msub><mtext>、</mtext><msub><mi>x</mi><mn>5</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_3、x_4、x_5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>要么太大，要么太小，因此需要放缩一下，向<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mtext>、</mtext><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1、x_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>看齐。</p>\n<p>如果一个特征的范围比较暧昧，对他进行放缩就可以，因为放缩到合适的尺度不会对算法有什么负面效果。</p>\n<h3 id=\"判断梯度下降是否收敛\">判断梯度下降是否收敛</h3>\n<p>一个方法是可以观察y轴为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>、x轴为迭代次数的图像，通过斜率可以大概判断是否收敛：</p>\n<p><img src=\"/img/converge.png\" alt=\"\"></p>\n<p>当迭代次数达到400时，斜率几乎为0，此时便可以判断出函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>已经收敛。</p>\n<hr>\n<p>另一个方法是自动收敛测试，该方法需要选择一个合适的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>,当在某一次迭代中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>的值小于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>时，则认为此时的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{w},b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9084em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>可以是算法收敛。但是寻找合适的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>值不是容易的事情，因此第一种方法可能更常用。</p>\n<h3 id=\"学习率的设置\">学习率的设置</h3>\n<p>直观来讲，学习率是一个影响代价参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{w},b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9084em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>变化幅度的量，因此学习率的设置不宜过大也不宜过小。若过大可能会导致得到的新参数使<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>每次都越过最小值点，进而使该函数发散。若学习率过小，则会使函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>收敛的太慢了。要注意的是，合理的学习率总能使函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>随迭代次数单调递减，若出现了下图上边的两种情况，要么是学习率设置太大了，要么是程序代码出现了Bug.</p>\n<p><img src=\"/img/%E5%AD%A6%E4%B9%A0%E7%8E%87.png\" alt=\"学习率\"></p>\n<p>通常可以依次尝试这几个学习率：0.001、0.003、0.01、0.03、0.1、0.3、1、…</p>\n<p>即从0.001开始，每次扩大大约3倍，或者缩小3倍左右。</p>\n<p>这样一次次尝试后，可以找到一个最大值和一个最小值，为了使收敛的速度更快一些，可以选择比找到的最大值小一些的可以使<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>收敛的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>值。</p>\n<h3 id=\"特征工程\">特征工程</h3>\n<p>特征工程就是将原本的一些特征进行组合，得到一些新的特征，这样也许可以使模型更加精准。</p>\n<p>如原数据集中有房子的长和宽两个特征<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mtext>、</mtext><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1、x_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,此时的房价预测模型可以是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x})=w_1x_1+w_2x_2+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>.</p>\n<p>现在我们可以让<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><mo>×</mo><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_3=x_1 \\times x_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,这样就可以得到一个新的模型<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msub><mi>w</mi><mn>3</mn></msub><msub><mi>x</mi><mn>3</mn></msub><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x})=w_1x_1+w_2x_2+w_3x_3+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>.</p>\n<h3 id=\"多项式回归\">多项式回归</h3>\n<p>线性回归中我们使用线性函数来拟合数据集，多项是回归中，我们可以使用非线性的函数来拟合数据集。</p>\n<p><img src=\"/img/polyregression.png\" alt=\"polyregression\"></p>\n<p>如图，这个数据集如果用线性函数来拟合的话，很明显不太合适。可以选择<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msqrt><mi>x</mi></msqrt><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(x)=w_1x+w_2 \\sqrt{x}+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.2397em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8003em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-2.7603em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2397em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>.这其实也用到了特征工程，因为我们对原始的特征取了根号。</p>\n<p>需要注意的是，在使用多项式回归的时候，不同的特征范围的差别可能很大，比如对同一特征的平方和立方，这是要记得使用特征缩放让他们处于一个相对合理的范围。</p>\n<h1>逻辑回归模型</h1>\n<p>逻辑回归模型可用于<strong>二元分类问题</strong>，其形式为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}) = g(z) = \\frac{1}{1+e^{-z}},</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2484em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7027em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span></span></span></span>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">z=\\vec{w}  \\cdot  \\vec{x}+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7973em;vertical-align:-0.0833em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>.不难看出<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>z</mi><mo>→</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow></munder><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn><mo separator=\"true\">,</mo><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>z</mi><mo>→</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow></munder><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn></mstyle></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle \\lim_{z \\to -\\infin} g(z) = 0,\\displaystyle \\lim_{z \\to +\\infin} g(z) = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.5083em;vertical-align:-0.7583em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-2.4em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">lim</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7583em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.5083em;vertical-align:-0.7583em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-2.4em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">+</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">lim</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7583em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>,即该函数的输出值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\hat{y}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span></span></span></span>在零和一之间，因此可以用于表示<strong>某事件发生的概率</strong>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo>=</mo><mn>1</mn><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo separator=\"true\">;</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo>=</mo><mn>0</mn><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo separator=\"true\">;</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1.</mn></mrow><annotation encoding=\"application/x-tex\">P(y=1|x;\\vec{w},b)+P(y=0|x;\\vec{w},b)=1.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1∣</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0∣</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1.</span></span></span></span></p>\n<img src=\"/img/sigomid.png\" alt=\"sigomid\" style=\"zoom:50%;\" />\n<p>我们可以设置一个threshold=0.5,当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>&lt;</mo><mn>0.5</mn></mrow><annotation encoding=\"application/x-tex\">0&lt;g(z)&lt;0.5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.5</span></span></span></span>时<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\hat{y} = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>，当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0.5</mn><mo>≤</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0.5 \\le g(z)&lt;1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">0.5</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>时<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\hat{y} = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>.</p>\n<p>可以看出当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">z=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>时，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0.5</mn></mrow><annotation encoding=\"application/x-tex\">g(z)=0.5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.5</span></span></span></span>.而<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">z=\\vec{w}  \\cdot  \\vec{x}+b=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7973em;vertical-align:-0.0833em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>这条线称之为<em><strong>决策边界</strong></em>。和线性回归一样，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w},\\vec{x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9084em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>可以是线性组合，也可以是多项式，因此决策边界也可以是线性或者非线性。它的作用就是区分出模型预测出的结果，即决策边界的两侧代表着不同的预测结果。如下图两种不同的决策边界：</p>\n<img src=\"/img/decisionboundaryline.png\" alt=\"decisionboundaryline\" style=\"zoom:40%;\" />\n<img src=\"/img/decision boundarylog.png\" alt=\"decision boundarylog\" style=\"zoom:40%;\" />\n<p>下面以肿瘤为例看一下为什么对于二元分类问题，线性回归模型不能解决：</p>\n<img src=\"/img/linearmodel1.png\" alt=\"linearmodel1\" style=\"zoom:40%;\" />\n<img src=\"/img/linearmodel2.png\" alt=\"linearmodel2\" style=\"zoom:40%;\" />\n<p>对比以上两幅图片不难看出，若肿瘤大小分别在较小处和较大处的聚集，线性回归对于肿瘤性质的判断会出现越来越大的误差，这显然是不正确的。而逻辑回归模型则可以解决这一问题：</p>\n<img src=\"/img/logistic1.png\" alt=\"logistic1\" style=\"zoom:50%;\" />\n<img src=\"/img/logistic2.png\" alt=\"logistic2\" style=\"zoom:50%;\" />\n<p>可以看出，逻辑回归模型在两端数据聚集时的表现仍然出色。</p>\n<h2 id=\"代价函数\">代价函数</h2>\n<p>线性回归中使用平方误差函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{2m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})^2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span>作为代价函数。对于线性回归，该函数总是严格的凸函数，因此总会找到是该函数收敛到全局最低的w、b.而逻辑回归中若使用该函数作为代价函数，会发现其图像并不是严格的凸函数，也就无法找到w、b使其收敛到全局最小值，因此需要使用其他函数作为代价函数。</p>\n<img src=\"/img/costfunvs.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<p>逻辑回归中的代价函数为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mrow><mo fence=\"true\">[</mo><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{m} \\sum_{i=0}^{m-1} \\left[ loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)}) \\right]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.304em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span></span></span></span>,其中</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)}) = \\left\\{\\begin{matrix}\n -\\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right), &amp; if \\quad y^{(i)}=1\\\\\n -\\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right), &amp; if \\quad  y^{(i)}=0\\\\\n\\end{matrix}\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.496em;vertical-align:-0.998em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.498em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-2.362em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.998em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.498em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.362em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.998em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p>可化简为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo>−</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)}) = -y^{(i)} \\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2291em;vertical-align:-0.2911em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>表示单个样本的误差（代价函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J()</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span></span></span></span>则需要遍历整个样本），不要忘记<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo>≤</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 \\le f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\le 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.238em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>,其图像如下：</p>\n<img src=\"/img/loss1.png\" alt=\"loss1\" style=\"zoom:50%;\" />\n<img src=\"/img/loss0.png\" alt=\"loss0\" style=\"zoom:50%;\" />\n<p>可以看出：</p>\n<ul>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">if \\quad y=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></p>\n<ul>\n<li>\n<p>若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>→</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo><mo>→</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow1,loss() \\rightarrow0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>,即损失很小，说明预测结果准确</p>\n</li>\n<li>\n<p>若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>→</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 0,loss() \\rightarrow \\infin</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>,即损失很大，说明预测结果不准确</p>\n</li>\n</ul>\n<p>而此时<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">y=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>表明恶性肿瘤，这与这与损失很小的情况即<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>→</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>预测的结果相吻合。</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">if \\quad y=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></p>\n<ul>\n<li>\n<p>若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>→</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo><mo>→</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 0,loss() \\rightarrow 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>,即损失很小，说明预测结果准确</p>\n</li>\n<li>\n<p>若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>→</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 1,loss() \\rightarrow \\infin</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>,即损失很大，说明预测结果不准确</p>\n</li>\n</ul>\n<p>而此时<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">y=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>表明是良性肿瘤，这与损失很小的情况即<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>→</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>预测的结果相吻合。</p>\n</li>\n</ul>\n<p>别忘记了代价函数是要寻找参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mtext>、</mtext><mi>b</mi><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\vec{w}、b,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9084em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span></span></span></span>当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">loss() \\rightarrow \\infin</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>时说明此时的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{w}、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>并不合适，接下来就可以利用梯度下降迭代寻找<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mtext>、</mtext><mi>b</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{w}、b.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span><span class=\"mord\">.</span></span></span></span></p>\n<p>对了还有一点需要指出，高等数学中常用<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">ln</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span></span></span></span>表示底数为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">e</span></span></span></span>的对数函数，但是此处的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">log</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>实际上也是底数为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">e</span></span></span></span>,不过没有采用前边的写法。</p>\n<h2 id=\"梯度下降\">梯度下降</h2>\n<p>算法的原理与线性回归类似，只不过由于预测函数和代价函数都不一样：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left right\" columnspacing=\"0em 1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>repeat until convergence:</mtext><mtext>  </mtext><mo stretchy=\"false\">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><msub><mi>w</mi><mi>j</mi></msub><mo>=</mo><msub><mi>w</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mtext>  </mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext>for j = 0,...,n-1</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo stretchy=\"false\">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n&amp;\\text{repeat until convergence:} \\; \\lbrace \\\\\n&amp;  \\; \\; \\;w_j = w_j -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial w_j}  \\; &amp; \\text{for j = 0,...,n-1} \\\\ \n&amp;  \\; \\; \\;  \\; \\;b = b -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial b} \\\\\n&amp;\\rbrace\n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:8.1121em;vertical-align:-3.8061em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.3061em;\"><span style=\"top:-6.8931em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.1069em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.2809em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8061em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.3061em;\"><span style=\"top:-6.8931em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">repeat until convergence:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">{</span></span></span><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9721em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span></span><span style=\"top:-2.1069em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-0.2809em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mclose\">}</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8061em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.8061em;\"><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">for j = 0,...,n-1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n\\frac{\\partial J(\\vec{w},b)}{\\partial w_j}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)} \\\\\n\\frac{\\partial J(\\vec{w},b)}{\\partial b}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)}) \n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6.7576em;vertical-align:-3.1288em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.6288em;\"><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9721em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1288em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.6288em;\"><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.413em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1288em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>于是，逻辑回归的梯度下降算法就变成了：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left right\" columnspacing=\"0em 1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>r</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi><mspace width=\"1em\"/><mi>u</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>l</mi><mspace width=\"1em\"/><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>n</mi><mi>c</mi><mi>e</mi><mo>:</mo><mtext>  </mtext><mo stretchy=\"false\">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><msub><mi>w</mi><mi>j</mi></msub><mo>=</mo><msub><mi>w</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mtext>  </mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext>for j = 0,...,n-1</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo stretchy=\"false\">}</mo><mi>s</mi><mi>i</mi><mi>m</mi><mi>u</mi><mi>l</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>e</mi><mi>o</mi><mi>u</mi><mi>s</mi><mspace width=\"1em\"/><mi>u</mi><mi>p</mi><mi>d</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>s</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n&amp;repeat \\quad until  \\quad convergence: \\; \\lbrace \\\\\n&amp;  \\; \\; \\;w_j = w_j -  \\alpha \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)}  \\; &amp; \\text{for j = 0,...,n-1} \\\\ \n&amp;  \\; \\; \\;  \\; \\;b = b -  \\alpha \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)}) \\\\\n&amp;\\rbrace simultaneous \\quad updates\n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:9.7576em;vertical-align:-4.6288em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.1288em;\"><span style=\"top:-8.0899em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"></span></span><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"></span></span><span style=\"top:0.1677em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.6288em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.1288em;\"><span style=\"top:-8.0899em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\">re</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">er</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">ce</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">{</span></span></span><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.413em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:0.1677em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mclose\">}</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">im</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">lt</span><span class=\"mord mathnormal\">an</span><span class=\"mord mathnormal\">eo</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">es</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.6288em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.6288em;\"><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">for j = 0,...,n-1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>但是经过计算后会发现，即使代价函数不一样，但是对于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{w}、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>的偏导数计算后的形式还是与线性回归一样的，让我不由得发出感叹，妙啊。这里可能有朋友想要自己动手算一下，我稍微提个醒，注意这里的预测函数与线性回归的预测函数是不一样的，求到的时候别带错模型了，我第一次算的时候就使用线性回归模型带入的，然后发现模型带错了。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi><mspace width=\"1em\"/><mi>r</mi><mi>e</mi><mi>g</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>:</mo><mspace width=\"1em\"/><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">Linear \\quad regression: \\quad f_{\\vec{w},b}(\\vec{x})=\\vec{w}  \\cdot  \\vec{x}+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">in</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">re</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">ress</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7973em;vertical-align:-0.0833em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>o</mi><mi>g</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>c</mi><mspace width=\"1em\"/><mi>r</mi><mi>e</mi><mi>g</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>:</mo><mspace width=\"1em\"/><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">Logistic \\quad regression:  \\quad f_{\\vec{w},b}(\\vec{x})=\\frac{1}{1+e^{-(\\vec{w} \\cdot  \\vec{x}+b)}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">re</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">ress</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2889em;vertical-align:-0.4438em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.6146em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.822em;\"><span style=\"top:-2.822em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5357em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mbin mtight\">⋅</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\">x</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4438em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<h2 id=\"过拟合\">过拟合</h2>\n<p>对于预测模型，我们通常希望他能得到较为准确的预测结果，一个方法来提高准确性是通过多项式来拟合数据集。但是如果追求能完美拟合某数据集的模型，该模型往往会出现过拟合的现象。</p>\n<div style=\"display: flex; justify-content: space-between;\">\n    <img src=\"/img/x1.png\" alt=\"x1\" style=\"zoom:30%;\" />\n    <img src=\"/img/x2.png\" alt=\"x2\" style=\"zoom:30%;\" />\n</div>\n<div style=\"display: flex; justify-content: space-between;\">\n\t\t<img src=\"/img/x3.png\" alt=\"x3\" style=\"zoom:30%;\" />\n    <img src=\"/img/x4.png\" alt=\"x4\" style=\"zoom:30%;\" />\n</div>\n<p>上边的四张图片分别代表了4个不同的模型对于同一数据集的拟合情况。可以看到，对于更为复杂的模型，对数据集的拟合程度越好。接下来我会对数据集进行一些改动，然后再次用相同次数的多项式分别对数据集进行拟合。</p>\n<div style=\"display: flex; justify-content: space-between;\">\n    <img src=\"/img/x11.png\" alt=\"x11\" style=\"zoom:30%;\" />\n    <img src=\"/img/x22.png\" alt=\"x22\" style=\"zoom:30%;\" />\n</div>\n<div style=\"display: flex; justify-content: space-between;\">\n    <img src=\"/img/x33.png\" alt=\"x33\" style=\"zoom:30%;\" />\n    <img src=\"/img/x44.png\" alt=\"x44\" style=\"zoom:30%;\" />\n</div>\n<p>可以看出来，在对数据集行进了一些改动后，有两个现象：</p>\n<ul>\n<li>上边两个较为低次的多项式模型对数据集的拟合程度仍然不如下面两个高次模型</li>\n<li>对同一数据集进行微调前后，上边两个低次模型的拟合情况变化并不大；而下边两个高次模型在微调前后的拟合情况相差非常大</li>\n</ul>\n<p>这个时候下面两个高次的模型实际上已经出现了<strong>过拟合</strong>的现象。</p>\n<p>模型应该随着数据集的变化而变化，但是不应该因为数据集中的某个或某几个样本而发生明显的巨大变化。比如样本有10000个，而仅仅在添加或更改了其中一个样本后，模型前后就发生了巨大的变化，尽管他能完美拟合数据集中的样本，但是该模型其实并不能有效预测一个合理的值。比如在10000个肿瘤的样本中，如果我们的模型是过拟合的，那么很有可能出现这样一种情况：变化之前的模型在拟合数据集后，预测大小0.1的肿瘤是良性的，这个时候又多了一个样本，由于过拟合现象的存在，该模型发生了很大变化，变化后它很有可能预测刚刚那个0.1的肿瘤是恶性的。而没有过拟合现象的模型仍然会认为0.1的肿瘤是良性的。而这对比一下，明显是没有过拟合模型更合理一些。</p>\n<p>一些术语：欠拟合underfit&lt;=&gt;高偏差high bias、过拟合overfit&lt;=&gt;高方差high variance</p>\n<h2 id=\"解决过拟合\">解决过拟合</h2>\n<p>解决过拟合的方法有三种，分别是增加数据集的样本数量、选取和预测结果最相关的特征作为子集训练而不是训练整个数据集、正则化。</p>\n<ul>\n<li>增加样本数量：局限性比较大，毕竟实际情况中样本的数量不可能想有多少就有多少</li>\n<li>特征选择：这么做是为了选择与结果最为相关的特征进行训练，但是可能每一个特征都与预测结果直接相关，选择一个子集就会丢掉一些有用的特征</li>\n<li>正则化：如果说特征选择是直接消灭掉不太相关的特征，那么正则化做的就不那么绝对，它会削弱这些不太相关特征的影响，算是一种弱化版的“特征选择”</li>\n</ul>\n<p>正则化实现的方法是对代价函数进行改进，在原有的代价函数基础上增加一个正则化项以减小不同特征对于模型的影响，一般来讲只需要将<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>进行正则化而不需要对<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>进行正则化，因为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>是否正则化对结果影响并不大。所以正则化项往往只有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msubsup><mi>w</mi><mi>j</mi><mn>2</mn></msubsup></mrow><annotation encoding=\"application/x-tex\">\\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3898em;vertical-align:-0.4358em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">λ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.4413em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3948em;\"><span></span></span></span></span></span></span></span></span></span>(若想对<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>正则化，相应的添加<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msup><mi>b</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\frac{\\lambda}{2m}b^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2251em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">λ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>即可).其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>是正则化参数。</p>\n<hr>\n<p>线性回归的正则化：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><msubsup><mi>w</mi><mi>j</mi><mn>2</mn></msubsup></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{2m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})^2  + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0788em;vertical-align:-1.2777em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.188em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.2149em;vertical-align:-1.4138em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4138em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-2.453em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}^{(i)}) = \\vec{w} \\cdot \\vec{x}^{(i)} + b \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2291em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0213em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span></span></p>\n<hr>\n<p>逻辑回归的正则化：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mrow><mo fence=\"true\">[</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo>−</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow><mo>+</mo><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><msubsup><mi>w</mi><mi>j</mi><mn>2</mn></msubsup></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{m}  \\sum_{i=0}^{m-1} \\left[ -y^{(i)} \\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) \\right] + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0788em;vertical-align:-1.2777em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.2149em;vertical-align:-1.4138em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4138em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-2.453em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>+</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}^{(i)}) = sigmoid(\\vec{w} \\cdot \\vec{x}^{(i)} + b)= \\frac{1}{1+e^{-(\\vec{w} \\cdot \\vec{x} + b)}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2291em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0213em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1088em;vertical-align:-0.7873em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.296em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.814em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mbin mtight\">⋅</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\">x</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7873em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<hr>\n<p>对于改进后的代价函数，可以直观的看出<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>的作用（不要忘记我们的目的是缩小代价函数）：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>过小，那么正则化项对参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>的约束作用就不大。不妨想象<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi><mo>=</mo><mn>0</mn><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\lambda=0,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span></span></span></span>此时相当于没有对参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>正则化，也就无法有效解决过拟合的问题；若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>太大，为了使代价函数尽可能小，参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>不得不很小很小，那么参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>最终对模型起到了决定性作用，这显然也是不合理的。这样看来<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>似乎可以理解成正则化项的权重。</p>\n<p>正则化后再进行梯度下降</p>\n<hr>\n<p>线性回归梯度下降：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left right\" columnspacing=\"0em 1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>repeat until convergence:</mtext><mtext>  </mtext><mo stretchy=\"false\">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><msub><mi>w</mi><mi>j</mi></msub><mo>=</mo><msub><mi>w</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mtext>  </mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext>for j = 0,...,n-1</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo stretchy=\"false\">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n&amp;\\text{repeat until convergence:} \\; \\lbrace \\\\\n&amp;  \\; \\; \\;w_j = w_j -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial w_j}   \\; &amp; \\text{for j = 0,...,n-1} \\\\ \n&amp;  \\; \\; \\;  \\; \\;b = b -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial b} \\\\\n&amp;\\rbrace\n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:8.1121em;vertical-align:-3.8061em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.3061em;\"><span style=\"top:-6.8931em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.1069em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.2809em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8061em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.3061em;\"><span style=\"top:-6.8931em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">repeat until convergence:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">{</span></span></span><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9721em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span></span><span style=\"top:-2.1069em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-0.2809em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mclose\">}</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8061em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.8061em;\"><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">for j = 0,...,n-1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><msubsup><mi>w</mi><mi>j</mi><mn>2</mn></msubsup></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{2m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})^2  + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0788em;vertical-align:-1.2777em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.188em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.2149em;vertical-align:-1.4138em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4138em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-2.453em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>于是：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>+</mo><mfrac><mi>λ</mi><mi>m</mi></mfrac><msub><mi>w</mi><mi>j</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n\\frac{\\partial J(\\vec{w},b)}{\\partial w_j}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)}  +  \\frac{\\lambda}{m} w_j \\\\\n\\frac{\\partial J(\\vec{w},b)}{\\partial b}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)}) \n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6.7576em;vertical-align:-3.1288em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.6288em;\"><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9721em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1288em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.6288em;\"><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.413em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1288em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<hr>\n<p>逻辑回归梯度下降：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left right\" columnspacing=\"0em 1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>repeat until convergence:</mtext><mtext>  </mtext><mo stretchy=\"false\">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><msub><mi>w</mi><mi>j</mi></msub><mo>=</mo><msub><mi>w</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mtext>  </mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext>for j = 0,...,n-1</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo stretchy=\"false\">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n&amp;\\text{repeat until convergence:} \\; \\lbrace \\\\\n&amp;  \\; \\; \\;w_j = w_j -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial w_j}   \\; &amp; \\text{for j = 0,...,n-1} \\\\ \n&amp;  \\; \\; \\;  \\; \\;b = b -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial b} \\\\\n&amp;\\rbrace\n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:8.1121em;vertical-align:-3.8061em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.3061em;\"><span style=\"top:-6.8931em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.1069em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.2809em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8061em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.3061em;\"><span style=\"top:-6.8931em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">repeat until convergence:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">{</span></span></span><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9721em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span></span><span style=\"top:-2.1069em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-0.2809em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mclose\">}</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8061em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.8061em;\"><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">for j = 0,...,n-1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mrow><mo fence=\"true\">[</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo>−</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow><mo>+</mo><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><msubsup><mi>w</mi><mi>j</mi><mn>2</mn></msubsup></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{m}  \\sum_{i=0}^{m-1} \\left[ -y^{(i)} \\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) \\right] + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0788em;vertical-align:-1.2777em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.2149em;vertical-align:-1.4138em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4138em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-2.453em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>于是：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>+</mo><mfrac><mi>λ</mi><mi>m</mi></mfrac><msub><mi>w</mi><mi>j</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n\\frac{\\partial J(\\vec{w},b)}{\\partial w_j}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)}  +  \\frac{\\lambda}{m} w_j \\\\\n\\frac{\\partial J(\\vec{w},b)}{\\partial b}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)}) \n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6.7576em;vertical-align:-3.1288em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.6288em;\"><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9721em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1288em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.6288em;\"><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.413em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1288em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<hr>\n<p>同样，而这除了模型不一样，其余地方都是一样的。</p>\n<h1>一个问题</h1>\n<p>对正则化后的代价函数运行梯度下降时，对<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>的偏导数进行整理可以得到：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>j</mi></msub><mo>=</mo><msub><mi>w</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mo>=</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mfrac><mi>λ</mi><mi>m</mi></mfrac><mo stretchy=\"false\">)</mo><msub><mi>w</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">w_j = w_j -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial w_j} =(1-\\alpha \\frac{\\lambda}{m})w_j- \\alpha \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.5523em;vertical-align:-0.5423em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.0269em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2819em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5423em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">λ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4788em;vertical-align:-0.9777em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5011em;\"><span style=\"top:-2.1223em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop op-symbol small-op\">∑</span></span></span><span style=\"top:-3.95em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.4578em;vertical-align:-0.413em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.413em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>吴恩达依据<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mtext>、</mtext><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha 、\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">λ</span></span></span></span>都不大，因此<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>每次迭代都是乘一个小于1的数，于是每次他都会减小，以此来达到正则化的目的，对此有三个疑问：</p>\n<p>第一：学习率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>可以很小，因为过大了可能导致不收敛。但是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>一定也是一个比较小的值吗？或者说其与m的比值乘<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>一定小于1吗？</p>\n<p>第二：第一项仅仅是一次迭代中的一部分，并没有计算完，还有第二项呢，第二项的正负也没办法确定吧，那每次迭代<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>是变大变小不是都有可能吗？</p>\n<p>第三：正则化过程中参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>不一定要每次减小吧，不是找到一组合适的就可以吗？</p>\n<p>有这个问题是因为在没有正则化的梯度下降中，我们的目的是寻找一组合适的而不是最小的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{w} 、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>使得代价函数最小，而在该过程中只能保证代价函数是递减的，但是没有规定<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{w}、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>的增减变化。为此我也回去看了一下JupyterLab的C1_W1_Lab05_Gradient_Descent_Soln,证实了确实没有这样的规定，所以听到他那么说就有点儿不理解。</p>\n","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":"<p>同一系列的<a href=\"https://b-white07.github.io/posts/1ca572.html\">神经网络</a>和<a href=\"https://b-white07.github.io/posts/9915f4c8.html\">无监督学习</a>相关笔记点击查看</p>\n<h1>机器学习两种常见算法</h1>\n<h2 id=\"监督学习Supervised-Learning\">监督学习Supervised Learning</h2>\n<p>监督学习的目的是根据给定的数据集，来预测某一个想知道的结果，而数据集中的每一个数据都是有对应结果的。来看两个例子：</p>\n<ul>\n<li>\n<p>在预测房价的数据集中，保存着如100平米的房子的售价是1000万元、300平米的房子的售价是2500万元这样的信息。这里我们想知到的结果就是x平米的房子能卖多少钱，比如我们输入200，希望得到一个价格。</p>\n</li>\n<li>\n<p>在乳腺癌的数据集中，记录着如肿瘤大小为0.75mm是恶性的、肿瘤大小为0.01mm是良性的这种信息。这里我们想知道结果就是一个x大小的肿瘤是否为良性，比我我们输入0.45，希望他告诉我们是良性还是恶性。</p>\n</li>\n</ul>\n<h3 id=\"回归问题Regression\">回归问题Regression</h3>\n<p>在上述第一个举例中，我们要预测的房价其实是一种<strong>连续值</strong>，可以从几百万到几千万不等。<em><strong>回归问题</strong></em>就是针对这种<em><strong>连续值问题</strong></em>。</p>\n<h3 id=\"分类问题Classification\">分类问题Classification</h3>\n<p>在上述第二个举例中，我们要判断的是一个肿瘤是否为良性，只可能有两种结果，要么是良性，要么不是良性，明显这是一个<strong>离散值</strong>。<em><strong>分类问题</strong></em>解决的就是这种<em><strong>离散值问题</strong></em>。</p>\n<h2 id=\"无监督学习Unsupervised-Learning\">无监督学习Unsupervised Learning</h2>\n<p>无监督学习的目的是分析给定的数据集，寻找数据集中各数据的关系而不是想要得到一个结果。</p>\n<p>比如监督学习中预测房价的例子，监督学习做的是根据数据集中的房子大小这一特征来预测某一大小房子的价格。</p>\n<p>而在无监督学习中，房子大小和房子价格都会作为房子的特征，来分析房子之间的关系。比如他也许会将房子面积很大价格很高的那些房子归为一类，将房子面积很小但价格很高又归为一类等等.</p>\n<p>下面是Google news的一部分，可以看到新闻被分为了很多类别，这也许就可以用无监督学习分析每个新闻的特征，将特征相似的新闻归为一类：</p>\n<p><img src=\"/img/googlenews.png\" alt=\"google news\"></p>\n<h1>线性回归模型</h1>\n<h2 id=\"单变量线性回归\">单变量线性回归</h2>\n<p>先介绍几个符号以便说明：</p>\n<p>m：训练样本的数量</p>\n<p>x：输入变量（或特征）</p>\n<p>y：输出变量（或目标变量）</p>\n<h3 id=\"hypothesis函数\">hypothesis函数</h3>\n<p>单变量线性回归模型中，我们的目标是找到一条线性的hypothesis函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>w</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">f_{w,b}(x)= wx + b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>来拟合数据集中的数据，这样输入一个变量就能得到估计的结果。将数据集作为样本，通过学习算法的训练，就可以得到<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>，这样也就得到了目标函数。对于该函数，我们自然希望得到使误差尽可能小的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>，因此我们又引入了代价函数来计算<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f_{w,b}(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>的误差。</p>\n<h3 id=\"cost-function代价函数\">cost function代价函数</h3>\n<p>可以选取均方误差函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{2m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})^2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span>，我们的目标就是求得<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mtext>和</mtext><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">b和w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span>，使该函数的值最小。其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b} (\\vec{x}^{(i)})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>是输入第i个样本得到的估计值，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">y^{(i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0824em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span>是第i个样本的实际值。比如样本为(1,1)、(2,2)、(3,3),<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0.5</mn><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x})=0.5x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.5</span><span class=\"mord mathnormal\">x</span></span></span></span>,即<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>=</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>w</mi><mo>=</mo><mn>0.5</mn></mrow><annotation encoding=\"application/x-tex\">b=0,w=0.5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.5</span></span></span></span>.如图所示：</p>\n<p><img src=\"/img/costfun.png\" alt=\"\"></p>\n<p>则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><mo>≈</mo><mn>0.58</mn></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{2m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})^2}\\approx 0.58</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.58</span></span></span></span></p>\n<p>当然，不难看出当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo>=</mo><mn>1</mn><mtext>、</mtext><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">w=1、b=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>时，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>,此时便找到了我们所需要的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mtext>、</mtext><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">b 、 w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span>.</p>\n<hr>\n<p>上边的情况实际上我所选择的样本可以使<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">b=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>,相当于只有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span>一个参数，简化了问题。下面讨论一下更为实际的线性回归即两个参数都可以为任意值。</p>\n<p>此时不难发现，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>是关于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>的二元函数。为了方便描述，可以使用等高线来绘制<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>.下图所示为一组<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p><img src=\"/img/hxjtheta.png\" alt=\"\"></p>\n<p>等高线各椭圆的中心是我们的目标，此时我们得到的点（右图的红叉❌）很明显举例目标还有一段距离，因此反映在左图中，得到的假设函数与数据集的拟合程度肉眼可见的差。此时便需要重新计算<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>的值以生成更优秀的假设函数。一种比较常见的算法就是梯度下降算法。</p>\n<h3 id=\"Gradient-descent梯度下降算法\">Gradient descent梯度下降算法</h3>\n<p>使用梯度下降算法可以一次次迭代，最终找到可以使得<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>最小的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>.梯度下降算法可以应用于更一般的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>w</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(w_1,w_2,...,w_n,b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>函数，而不是仅仅能应用于线性回归的代价函数。</p>\n<p>单变量梯度下降算法描述如下：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi><mspace width=\"1em\"/><mi>u</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>l</mi><mspace width=\"1em\"/><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>n</mi><mi>c</mi><mi>e</mi><mspace width=\"1em\"/><mo stretchy=\"false\">{</mo></mrow><annotation encoding=\"application/x-tex\">repeat\\quad until\\quad  convergence \\quad\\{</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">re</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">er</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">ce</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">{</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mi>w</mi><mo>=</mo><mi>w</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad w=w-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad b=b -\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial b}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mclose\">}</span></span></span></span></p>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>为学习速率，反映了每次迭代时，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>变化的跨度，不宜太大也不宜太小; 对于一个固定不变的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>,由于偏导数是越来越小的，因此<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>的变化也会越来越小，最后收敛。</p>\n<p>另外再仔细观察一下该算法和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>会发现一个事实：由于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>是对m个样本的某种运算的求和形式，因此此处的偏导数也是一种求和形式，因此每次<em><strong>更新参数都遍历了整个样本</strong></em>，这种形式梯度下降可以叫做Batch gradient descent即批量梯度下降。还有两种方法是：1.每次迭代只采集一个样本，计算该样本损失函数的梯度并更新参数，这种方式叫随机梯度下降。当经过足够多迭代后，随机梯度下降也会收敛到全局最优。2.每次迭代选取一小部分训练样本，他是批量梯度下降和随机梯度下降的这种方法，叫<strong>小批量梯度下降</strong>，是现在常用的一种方法。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">w、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>初值可以都取为0，当然这不是固定的，根据具体情况可以灵活调整。但有一点要格外注意：<em><strong>二者要同时变化而不能先变一个，另一个再变</strong></em>：</p>\n<p>Correct:</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant=\"normal\">_</mi><mi>w</mi><mo>=</mo><mi>w</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">temp\\_w=w-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9251em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant=\"normal\">_</mi><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">temp\\_b=b-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial b}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0044em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo>=</mo><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant=\"normal\">_</mi><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">w=temp\\_w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9251em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>=</mo><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant=\"normal\">_</mi><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b=temp\\_b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0044em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\">b</span></span></span></span></p>\n<p>Incorrect:</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant=\"normal\">_</mi><mi>w</mi><mo>=</mo><mi>w</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">temp\\_w=w-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9251em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo>=</mo><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant=\"normal\">_</mi><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">w=temp\\_w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9251em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant=\"normal\">_</mi><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">temp\\_b=b-\\alpha\\frac{\\partial J(\\vec{w},b)}{\\partial b}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0044em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>=</mo><mi>t</mi><mi>e</mi><mi>m</mi><mi>p</mi><mi mathvariant=\"normal\">_</mi><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b=temp\\_b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0044em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">p</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\">b</span></span></span></span></p>\n<p>对于一般的代价函数，其形状不一定是图函数，因此对于不同的起点，可能找到不同的局部最优点：</p>\n<p><img src=\"/img/gradientdescent1.png\" alt=\"case1\"></p>\n<p><img src=\"/img/gradientdescent2.png\" alt=\"case2\"></p>\n<p>尽管起点相差很小，但最终得到的代价函数完全不一样。</p>\n<hr>\n<p>将该算法应用到线性回归模型中：</p>\n<p>说明一点：线性回归的代价函数总是一个凸函数，因此他不会出现一般代价函数的局部最优的情况，他总会收敛到全局最优。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x})=\\vec{w} \\vec{x}+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7973em;vertical-align:-0.0833em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{2m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})^2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo>:</mo><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>w</mi></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mrow><annotation encoding=\"application/x-tex\">w:\\frac{\\partial J(\\vec{w},b)}{\\partial w}=\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>:</mo><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">b:\\frac{\\partial J(\\vec{w},b)}{\\partial b}=\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>Gradient descent algorithm:</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi><mspace width=\"1em\"/><mi>u</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>l</mi><mspace width=\"1em\"/><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>n</mi><mi>c</mi><mi>e</mi><mspace width=\"1em\"/><mo stretchy=\"false\">{</mo></mrow><annotation encoding=\"application/x-tex\">repeat\\quad until\\quad  convergence\\quad \\{</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">re</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">er</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">ce</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">{</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mi>w</mi><mo>=</mo><mi>w</mi><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad w=w-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad b=b-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mclose\">}</span></span></span></span></p>\n<p><img src=\"/img/gradientdescent.gif\" alt=\"gradient descent\"></p>\n<p>这样就得到了一条拟合程度还不错的假设函数。</p>\n<h2 id=\"多变量线性回归\">多变量线性回归</h2>\n<h3 id=\"向量化多特征\">向量化多特征</h3>\n<p>实际情况往往不仅含一个特征，比如房价的预测不仅仅和房子大小有关，也和楼层、层高、位置等有关，此时就会出现多个特征。而要对多个特征逐一使用梯度下降算法的话，不仅代码冗长，且运算速度慢。为了解决这个问题，可以将多个特征记为向量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>=</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\vec{x}=(x_1,x_2,...,x_n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>.此时可以将假设函数记为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x})=\\vec{w}  \\cdot  \\vec{x}+b.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7973em;vertical-align:-0.0833em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord\">.</span></span></span></span>NumPy为向量运算提供了的方法，可以并行让硬件工作以加速运算。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">my_dot</span>(<span class=\"params\">a, b</span>): </span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">   Compute the dot product of two vectors</span></span><br><span class=\"line\"><span class=\"string\"> </span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">      a (ndarray (n,)):  input vector </span></span><br><span class=\"line\"><span class=\"string\">      b (ndarray (n,)):  input vector with same dimension as a</span></span><br><span class=\"line\"><span class=\"string\">    </span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">      x (scalar): </span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    x=<span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(a.shape[<span class=\"number\">0</span>]):</span><br><span class=\"line\">        x = x + a[i] * b[i]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> x</span><br><span class=\"line\">  </span><br><span class=\"line\">np.random.seed(<span class=\"number\">1</span>)</span><br><span class=\"line\">a = np.random.rand(<span class=\"number\">10000000</span>)  <span class=\"comment\"># very large arrays</span></span><br><span class=\"line\">b = np.random.rand(<span class=\"number\">10000000</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">tic = time.time()  <span class=\"comment\"># capture start time</span></span><br><span class=\"line\">c = np.dot(a, b)</span><br><span class=\"line\">toc = time.time()  <span class=\"comment\"># capture end time</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;np.dot(a, b) =  <span class=\"subst\">&#123;c:<span class=\"number\">.4</span>f&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Vectorized version duration: <span class=\"subst\">&#123;<span class=\"number\">1000</span>*(toc-tic):<span class=\"number\">.4</span>f&#125;</span> ms &quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">tic = time.time()  <span class=\"comment\"># capture start time</span></span><br><span class=\"line\">c = my_dot(a,b)</span><br><span class=\"line\">toc = time.time()  <span class=\"comment\"># capture end time</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;my_dot(a, b) =  <span class=\"subst\">&#123;c:<span class=\"number\">.4</span>f&#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;loop version duration: <span class=\"subst\">&#123;<span class=\"number\">1000</span>*(toc-tic):<span class=\"number\">.4</span>f&#125;</span> ms &quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">del</span>(a);<span class=\"keyword\">del</span>(b)  <span class=\"comment\">#remove these big arrays from memory</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># result</span></span><br><span class=\"line\">np.dot(a, b) =  <span class=\"number\">2501072.5817</span></span><br><span class=\"line\">Vectorized version duration: <span class=\"number\">13.3328</span> ms </span><br><span class=\"line\">my_dot(a, b) =  <span class=\"number\">2501072.5817</span></span><br><span class=\"line\">loop version duration: <span class=\"number\">1374.0389</span> ms </span><br></pre></td></tr></table></figure>\n<p>可以看出，本例中运算速度相差了100倍左右。</p>\n<h3 id=\"Normal-equation正规方程求解w、b\">Normal equation正规方程求解w、b</h3>\n<p>在说明多特征值线性回归梯度下降算法之前，介绍一种快速求解<strong>线性回归问题</strong>中w、b的方法：正规方程法。相较于梯度下降算法，正规方程有以下下局限性：</p>\n<ul>\n<li>只能应用于线性回归</li>\n<li>特征数量很多时，效率较低</li>\n</ul>\n<p>同时也有一些优点：</p>\n<ul>\n<li>不需要设置学习率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span></li>\n<li>不需要迭代，对于规模较小的特征，有不错的效率</li>\n</ul>\n<p>具体实现，留白，有空回来补</p>\n<h3 id=\"多特征线性回归梯度下降算法\">多特征线性回归梯度下降算法</h3>\n<p>和单特征线性回归梯度下降算法相似，只不过多了几个特征而已：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi><mspace width=\"1em\"/><mi>u</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>l</mi><mspace width=\"1em\"/><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>n</mi><mi>c</mi><mi>e</mi><mspace width=\"1em\"/><mo stretchy=\"false\">{</mo></mrow><annotation encoding=\"application/x-tex\">repeat\\quad until\\quad  convergence \\quad\\{</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">re</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">er</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">ce</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">{</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><msub><mi>w</mi><mn>1</mn></msub><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msubsup><mi>x</mi><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad w_1=w_1-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}_1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3898em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4337em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2663em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><msub><mi>w</mi><mn>2</mn></msub><mo>=</mo><msub><mi>w</mi><mn>2</mn></msub><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msubsup><mi>x</mi><mn>2</mn><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad w_2=w_2-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}_2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3898em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4337em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2663em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mspace width=\"1em\"/><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad\\quad \\vdots</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.53em;vertical-align:-0.03em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><msub><mi>w</mi><mi>n</mi></msub><mo>=</mo><msub><mi>w</mi><mi>n</mi></msub><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msubsup><mi>x</mi><mi>n</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad w_n=w_n-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}_n}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3898em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1166em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad b=b -\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mclose\">}</span></span></span></span></p>\n<h3 id=\"特征缩放\">特征缩放</h3>\n<p>当多个特征的取值范围相差很大时，梯度下降算法运行的很慢，此时需要将多个特征值缩放到一个相近的范围内，同时保证这个范围不要太大像-100-100，或者太小像-0.0001-0.0001.</p>\n<p>比如现在有两个特征房子的大小<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>300</mn><mo>⩽</mo><msub><mi>x</mi><mn>1</mn></msub><mo>⩽</mo><mn>1000</mn></mrow><annotation encoding=\"application/x-tex\">300\\leqslant x_1 \\leqslant1000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7811em;vertical-align:-0.1367em;\"></span><span class=\"mord\">300</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7867em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1000</span></span></span></span>和房子的层高<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>⩽</mo><msub><mi>x</mi><mn>2</mn></msub><mo>⩽</mo><mn>6</mn></mrow><annotation encoding=\"application/x-tex\">0\\leqslant x_2\\leqslant6</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7811em;vertical-align:-0.1367em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7867em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">6</span></span></span></span>，此时两个特征的范围相差较大，需要对特征进行放缩以得到更好的梯度下降效果。</p>\n<p><img src=\"/img/origin.png\" alt=\"origin\"></p>\n<h4 id=\"除以最大值\">除以最大值</h4>\n<p>比较简单的一个方法，就是将各特征除以该特征的最大值，这样就可以得到的新特征的范围便可以满足要求。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>进行该操作后，范围变成了<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0.3</mn><mo>⩽</mo><msub><mi>x</mi><mrow><mn>1</mn><mo separator=\"true\">,</mo><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>⩽</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0.3\\leqslant x_{1,scaled} \\leqslant1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7811em;vertical-align:-0.1367em;\"></span><span class=\"mord\">0.3</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9228em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">sc</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>⩽</mo><msub><mi>x</mi><mrow><mn>2</mn><mo separator=\"true\">,</mo><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>⩽</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0\\leqslant x_{2,scaled} \\leqslant 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7811em;vertical-align:-0.1367em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9228em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">sc</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>，此时就可以很好的运行梯度下降算法。</p>\n<p><img src=\"/img/divideMax.png\" alt=\"divideMax\"></p>\n<h4 id=\"Mean-normalization\">Mean normalization</h4>\n<p>均值归一化首先要计算每个特征的平均值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>μ</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mu_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,然后将原特征<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>放缩为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>=</mo><mfrac><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>μ</mi><mi>i</mi></msub></mrow><mrow><mi>M</mi><mi>a</mi><mi>x</mi><mo>−</mo><mi>M</mi><mi>i</mi><mi>n</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">x_{i,scaled}=\\frac{x_i - \\mu_i}{Max-Min}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">sc</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2578em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8544em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal mtight\">in</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>,<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi><mi>a</mi><mi>x</mi><mtext>、</mtext><mi>M</mi><mi>i</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">Max、Min</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mord mathnormal\">in</span></span></span></span>分别为原特征的最大和最小值。即使原特征都为正，均值归一化后的特征也会出现负数，且分布在原点附近。</p>\n<p><img src=\"/img/meannormalization.png\" alt=\"meannormalization\"></p>\n<h4 id=\"Z-score-normalize\">Z-score normalize</h4>\n<p>Z-score归一化首先要计算每个特征的平均值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>μ</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mu_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>和标准差<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>σ</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\sigma_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,然后将原特征<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>放缩为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>s</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>e</mi><mi>d</mi></mrow></msub><mo>=</mo><mfrac><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>μ</mi><mi>i</mi></msub></mrow><msub><mi>σ</mi><mi>i</mi></msub></mfrac></mrow><annotation encoding=\"application/x-tex\">x_{i,scaled}=\\frac{x_i-\\mu_i}{\\sigma_i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">sc</span><span class=\"mord mathnormal mtight\">a</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2995em;vertical-align:-0.4451em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8544em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4461em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>.同样的，可以看出，归一化后的特征也会出现正负。</p>\n<p><img src=\"/img/Znormalization.png\" alt=\"Znormalization\"></p>\n<hr>\n<p>下面举个例子判断一下某个特征是否需要rescale:</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>⩽</mo><msub><mi>x</mi><mn>1</mn></msub><mo>⩽</mo><mn>3</mn><mtext>、</mtext><mo>−</mo><mn>2</mn><mo>⩽</mo><msub><mi>x</mi><mn>2</mn></msub><mo>⩽</mo><mn>0.5</mn><mtext>、</mtext><mo>−</mo><mn>100</mn><mo>⩽</mo><msub><mi>x</mi><mn>3</mn></msub><mo>⩽</mo><mn>100</mn><mtext>、</mtext><mo>−</mo><mn>0.001</mn><mo>⩽</mo><msub><mi>x</mi><mn>1</mn></msub><mo>⩽</mo><mn>0.001</mn><mtext>、</mtext><mn>98.6</mn><mo>⩽</mo><msub><mi>x</mi><mn>1</mn></msub><mo>⩽</mo><mn>105</mn></mrow><annotation encoding=\"application/x-tex\">0\\leqslant x_1\\leqslant3、-2\\leqslant x_2\\leqslant0.5、-100\\leqslant x_3\\leqslant100、-0.001\\leqslant x_1\\leqslant0.001、98.6\\leqslant x_1\\leqslant105</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7811em;vertical-align:-0.1367em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7867em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">3</span><span class=\"mord cjk_fallback\">、</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7811em;vertical-align:-0.1367em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7867em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">0.5</span><span class=\"mord cjk_fallback\">、</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7811em;vertical-align:-0.1367em;\"></span><span class=\"mord\">100</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7867em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord\">100</span><span class=\"mord cjk_fallback\">、</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7811em;vertical-align:-0.1367em;\"></span><span class=\"mord\">0.001</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7867em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.82em;vertical-align:-0.1367em;\"></span><span class=\"mord\">0.001</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\">98.6</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7867em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel amsrm\">⩽</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">105</span></span></span></span></p>\n<p>简单判断一下，其实<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mtext>、</mtext><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1、x_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>范围相差不太，且范围跨度合理，不需要rescale.而<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>3</mn></msub><mtext>、</mtext><msub><mi>x</mi><mn>4</mn></msub><mtext>、</mtext><msub><mi>x</mi><mn>5</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_3、x_4、x_5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>要么太大，要么太小，因此需要放缩一下，向<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mtext>、</mtext><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1、x_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>看齐。</p>\n<p>如果一个特征的范围比较暧昧，对他进行放缩就可以，因为放缩到合适的尺度不会对算法有什么负面效果。</p>\n<h3 id=\"判断梯度下降是否收敛\">判断梯度下降是否收敛</h3>\n<p>一个方法是可以观察y轴为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>、x轴为迭代次数的图像，通过斜率可以大概判断是否收敛：</p>\n<p><img src=\"/img/converge.png\" alt=\"\"></p>\n<p>当迭代次数达到400时，斜率几乎为0，此时便可以判断出函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>已经收敛。</p>\n<hr>\n<p>另一个方法是自动收敛测试，该方法需要选择一个合适的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>,当在某一次迭代中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>的值小于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>时，则认为此时的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{w},b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9084em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>可以是算法收敛。但是寻找合适的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>值不是容易的事情，因此第一种方法可能更常用。</p>\n<h3 id=\"学习率的设置\">学习率的设置</h3>\n<p>直观来讲，学习率是一个影响代价参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{w},b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9084em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>变化幅度的量，因此学习率的设置不宜过大也不宜过小。若过大可能会导致得到的新参数使<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>每次都越过最小值点，进而使该函数发散。若学习率过小，则会使函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>收敛的太慢了。要注意的是，合理的学习率总能使函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>随迭代次数单调递减，若出现了下图上边的两种情况，要么是学习率设置太大了，要么是程序代码出现了Bug.</p>\n<p><img src=\"/img/%E5%AD%A6%E4%B9%A0%E7%8E%87.png\" alt=\"学习率\"></p>\n<p>通常可以依次尝试这几个学习率：0.001、0.003、0.01、0.03、0.1、0.3、1、…</p>\n<p>即从0.001开始，每次扩大大约3倍，或者缩小3倍左右。</p>\n<p>这样一次次尝试后，可以找到一个最大值和一个最小值，为了使收敛的速度更快一些，可以选择比找到的最大值小一些的可以使<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>收敛的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>值。</p>\n<h3 id=\"特征工程\">特征工程</h3>\n<p>特征工程就是将原本的一些特征进行组合，得到一些新的特征，这样也许可以使模型更加精准。</p>\n<p>如原数据集中有房子的长和宽两个特征<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mtext>、</mtext><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1、x_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,此时的房价预测模型可以是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x})=w_1x_1+w_2x_2+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>.</p>\n<p>现在我们可以让<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>3</mn></msub><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><mo>×</mo><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_3=x_1 \\times x_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,这样就可以得到一个新的模型<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><msub><mi>w</mi><mn>3</mn></msub><msub><mi>x</mi><mn>3</mn></msub><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x})=w_1x_1+w_2x_2+w_3x_3+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>.</p>\n<h3 id=\"多项式回归\">多项式回归</h3>\n<p>线性回归中我们使用线性函数来拟合数据集，多项是回归中，我们可以使用非线性的函数来拟合数据集。</p>\n<p><img src=\"/img/polyregression.png\" alt=\"polyregression\"></p>\n<p>如图，这个数据集如果用线性函数来拟合的话，很明显不太合适。可以选择<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msqrt><mi>x</mi></msqrt><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(x)=w_1x+w_2 \\sqrt{x}+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.04em;vertical-align:-0.2397em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8003em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-2.7603em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2397em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>.这其实也用到了特征工程，因为我们对原始的特征取了根号。</p>\n<p>需要注意的是，在使用多项式回归的时候，不同的特征范围的差别可能很大，比如对同一特征的平方和立方，这是要记得使用特征缩放让他们处于一个相对合理的范围。</p>\n<h1>逻辑回归模型</h1>\n<p>逻辑回归模型可用于<strong>二元分类问题</strong>，其形式为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}) = g(z) = \\frac{1}{1+e^{-z}},</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2484em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7027em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span></span></span></span>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">z=\\vec{w}  \\cdot  \\vec{x}+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7973em;vertical-align:-0.0833em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>.不难看出<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>z</mi><mo>→</mo><mo>−</mo><mi mathvariant=\"normal\">∞</mi></mrow></munder><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0</mn><mo separator=\"true\">,</mo><mstyle scriptlevel=\"0\" displaystyle=\"true\"><munder><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>z</mi><mo>→</mo><mo>+</mo><mi mathvariant=\"normal\">∞</mi></mrow></munder><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn></mstyle></mstyle></mrow><annotation encoding=\"application/x-tex\">\\displaystyle \\lim_{z \\to -\\infin} g(z) = 0,\\displaystyle \\lim_{z \\to +\\infin} g(z) = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.5083em;vertical-align:-0.7583em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-2.4em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">−</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">lim</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7583em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.5083em;vertical-align:-0.7583em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-2.4em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"mrel mtight\">→</span><span class=\"mord mtight\">+</span><span class=\"mord mtight\">∞</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop\">lim</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7583em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>,即该函数的输出值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\hat{y}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span></span></span></span>在零和一之间，因此可以用于表示<strong>某事件发生的概率</strong>，则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo>=</mo><mn>1</mn><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo separator=\"true\">;</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo>=</mo><mn>0</mn><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo separator=\"true\">;</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1.</mn></mrow><annotation encoding=\"application/x-tex\">P(y=1|x;\\vec{w},b)+P(y=0|x;\\vec{w},b)=1.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1∣</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0∣</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1.</span></span></span></span></p>\n<img src=\"/img/sigomid.png\" alt=\"sigomid\" style=\"zoom:50%;\" />\n<p>我们可以设置一个threshold=0.5,当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>&lt;</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>&lt;</mo><mn>0.5</mn></mrow><annotation encoding=\"application/x-tex\">0&lt;g(z)&lt;0.5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6835em;vertical-align:-0.0391em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.5</span></span></span></span>时<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\hat{y} = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>，当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0.5</mn><mo>≤</mo><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0.5 \\le g(z)&lt;1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">0.5</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>时<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>y</mi><mo>^</mo></mover><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">\\hat{y} = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6944em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1944em;\"><span class=\"mord\">^</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1944em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>.</p>\n<p>可以看出当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">z=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>时，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>0.5</mn></mrow><annotation encoding=\"application/x-tex\">g(z)=0.5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0.5</span></span></span></span>.而<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">z=\\vec{w}  \\cdot  \\vec{x}+b=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7973em;vertical-align:-0.0833em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>这条线称之为<em><strong>决策边界</strong></em>。和线性回归一样，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w},\\vec{x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9084em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>可以是线性组合，也可以是多项式，因此决策边界也可以是线性或者非线性。它的作用就是区分出模型预测出的结果，即决策边界的两侧代表着不同的预测结果。如下图两种不同的决策边界：</p>\n<img src=\"/img/decisionboundaryline.png\" alt=\"decisionboundaryline\" style=\"zoom:40%;\" />\n<img src=\"/img/decision boundarylog.png\" alt=\"decision boundarylog\" style=\"zoom:40%;\" />\n<p>下面以肿瘤为例看一下为什么对于二元分类问题，线性回归模型不能解决：</p>\n<img src=\"/img/linearmodel1.png\" alt=\"linearmodel1\" style=\"zoom:40%;\" />\n<img src=\"/img/linearmodel2.png\" alt=\"linearmodel2\" style=\"zoom:40%;\" />\n<p>对比以上两幅图片不难看出，若肿瘤大小分别在较小处和较大处的聚集，线性回归对于肿瘤性质的判断会出现越来越大的误差，这显然是不正确的。而逻辑回归模型则可以解决这一问题：</p>\n<img src=\"/img/logistic1.png\" alt=\"logistic1\" style=\"zoom:50%;\" />\n<img src=\"/img/logistic2.png\" alt=\"logistic2\" style=\"zoom:50%;\" />\n<p>可以看出，逻辑回归模型在两端数据聚集时的表现仍然出色。</p>\n<h2 id=\"代价函数\">代价函数</h2>\n<p>线性回归中使用平方误差函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{2m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})^2}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.233em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span>作为代价函数。对于线性回归，该函数总是严格的凸函数，因此总会找到是该函数收敛到全局最低的w、b.而逻辑回归中若使用该函数作为代价函数，会发现其图像并不是严格的凸函数，也就无法找到w、b使其收敛到全局最小值，因此需要使用其他函数作为代价函数。</p>\n<img src=\"/img/costfunvs.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<p>逻辑回归中的代价函数为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mrow><mo fence=\"true\">[</mo><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{m} \\sum_{i=0}^{m-1} \\left[ loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)}) \\right]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.304em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">[</span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">]</span></span></span></span></span></span>,其中</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)}) = \\left\\{\\begin{matrix}\n -\\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right), &amp; if \\quad y^{(i)}=1\\\\\n -\\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right), &amp; if \\quad  y^{(i)}=0\\\\\n\\end{matrix}\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.496em;vertical-align:-0.998em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.498em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-2.362em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.998em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.498em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.362em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.998em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<p>可化简为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo>−</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)}) = -y^{(i)} \\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2291em;vertical-align:-0.2911em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>表示单个样本的误差（代价函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J()</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span></span></span></span>则需要遍历整个样本），不要忘记<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo>≤</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 \\le f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\le 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7804em;vertical-align:-0.136em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.238em;vertical-align:-0.35em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size1\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>,其图像如下：</p>\n<img src=\"/img/loss1.png\" alt=\"loss1\" style=\"zoom:50%;\" />\n<img src=\"/img/loss0.png\" alt=\"loss0\" style=\"zoom:50%;\" />\n<p>可以看出：</p>\n<ul>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">if \\quad y=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></p>\n<ul>\n<li>\n<p>若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>→</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo><mo>→</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow1,loss() \\rightarrow0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>,即损失很小，说明预测结果准确</p>\n</li>\n<li>\n<p>若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>→</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 0,loss() \\rightarrow \\infin</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>,即损失很大，说明预测结果不准确</p>\n</li>\n</ul>\n<p>而此时<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">y=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>表明恶性肿瘤，这与这与损失很小的情况即<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>→</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>预测的结果相吻合。</p>\n</li>\n<li>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">if \\quad y=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span></p>\n<ul>\n<li>\n<p>若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>→</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo><mo>→</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 0,loss() \\rightarrow 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>,即损失很小，说明预测结果准确</p>\n</li>\n<li>\n<p>若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>→</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 1,loss() \\rightarrow \\infin</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>,即损失很大，说明预测结果不准确</p>\n</li>\n</ul>\n<p>而此时<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">y=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>表明是良性肿瘤，这与损失很小的情况即<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>→</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}^{(i)}) \\rightarrow 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1791em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">0</span></span></span></span>预测的结果相吻合。</p>\n</li>\n</ul>\n<p>别忘记了代价函数是要寻找参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mtext>、</mtext><mi>b</mi><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\vec{w}、b,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9084em;vertical-align:-0.1944em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span></span></span></span>当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo><mo>→</mo><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">loss() \\rightarrow \\infin</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">→</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span>时说明此时的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{w}、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>并不合适，接下来就可以利用梯度下降迭代寻找<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mtext>、</mtext><mi>b</mi><mi mathvariant=\"normal\">.</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{w}、b.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span><span class=\"mord\">.</span></span></span></span></p>\n<p>对了还有一点需要指出，高等数学中常用<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">ln</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span></span></span></span>表示底数为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">e</span></span></span></span>的对数函数，但是此处的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">log</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>实际上也是底数为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">e</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">e</span></span></span></span>,不过没有采用前边的写法。</p>\n<h2 id=\"梯度下降\">梯度下降</h2>\n<p>算法的原理与线性回归类似，只不过由于预测函数和代价函数都不一样：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left right\" columnspacing=\"0em 1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>repeat until convergence:</mtext><mtext>  </mtext><mo stretchy=\"false\">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><msub><mi>w</mi><mi>j</mi></msub><mo>=</mo><msub><mi>w</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mtext>  </mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext>for j = 0,...,n-1</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo stretchy=\"false\">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n&amp;\\text{repeat until convergence:} \\; \\lbrace \\\\\n&amp;  \\; \\; \\;w_j = w_j -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial w_j}  \\; &amp; \\text{for j = 0,...,n-1} \\\\ \n&amp;  \\; \\; \\;  \\; \\;b = b -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial b} \\\\\n&amp;\\rbrace\n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:8.1121em;vertical-align:-3.8061em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.3061em;\"><span style=\"top:-6.8931em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.1069em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.2809em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8061em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.3061em;\"><span style=\"top:-6.8931em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">repeat until convergence:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">{</span></span></span><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9721em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span></span><span style=\"top:-2.1069em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-0.2809em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mclose\">}</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8061em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.8061em;\"><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">for j = 0,...,n-1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n\\frac{\\partial J(\\vec{w},b)}{\\partial w_j}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)} \\\\\n\\frac{\\partial J(\\vec{w},b)}{\\partial b}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)}) \n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6.7576em;vertical-align:-3.1288em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.6288em;\"><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9721em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1288em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.6288em;\"><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.413em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1288em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>于是，逻辑回归的梯度下降算法就变成了：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left right\" columnspacing=\"0em 1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mi>r</mi><mi>e</mi><mi>p</mi><mi>e</mi><mi>a</mi><mi>t</mi><mspace width=\"1em\"/><mi>u</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>l</mi><mspace width=\"1em\"/><mi>c</mi><mi>o</mi><mi>n</mi><mi>v</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi><mi>n</mi><mi>c</mi><mi>e</mi><mo>:</mo><mtext>  </mtext><mo stretchy=\"false\">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><msub><mi>w</mi><mi>j</mi></msub><mo>=</mo><msub><mi>w</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mtext>  </mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext>for j = 0,...,n-1</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo stretchy=\"false\">}</mo><mi>s</mi><mi>i</mi><mi>m</mi><mi>u</mi><mi>l</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>e</mi><mi>o</mi><mi>u</mi><mi>s</mi><mspace width=\"1em\"/><mi>u</mi><mi>p</mi><mi>d</mi><mi>a</mi><mi>t</mi><mi>e</mi><mi>s</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n&amp;repeat \\quad until  \\quad convergence: \\; \\lbrace \\\\\n&amp;  \\; \\; \\;w_j = w_j -  \\alpha \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)}  \\; &amp; \\text{for j = 0,...,n-1} \\\\ \n&amp;  \\; \\; \\;  \\; \\;b = b -  \\alpha \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)}) \\\\\n&amp;\\rbrace simultaneous \\quad updates\n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:9.7576em;vertical-align:-4.6288em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.1288em;\"><span style=\"top:-8.0899em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"></span></span><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"></span></span><span style=\"top:0.1677em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.6288em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.1288em;\"><span style=\"top:-8.0899em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord mathnormal\">re</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">co</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">er</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">ce</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">{</span></span></span><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.413em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span style=\"top:0.1677em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mclose\">}</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">im</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">lt</span><span class=\"mord mathnormal\">an</span><span class=\"mord mathnormal\">eo</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">es</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.6288em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.6288em;\"><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">for j = 0,...,n-1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>但是经过计算后会发现，即使代价函数不一样，但是对于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{w}、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>的偏导数计算后的形式还是与线性回归一样的，让我不由得发出感叹，妙啊。这里可能有朋友想要自己动手算一下，我稍微提个醒，注意这里的预测函数与线性回归的预测函数是不一样的，求到的时候别带错模型了，我第一次算的时候就使用线性回归模型带入的，然后发现模型带错了。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>a</mi><mi>r</mi><mspace width=\"1em\"/><mi>r</mi><mi>e</mi><mi>g</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>:</mo><mspace width=\"1em\"/><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">Linear \\quad regression: \\quad f_{\\vec{w},b}(\\vec{x})=\\vec{w}  \\cdot  \\vec{x}+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">in</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">re</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">ress</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7973em;vertical-align:-0.0833em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>o</mi><mi>g</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>i</mi><mi>c</mi><mspace width=\"1em\"/><mi>r</mi><mi>e</mi><mi>g</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>:</mo><mspace width=\"1em\"/><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">Logistic \\quad regression:  \\quad f_{\\vec{w},b}(\\vec{x})=\\frac{1}{1+e^{-(\\vec{w} \\cdot  \\vec{x}+b)}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">re</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">ress</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0411em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2889em;vertical-align:-0.4438em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.6146em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.822em;\"><span style=\"top:-2.822em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5357em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mbin mtight\">⋅</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\">x</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4438em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<h2 id=\"过拟合\">过拟合</h2>\n<p>对于预测模型，我们通常希望他能得到较为准确的预测结果，一个方法来提高准确性是通过多项式来拟合数据集。但是如果追求能完美拟合某数据集的模型，该模型往往会出现过拟合的现象。</p>\n<div style=\"display: flex; justify-content: space-between;\">\n    <img src=\"/img/x1.png\" alt=\"x1\" style=\"zoom:30%;\" />\n    <img src=\"/img/x2.png\" alt=\"x2\" style=\"zoom:30%;\" />\n</div>\n<div style=\"display: flex; justify-content: space-between;\">\n\t\t<img src=\"/img/x3.png\" alt=\"x3\" style=\"zoom:30%;\" />\n    <img src=\"/img/x4.png\" alt=\"x4\" style=\"zoom:30%;\" />\n</div>\n<p>上边的四张图片分别代表了4个不同的模型对于同一数据集的拟合情况。可以看到，对于更为复杂的模型，对数据集的拟合程度越好。接下来我会对数据集进行一些改动，然后再次用相同次数的多项式分别对数据集进行拟合。</p>\n<div style=\"display: flex; justify-content: space-between;\">\n    <img src=\"/img/x11.png\" alt=\"x11\" style=\"zoom:30%;\" />\n    <img src=\"/img/x22.png\" alt=\"x22\" style=\"zoom:30%;\" />\n</div>\n<div style=\"display: flex; justify-content: space-between;\">\n    <img src=\"/img/x33.png\" alt=\"x33\" style=\"zoom:30%;\" />\n    <img src=\"/img/x44.png\" alt=\"x44\" style=\"zoom:30%;\" />\n</div>\n<p>可以看出来，在对数据集行进了一些改动后，有两个现象：</p>\n<ul>\n<li>上边两个较为低次的多项式模型对数据集的拟合程度仍然不如下面两个高次模型</li>\n<li>对同一数据集进行微调前后，上边两个低次模型的拟合情况变化并不大；而下边两个高次模型在微调前后的拟合情况相差非常大</li>\n</ul>\n<p>这个时候下面两个高次的模型实际上已经出现了<strong>过拟合</strong>的现象。</p>\n<p>模型应该随着数据集的变化而变化，但是不应该因为数据集中的某个或某几个样本而发生明显的巨大变化。比如样本有10000个，而仅仅在添加或更改了其中一个样本后，模型前后就发生了巨大的变化，尽管他能完美拟合数据集中的样本，但是该模型其实并不能有效预测一个合理的值。比如在10000个肿瘤的样本中，如果我们的模型是过拟合的，那么很有可能出现这样一种情况：变化之前的模型在拟合数据集后，预测大小0.1的肿瘤是良性的，这个时候又多了一个样本，由于过拟合现象的存在，该模型发生了很大变化，变化后它很有可能预测刚刚那个0.1的肿瘤是恶性的。而没有过拟合现象的模型仍然会认为0.1的肿瘤是良性的。而这对比一下，明显是没有过拟合模型更合理一些。</p>\n<p>一些术语：欠拟合underfit&lt;=&gt;高偏差high bias、过拟合overfit&lt;=&gt;高方差high variance</p>\n<h2 id=\"解决过拟合\">解决过拟合</h2>\n<p>解决过拟合的方法有三种，分别是增加数据集的样本数量、选取和预测结果最相关的特征作为子集训练而不是训练整个数据集、正则化。</p>\n<ul>\n<li>增加样本数量：局限性比较大，毕竟实际情况中样本的数量不可能想有多少就有多少</li>\n<li>特征选择：这么做是为了选择与结果最为相关的特征进行训练，但是可能每一个特征都与预测结果直接相关，选择一个子集就会丢掉一些有用的特征</li>\n<li>正则化：如果说特征选择是直接消灭掉不太相关的特征，那么正则化做的就不那么绝对，它会削弱这些不太相关特征的影响，算是一种弱化版的“特征选择”</li>\n</ul>\n<p>正则化实现的方法是对代价函数进行改进，在原有的代价函数基础上增加一个正则化项以减小不同特征对于模型的影响，一般来讲只需要将<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>进行正则化而不需要对<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>进行正则化，因为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>是否正则化对结果影响并不大。所以正则化项往往只有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msubsup><mi>w</mi><mi>j</mi><mn>2</mn></msubsup></mrow><annotation encoding=\"application/x-tex\">\\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3898em;vertical-align:-0.4358em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">λ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.954em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.4413em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3948em;\"><span></span></span></span></span></span></span></span></span></span>(若想对<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>正则化，相应的添加<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><msup><mi>b</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\frac{\\lambda}{2m}b^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2251em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">λ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>即可).其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>是正则化参数。</p>\n<hr>\n<p>线性回归的正则化：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><msubsup><mi>w</mi><mi>j</mi><mn>2</mn></msubsup></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{2m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})^2  + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0788em;vertical-align:-1.2777em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.188em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.2149em;vertical-align:-1.4138em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4138em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-2.453em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}^{(i)}) = \\vec{w} \\cdot \\vec{x}^{(i)} + b \n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2291em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0213em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span></span></p>\n<hr>\n<p>逻辑回归的正则化：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mrow><mo fence=\"true\">[</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo>−</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow><mo>+</mo><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><msubsup><mi>w</mi><mi>j</mi><mn>2</mn></msubsup></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{m}  \\sum_{i=0}^{m-1} \\left[ -y^{(i)} \\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) \\right] + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0788em;vertical-align:-1.2777em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.2149em;vertical-align:-1.4138em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4138em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-2.453em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>+</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">f_{\\vec{w},b}(\\vec{x}^{(i)}) = sigmoid(\\vec{w} \\cdot \\vec{x}^{(i)} + b)= \\frac{1}{1+e^{-(\\vec{w} \\cdot \\vec{x} + b)}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2291em;vertical-align:-0.2911em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0213em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1088em;vertical-align:-0.7873em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.296em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.814em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mbin mtight\">⋅</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\">x</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7873em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<hr>\n<p>对于改进后的代价函数，可以直观的看出<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>的作用（不要忘记我们的目的是缩小代价函数）：若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>过小，那么正则化项对参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>的约束作用就不大。不妨想象<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi><mo>=</mo><mn>0</mn><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">\\lambda=0,</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord\">0</span><span class=\"mpunct\">,</span></span></span></span>此时相当于没有对参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>正则化，也就无法有效解决过拟合的问题；若<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>太大，为了使代价函数尽可能小，参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>不得不很小很小，那么参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>最终对模型起到了决定性作用，这显然也是不合理的。这样看来<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>似乎可以理解成正则化项的权重。</p>\n<p>正则化后再进行梯度下降</p>\n<hr>\n<p>线性回归梯度下降：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left right\" columnspacing=\"0em 1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>repeat until convergence:</mtext><mtext>  </mtext><mo stretchy=\"false\">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><msub><mi>w</mi><mi>j</mi></msub><mo>=</mo><msub><mi>w</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mtext>  </mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext>for j = 0,...,n-1</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo stretchy=\"false\">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n&amp;\\text{repeat until convergence:} \\; \\lbrace \\\\\n&amp;  \\; \\; \\;w_j = w_j -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial w_j}   \\; &amp; \\text{for j = 0,...,n-1} \\\\ \n&amp;  \\; \\; \\;  \\; \\;b = b -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial b} \\\\\n&amp;\\rbrace\n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:8.1121em;vertical-align:-3.8061em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.3061em;\"><span style=\"top:-6.8931em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.1069em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.2809em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8061em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.3061em;\"><span style=\"top:-6.8931em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">repeat until convergence:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">{</span></span></span><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9721em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span></span><span style=\"top:-2.1069em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-0.2809em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mclose\">}</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8061em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.8061em;\"><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">for j = 0,...,n-1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><msubsup><mi>w</mi><mi>j</mi><mn>2</mn></msubsup></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{2m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})^2  + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0788em;vertical-align:-1.2777em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.188em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.2149em;vertical-align:-1.4138em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4138em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-2.453em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>于是：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>+</mo><mfrac><mi>λ</mi><mi>m</mi></mfrac><msub><mi>w</mi><mi>j</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n\\frac{\\partial J(\\vec{w},b)}{\\partial w_j}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)}  +  \\frac{\\lambda}{m} w_j \\\\\n\\frac{\\partial J(\\vec{w},b)}{\\partial b}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)}) \n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6.7576em;vertical-align:-3.1288em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.6288em;\"><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9721em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1288em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.6288em;\"><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.413em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1288em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<hr>\n<p>逻辑回归梯度下降：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left right\" columnspacing=\"0em 1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>repeat until convergence:</mtext><mtext>  </mtext><mo stretchy=\"false\">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><msub><mi>w</mi><mi>j</mi></msub><mo>=</mo><msub><mi>w</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mtext>  </mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mtext>for j = 0,...,n-1</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo stretchy=\"false\">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n&amp;\\text{repeat until convergence:} \\; \\lbrace \\\\\n&amp;  \\; \\; \\;w_j = w_j -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial w_j}   \\; &amp; \\text{for j = 0,...,n-1} \\\\ \n&amp;  \\; \\; \\;  \\; \\;b = b -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial b} \\\\\n&amp;\\rbrace\n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:8.1121em;vertical-align:-3.8061em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.3061em;\"><span style=\"top:-6.8931em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-2.1069em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-0.2809em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8061em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.3061em;\"><span style=\"top:-6.8931em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">repeat until convergence:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">{</span></span></span><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9721em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span></span><span style=\"top:-2.1069em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-0.2809em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mclose\">}</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.8061em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.8061em;\"><span style=\"top:-4.8061em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">for j = 0,...,n-1</span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>其中：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mrow><mo fence=\"true\">[</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo>−</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow><mo>+</mo><mfrac><mi>λ</mi><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></munderover><msubsup><mi>w</mi><mi>j</mi><mn>2</mn></msubsup></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b) = \\frac{1}{m}  \\sum_{i=0}^{m-1} \\left[ -y^{(i)} \\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) \\right] + \\frac{\\lambda}{2m}  \\sum_{j=0}^{n-1} w_j^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0788em;vertical-align:-1.2777em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">[</span></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">]</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.2149em;vertical-align:-1.4138em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4138em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-2.453em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3831em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n<p>于是：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left\" columnspacing=\"0em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>+</mo><mfrac><mi>λ</mi><mi>m</mi></mfrac><msub><mi>w</mi><mi>j</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n\\frac{\\partial J(\\vec{w},b)}{\\partial w_j}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)}  +  \\frac{\\lambda}{m} w_j \\\\\n\\frac{\\partial J(\\vec{w},b)}{\\partial b}  &amp;= \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)}) \n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:6.7576em;vertical-align:-3.1288em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.6288em;\"><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9721em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1288em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.6288em;\"><span style=\"top:-5.6288em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.413em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.8011em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8011em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1288em;\"><span></span></span></span></span></span></span></span></span></span></span></span></p>\n<hr>\n<p>同样，而这除了模型不一样，其余地方都是一样的。</p>\n<h1>一个问题</h1>\n<p>对正则化后的代价函数运行梯度下降时，对<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>的偏导数进行整理可以得到：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>j</mi></msub><mo>=</mo><msub><mi>w</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mo>=</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mfrac><mi>λ</mi><mi>m</mi></mfrac><mo stretchy=\"false\">)</mo><msub><mi>w</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">w_j = w_j -  \\alpha \\frac{\\partial J(\\vec{w},b)}{\\partial w_j} =(1-\\alpha \\frac{\\lambda}{m})w_j- \\alpha \\frac{1}{m} \\sum\\limits_{i = 0}^{m-1} (f_{\\vec{w},b}(\\vec{x}^{(i)}) - y^{(i)})x_{j}^{(i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.5523em;vertical-align:-0.5423em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.0269em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2819em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen mtight\">(</span><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5423em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251em;vertical-align:-0.345em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">λ</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4788em;vertical-align:-0.9777em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.5011em;\"><span style=\"top:-2.1223em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop op-symbol small-op\">∑</span></span></span><span style=\"top:-3.95em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9777em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.4578em;vertical-align:-0.413em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.413em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>吴恩达依据<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mtext>、</mtext><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha 、\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">λ</span></span></span></span>都不大，因此<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>每次迭代都是乘一个小于1的数，于是每次他都会减小，以此来达到正则化的目的，对此有三个疑问：</p>\n<p>第一：学习率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>可以很小，因为过大了可能导致不收敛。但是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>一定也是一个比较小的值吗？或者说其与m的比值乘<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>一定小于1吗？</p>\n<p>第二：第一项仅仅是一次迭代中的一部分，并没有计算完，还有第二项呢，第二项的正负也没办法确定吧，那每次迭代<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>是变大变小不是都有可能吗？</p>\n<p>第三：正则化过程中参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>不一定要每次减小吧，不是找到一组合适的就可以吗？</p>\n<p>有这个问题是因为在没有正则化的梯度下降中，我们的目的是寻找一组合适的而不是最小的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{w} 、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>使得代价函数最小，而在该过程中只能保证代价函数是递减的，但是没有规定<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{w}、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>的增减变化。为此我也回去看了一下JupyterLab的C1_W1_Lab05_Gradient_Descent_Soln,证实了确实没有这样的规定，所以听到他那么说就有点儿不理解。</p>\n"},{"title":"hexo主题进阶配置以及遇到的问题","abbrlink":"2e5955c9","date":"2024-01-07T13:01:47.000Z","description":"搭建过程中的一些细节问题","_content":"\n\n搭建好博客后，我尝试将在CSDN写的博客迁移到我的个人博客中，发现了一些问题。\n\n#  关于hexo不支持latex渲染的问题\n有的主题已经进行过渲染，可以正常使用，对于没有渲染的主题，可以使用以下方法：\n##  方法1\nhexo根目录\\scaffolds\\post.md目录中添加如下代码，这样就能保证latex以后会在所有文章中生效：\n```javascript\n<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n```\n##  方法2\n使用`npm install hexo-renderer-markdown-it--save`和`npm install katex @renbaoshuo/markdown-it-katex`安装插件，并在hexo配置文件中添加对应的配置：\n\n```powershell\nmarkdown:\n    plugins:\n      - '@renbaoshuo/markdown-it-katex'\n```\n\n#  图片无法显示问题\n第一反应就是路径问题，因此我调整了图片的路径。多次尝试以后发现了一个事情：hexo资源路径的根目录是`hexo g`生成的`public`目录，其中图片的位置是`public/img/`目录下，md文件在`public/posts/`目录下，因此在写图片路径的时候，要写成`../img/xxx.png`的形式。\n\n#  字体更改问题\n主题所提供的字体往往不够，这里提供一种更改字体的方法。\n\n 1. 在**hexo根目录**的source文件夹中新建css、font文件夹\n 2. 下载一个没有版权的字体，可以去[无版权字体](https://www.100font.com/forum-1-1.htm?tagids=7_0_0_0)下载自己想要的字体到font文件夹中\n 3. 配置css文件：\n```css\n@font-face {\n  font-family: 'fzkt'; //fzkt是字体的名字，可以换\n  src: url('../font/fzkt.ttf') format('truetype');//format根据你下载下来的字体的后缀就可以确定\n}\n```\n 4. 修改**主题配置文件**，找到对应的位置并作出修改\n\n```bash\n# Inject\n# Insert the code to head (before '</head>' tag) and the bottom (before '</body>' tag)\n# 插入代码到头部 </head> 之前 和 底部 </body> 之前\ninject:\n  head: # head一般引入css文件\n    - <link rel=\"stylesheet\" href=\"/css/custom-font.css?1\">\n    # href链接?后边的参数随便，当更改文件时再随便换一个就可以，这样可以避免使用本地缓存，使修改及时生效\n  # bottom: 一般引入js文件\n```\n#  配置搜索\n`npm install hexo-generator-search --save`安装插件，然后再**主题配置文件中**添加如下参数：\n```bash\nsearch:\n  path: search.xml\n  field: post\n  content: true\n  template: ./search.xml\n```\n官方文档说在root中修改参数，我在blog目录修改时发生了错误，就在主题配置文件中修改，然后就可以运行了。\n#  集成gitalk评论\n 1. `npm i --save gitalk`安装gitalk\n 2. 新建个一GitHub仓库\n 3. 创建GitHub Application，可以[在这里创建](https://github.com/settings/applications/new)\n其中`Application name`写仓库名字就可以，`Homepage URL`和`Authorization callback URL`填写你博客的地址，最后勾选Enable Device Flow就创建完成了。此时可以生成`Client secrets`\n\n准备工作做好了，接下来去修改主题配置文件即可：\n```bash\ngitalk:\n  client_id: '第3步中创建的GitHub Application，里面的client_id'\n  client_secret: '也是第3步中生成的client_secret'\n  repo: '仓库名字'\n  owner: 'GitHub用户名'\n  admin: ['GitHub用户名']\n  option: # 不用填\n```\n若配置后出现 **未找到相关的issue评论，请联系xxx初始化创建** 的问题，登录github账号即可。要注意的是，此时要预览效果不能仅在本地服务器，需要部署到GitHub才能看到效果。\n\n# 文章加密\n\n[hexo-blog-encrypt](https://github.com/D0n9X1n/hexo-blog-encrypt/tree/master)按照文档安装就好。插件挺好的，就是品味差了些，输入密码的背景颜色太丑了，自己改一下相应的css文件就行了。 \n\n# 接入GoogleAdsense和谷歌搜索\n\n## Google Adsense\n\nbufferfly配置文件中集成了Google Adsense，但是修改配置文件后发现并不能成功接入Google Adsense，通过对比修改配置文件后的网页源文件和Google Adsense要求的格式，发现两者细节上有一些差别，于是我*禁用了主题配置文件中的Google Adsense*，转而按照Google Adsense的要求重新接入。找到`主题配置文件`的inject,将Google Adsense给出的html验证方式的代码粘贴进去即可。\n\n```bash\n# Inject\n# Insert the code to head (before '</head>' tag) and the bottom (before '</body>' tag)\n# 插入代码到头部 </head> 之前 和 底部 </body> 之前\ninject:\n  head:\n    - <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4550636020481394\"\n     crossorigin=\"anonymous\"></script>\n```\n\n\n## 被Google收录\n\n来到[Google Search Console](search.google.com/search-console),选择网络前缀类型，将网站地址粘贴进去。接着验证网站所有权，他推荐的方法我试过了但是总是出错，于是我选择html方式验证网站的所有权，方法和Google Adsense的验证方法一样，将他给你的代码粘到`主题配置文件`的inject中，验证成功后就完成了被谷歌收录。\n\n一个验证是否被收录的方法是打开Google，输入`site:yoursite`看看能不能搜出来东西，能搜出来说明被收录了<img src=\"/img/googleSearch.png\" alt=\"googleSearch\" style=\"zoom:50%;\" />\n\n这个其实我在配置之前就能搜到了，不知道怎么回事。但是我配置被百度收录的时候，一直搜不到，不知道是不是githubpage不能被百度收录的原因。\n\n---\n\n为了使搜索引擎更智能的抓取网站，可以给网站配置一个站点地图：首先到hexo的根目录，通过`npm install hexo-generator-sitemap --save`安装所需要的插件，然后在`hexo配置文件`中添加对应代码：\n\n```bash\nPlugins:\n- hexo-generator-sitemap\n\nsitemap:\n    path: sitemap.xml\n```\n\n然后重新部署一下，public目录下生成了sitemap.xml就代表成功了。\n\n---\n\n然后回到[Google Search Console](search.google.com/search-console),选择站点地图，将`sitemap.xml`添加到url后面，提交后看一下状态是否成功，我遇到了**此位置的sitemap不允许此网站**的错误。解决方法是修改`hexo配置文件`，找到`url`这一项，将后边的url修改为正确的地址即可：\n\n```bash\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\nurl: https://bwhite.top ##修改这里\n```\n\n\n#  慢慢更新\n","source":"_posts/hexo主题进阶配置以及遇到的问题.md","raw":"---\ntitle: hexo主题进阶配置以及遇到的问题\ntags:\n  - hexo\n  - GitHub\n  - 博客搭建\nabbrlink: 2e5955c9\ndate: 2024-01-07 21:01:47\ncategories: DIY\ndescription: 搭建过程中的一些细节问题\n---\n\n\n搭建好博客后，我尝试将在CSDN写的博客迁移到我的个人博客中，发现了一些问题。\n\n#  关于hexo不支持latex渲染的问题\n有的主题已经进行过渲染，可以正常使用，对于没有渲染的主题，可以使用以下方法：\n##  方法1\nhexo根目录\\scaffolds\\post.md目录中添加如下代码，这样就能保证latex以后会在所有文章中生效：\n```javascript\n<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n```\n##  方法2\n使用`npm install hexo-renderer-markdown-it--save`和`npm install katex @renbaoshuo/markdown-it-katex`安装插件，并在hexo配置文件中添加对应的配置：\n\n```powershell\nmarkdown:\n    plugins:\n      - '@renbaoshuo/markdown-it-katex'\n```\n\n#  图片无法显示问题\n第一反应就是路径问题，因此我调整了图片的路径。多次尝试以后发现了一个事情：hexo资源路径的根目录是`hexo g`生成的`public`目录，其中图片的位置是`public/img/`目录下，md文件在`public/posts/`目录下，因此在写图片路径的时候，要写成`../img/xxx.png`的形式。\n\n#  字体更改问题\n主题所提供的字体往往不够，这里提供一种更改字体的方法。\n\n 1. 在**hexo根目录**的source文件夹中新建css、font文件夹\n 2. 下载一个没有版权的字体，可以去[无版权字体](https://www.100font.com/forum-1-1.htm?tagids=7_0_0_0)下载自己想要的字体到font文件夹中\n 3. 配置css文件：\n```css\n@font-face {\n  font-family: 'fzkt'; //fzkt是字体的名字，可以换\n  src: url('../font/fzkt.ttf') format('truetype');//format根据你下载下来的字体的后缀就可以确定\n}\n```\n 4. 修改**主题配置文件**，找到对应的位置并作出修改\n\n```bash\n# Inject\n# Insert the code to head (before '</head>' tag) and the bottom (before '</body>' tag)\n# 插入代码到头部 </head> 之前 和 底部 </body> 之前\ninject:\n  head: # head一般引入css文件\n    - <link rel=\"stylesheet\" href=\"/css/custom-font.css?1\">\n    # href链接?后边的参数随便，当更改文件时再随便换一个就可以，这样可以避免使用本地缓存，使修改及时生效\n  # bottom: 一般引入js文件\n```\n#  配置搜索\n`npm install hexo-generator-search --save`安装插件，然后再**主题配置文件中**添加如下参数：\n```bash\nsearch:\n  path: search.xml\n  field: post\n  content: true\n  template: ./search.xml\n```\n官方文档说在root中修改参数，我在blog目录修改时发生了错误，就在主题配置文件中修改，然后就可以运行了。\n#  集成gitalk评论\n 1. `npm i --save gitalk`安装gitalk\n 2. 新建个一GitHub仓库\n 3. 创建GitHub Application，可以[在这里创建](https://github.com/settings/applications/new)\n其中`Application name`写仓库名字就可以，`Homepage URL`和`Authorization callback URL`填写你博客的地址，最后勾选Enable Device Flow就创建完成了。此时可以生成`Client secrets`\n\n准备工作做好了，接下来去修改主题配置文件即可：\n```bash\ngitalk:\n  client_id: '第3步中创建的GitHub Application，里面的client_id'\n  client_secret: '也是第3步中生成的client_secret'\n  repo: '仓库名字'\n  owner: 'GitHub用户名'\n  admin: ['GitHub用户名']\n  option: # 不用填\n```\n若配置后出现 **未找到相关的issue评论，请联系xxx初始化创建** 的问题，登录github账号即可。要注意的是，此时要预览效果不能仅在本地服务器，需要部署到GitHub才能看到效果。\n\n# 文章加密\n\n[hexo-blog-encrypt](https://github.com/D0n9X1n/hexo-blog-encrypt/tree/master)按照文档安装就好。插件挺好的，就是品味差了些，输入密码的背景颜色太丑了，自己改一下相应的css文件就行了。 \n\n# 接入GoogleAdsense和谷歌搜索\n\n## Google Adsense\n\nbufferfly配置文件中集成了Google Adsense，但是修改配置文件后发现并不能成功接入Google Adsense，通过对比修改配置文件后的网页源文件和Google Adsense要求的格式，发现两者细节上有一些差别，于是我*禁用了主题配置文件中的Google Adsense*，转而按照Google Adsense的要求重新接入。找到`主题配置文件`的inject,将Google Adsense给出的html验证方式的代码粘贴进去即可。\n\n```bash\n# Inject\n# Insert the code to head (before '</head>' tag) and the bottom (before '</body>' tag)\n# 插入代码到头部 </head> 之前 和 底部 </body> 之前\ninject:\n  head:\n    - <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4550636020481394\"\n     crossorigin=\"anonymous\"></script>\n```\n\n\n## 被Google收录\n\n来到[Google Search Console](search.google.com/search-console),选择网络前缀类型，将网站地址粘贴进去。接着验证网站所有权，他推荐的方法我试过了但是总是出错，于是我选择html方式验证网站的所有权，方法和Google Adsense的验证方法一样，将他给你的代码粘到`主题配置文件`的inject中，验证成功后就完成了被谷歌收录。\n\n一个验证是否被收录的方法是打开Google，输入`site:yoursite`看看能不能搜出来东西，能搜出来说明被收录了<img src=\"/img/googleSearch.png\" alt=\"googleSearch\" style=\"zoom:50%;\" />\n\n这个其实我在配置之前就能搜到了，不知道怎么回事。但是我配置被百度收录的时候，一直搜不到，不知道是不是githubpage不能被百度收录的原因。\n\n---\n\n为了使搜索引擎更智能的抓取网站，可以给网站配置一个站点地图：首先到hexo的根目录，通过`npm install hexo-generator-sitemap --save`安装所需要的插件，然后在`hexo配置文件`中添加对应代码：\n\n```bash\nPlugins:\n- hexo-generator-sitemap\n\nsitemap:\n    path: sitemap.xml\n```\n\n然后重新部署一下，public目录下生成了sitemap.xml就代表成功了。\n\n---\n\n然后回到[Google Search Console](search.google.com/search-console),选择站点地图，将`sitemap.xml`添加到url后面，提交后看一下状态是否成功，我遇到了**此位置的sitemap不允许此网站**的错误。解决方法是修改`hexo配置文件`，找到`url`这一项，将后边的url修改为正确的地址即可：\n\n```bash\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\nurl: https://bwhite.top ##修改这里\n```\n\n\n#  慢慢更新\n","slug":"hexo主题进阶配置以及遇到的问题","published":1,"updated":"2024-03-21T01:18:50.426Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gay000rbiub69zfaukw","content":"<p>搭建好博客后，我尝试将在CSDN写的博客迁移到我的个人博客中，发现了一些问题。</p>\n<h1>关于hexo不支持latex渲染的问题</h1>\n<p>有的主题已经进行过渲染，可以正常使用，对于没有渲染的主题，可以使用以下方法：</p>\n<h2 id=\"方法1\">方法1</h2>\n<p>hexo根目录\\scaffolds\\post.md目录中添加如下代码，这样就能保证latex以后会在所有文章中生效：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">&quot;text/javascript&quot;</span></span><br><span class=\"line\">src=<span class=\"string\">&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;</span>&gt;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"方法2\">方法2</h2>\n<p>使用<code>npm install hexo-renderer-markdown-it--save</code>和<code>npm install katex @renbaoshuo/markdown-it-katex</code>安装插件，并在hexo配置文件中添加对应的配置：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">markdown:</span><br><span class=\"line\">    plugins:</span><br><span class=\"line\">      - <span class=\"string\">&#x27;@renbaoshuo/markdown-it-katex&#x27;</span></span><br></pre></td></tr></table></figure>\n<h1>图片无法显示问题</h1>\n<p>第一反应就是路径问题，因此我调整了图片的路径。多次尝试以后发现了一个事情：hexo资源路径的根目录是<code>hexo g</code>生成的<code>public</code>目录，其中图片的位置是<code>public/img/</code>目录下，md文件在<code>public/posts/</code>目录下，因此在写图片路径的时候，要写成<code>../img/xxx.png</code>的形式。</p>\n<h1>字体更改问题</h1>\n<p>主题所提供的字体往往不够，这里提供一种更改字体的方法。</p>\n<ol>\n<li>在<strong>hexo根目录</strong>的source文件夹中新建css、font文件夹</li>\n<li>下载一个没有版权的字体，可以去<a href=\"https://www.100font.com/forum-1-1.htm?tagids=7_0_0_0\">无版权字体</a>下载自己想要的字体到font文件夹中</li>\n<li>配置css文件：</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@font-face</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&#x27;fzkt&#x27;</span>; //fzkt是字体的名字，可以换</span><br><span class=\"line\">  <span class=\"attribute\">src</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;../font/fzkt.ttf&#x27;</span>) <span class=\"built_in\">format</span>(<span class=\"string\">&#x27;truetype&#x27;</span>);//format根据你下载下来的字体的后缀就可以确定</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>修改<strong>主题配置文件</strong>，找到对应的位置并作出修改</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Inject</span></span><br><span class=\"line\"><span class=\"comment\"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class=\"line\"><span class=\"comment\"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class=\"line\">inject:</span><br><span class=\"line\">  <span class=\"built_in\">head</span>: <span class=\"comment\"># head一般引入css文件</span></span><br><span class=\"line\">    - &lt;<span class=\"built_in\">link</span> rel=<span class=\"string\">&quot;stylesheet&quot;</span> href=<span class=\"string\">&quot;/css/custom-font.css?1&quot;</span>&gt;</span><br><span class=\"line\">    <span class=\"comment\"># href链接?后边的参数随便，当更改文件时再随便换一个就可以，这样可以避免使用本地缓存，使修改及时生效</span></span><br><span class=\"line\">  <span class=\"comment\"># bottom: 一般引入js文件</span></span><br></pre></td></tr></table></figure>\n<h1>配置搜索</h1>\n<p><code>npm install hexo-generator-search --save</code>安装插件，然后再<strong>主题配置文件中</strong>添加如下参数：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  content: <span class=\"literal\">true</span></span><br><span class=\"line\">  template: ./search.xml</span><br></pre></td></tr></table></figure>\n<p>官方文档说在root中修改参数，我在blog目录修改时发生了错误，就在主题配置文件中修改，然后就可以运行了。</p>\n<h1>集成gitalk评论</h1>\n<ol>\n<li><code>npm i --save gitalk</code>安装gitalk</li>\n<li>新建个一GitHub仓库</li>\n<li>创建GitHub Application，可以<a href=\"https://github.com/settings/applications/new\">在这里创建</a><br>\n其中<code>Application name</code>写仓库名字就可以，<code>Homepage URL</code>和<code>Authorization callback URL</code>填写你博客的地址，最后勾选Enable Device Flow就创建完成了。此时可以生成<code>Client secrets</code></li>\n</ol>\n<p>准备工作做好了，接下来去修改主题配置文件即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitalk:</span><br><span class=\"line\">  client_id: <span class=\"string\">&#x27;第3步中创建的GitHub Application，里面的client_id&#x27;</span></span><br><span class=\"line\">  client_secret: <span class=\"string\">&#x27;也是第3步中生成的client_secret&#x27;</span></span><br><span class=\"line\">  repo: <span class=\"string\">&#x27;仓库名字&#x27;</span></span><br><span class=\"line\">  owner: <span class=\"string\">&#x27;GitHub用户名&#x27;</span></span><br><span class=\"line\">  admin: [<span class=\"string\">&#x27;GitHub用户名&#x27;</span>]</span><br><span class=\"line\">  option: <span class=\"comment\"># 不用填</span></span><br></pre></td></tr></table></figure>\n<p>若配置后出现 <strong>未找到相关的issue评论，请联系xxx初始化创建</strong> 的问题，登录github账号即可。要注意的是，此时要预览效果不能仅在本地服务器，需要部署到GitHub才能看到效果。</p>\n<h1>文章加密</h1>\n<p><a href=\"https://github.com/D0n9X1n/hexo-blog-encrypt/tree/master\">hexo-blog-encrypt</a>按照文档安装就好。插件挺好的，就是品味差了些，输入密码的背景颜色太丑了，自己改一下相应的css文件就行了。</p>\n<h1>接入GoogleAdsense和谷歌搜索</h1>\n<h2 id=\"Google-Adsense\">Google Adsense</h2>\n<p>bufferfly配置文件中集成了Google Adsense，但是修改配置文件后发现并不能成功接入Google Adsense，通过对比修改配置文件后的网页源文件和Google Adsense要求的格式，发现两者细节上有一些差别，于是我<em>禁用了主题配置文件中的Google Adsense</em>，转而按照Google Adsense的要求重新接入。找到<code>主题配置文件</code>的inject,将Google Adsense给出的html验证方式的代码粘贴进去即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Inject</span></span><br><span class=\"line\"><span class=\"comment\"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class=\"line\"><span class=\"comment\"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class=\"line\">inject:</span><br><span class=\"line\">  <span class=\"built_in\">head</span>:</span><br><span class=\"line\">    - &lt;script async src=<span class=\"string\">&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4550636020481394&quot;</span></span><br><span class=\"line\">     crossorigin=<span class=\"string\">&quot;anonymous&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"被Google收录\">被Google收录</h2>\n<p>来到<a href=\"search.google.com/search-console\">Google Search Console</a>,选择网络前缀类型，将网站地址粘贴进去。接着验证网站所有权，他推荐的方法我试过了但是总是出错，于是我选择html方式验证网站的所有权，方法和Google Adsense的验证方法一样，将他给你的代码粘到<code>主题配置文件</code>的inject中，验证成功后就完成了被谷歌收录。</p>\n<p>一个验证是否被收录的方法是打开Google，输入<code>site:yoursite</code>看看能不能搜出来东西，能搜出来说明被收录了<img src=\"/img/googleSearch.png\" alt=\"googleSearch\" style=\"zoom:50%;\" /></p>\n<p>这个其实我在配置之前就能搜到了，不知道怎么回事。但是我配置被百度收录的时候，一直搜不到，不知道是不是githubpage不能被百度收录的原因。</p>\n<hr>\n<p>为了使搜索引擎更智能的抓取网站，可以给网站配置一个站点地图：首先到hexo的根目录，通过<code>npm install hexo-generator-sitemap --save</code>安装所需要的插件，然后在<code>hexo配置文件</code>中添加对应代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugins:</span><br><span class=\"line\">- hexo-generator-sitemap</span><br><span class=\"line\"></span><br><span class=\"line\">sitemap:</span><br><span class=\"line\">    path: sitemap.xml</span><br></pre></td></tr></table></figure>\n<p>然后重新部署一下，public目录下生成了sitemap.xml就代表成功了。</p>\n<hr>\n<p>然后回到<a href=\"search.google.com/search-console\">Google Search Console</a>,选择站点地图，将<code>sitemap.xml</code>添加到url后面，提交后看一下状态是否成功，我遇到了<strong>此位置的sitemap不允许此网站</strong>的错误。解决方法是修改<code>hexo配置文件</code>，找到<code>url</code>这一项，将后边的url修改为正确的地址即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class=\"line\">url: https://bwhite.top <span class=\"comment\">##修改这里</span></span><br></pre></td></tr></table></figure>\n<h1>慢慢更新</h1>\n","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":"<p>搭建好博客后，我尝试将在CSDN写的博客迁移到我的个人博客中，发现了一些问题。</p>\n<h1>关于hexo不支持latex渲染的问题</h1>\n<p>有的主题已经进行过渲染，可以正常使用，对于没有渲染的主题，可以使用以下方法：</p>\n<h2 id=\"方法1\">方法1</h2>\n<p>hexo根目录\\scaffolds\\post.md目录中添加如下代码，这样就能保证latex以后会在所有文章中生效：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=<span class=\"string\">&quot;text/javascript&quot;</span></span><br><span class=\"line\">src=<span class=\"string\">&quot;http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML&quot;</span>&gt;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"方法2\">方法2</h2>\n<p>使用<code>npm install hexo-renderer-markdown-it--save</code>和<code>npm install katex @renbaoshuo/markdown-it-katex</code>安装插件，并在hexo配置文件中添加对应的配置：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">markdown:</span><br><span class=\"line\">    plugins:</span><br><span class=\"line\">      - <span class=\"string\">&#x27;@renbaoshuo/markdown-it-katex&#x27;</span></span><br></pre></td></tr></table></figure>\n<h1>图片无法显示问题</h1>\n<p>第一反应就是路径问题，因此我调整了图片的路径。多次尝试以后发现了一个事情：hexo资源路径的根目录是<code>hexo g</code>生成的<code>public</code>目录，其中图片的位置是<code>public/img/</code>目录下，md文件在<code>public/posts/</code>目录下，因此在写图片路径的时候，要写成<code>../img/xxx.png</code>的形式。</p>\n<h1>字体更改问题</h1>\n<p>主题所提供的字体往往不够，这里提供一种更改字体的方法。</p>\n<ol>\n<li>在<strong>hexo根目录</strong>的source文件夹中新建css、font文件夹</li>\n<li>下载一个没有版权的字体，可以去<a href=\"https://www.100font.com/forum-1-1.htm?tagids=7_0_0_0\">无版权字体</a>下载自己想要的字体到font文件夹中</li>\n<li>配置css文件：</li>\n</ol>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@font-face</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&#x27;fzkt&#x27;</span>; //fzkt是字体的名字，可以换</span><br><span class=\"line\">  <span class=\"attribute\">src</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;../font/fzkt.ttf&#x27;</span>) <span class=\"built_in\">format</span>(<span class=\"string\">&#x27;truetype&#x27;</span>);//format根据你下载下来的字体的后缀就可以确定</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>修改<strong>主题配置文件</strong>，找到对应的位置并作出修改</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Inject</span></span><br><span class=\"line\"><span class=\"comment\"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class=\"line\"><span class=\"comment\"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class=\"line\">inject:</span><br><span class=\"line\">  <span class=\"built_in\">head</span>: <span class=\"comment\"># head一般引入css文件</span></span><br><span class=\"line\">    - &lt;<span class=\"built_in\">link</span> rel=<span class=\"string\">&quot;stylesheet&quot;</span> href=<span class=\"string\">&quot;/css/custom-font.css?1&quot;</span>&gt;</span><br><span class=\"line\">    <span class=\"comment\"># href链接?后边的参数随便，当更改文件时再随便换一个就可以，这样可以避免使用本地缓存，使修改及时生效</span></span><br><span class=\"line\">  <span class=\"comment\"># bottom: 一般引入js文件</span></span><br></pre></td></tr></table></figure>\n<h1>配置搜索</h1>\n<p><code>npm install hexo-generator-search --save</code>安装插件，然后再<strong>主题配置文件中</strong>添加如下参数：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  content: <span class=\"literal\">true</span></span><br><span class=\"line\">  template: ./search.xml</span><br></pre></td></tr></table></figure>\n<p>官方文档说在root中修改参数，我在blog目录修改时发生了错误，就在主题配置文件中修改，然后就可以运行了。</p>\n<h1>集成gitalk评论</h1>\n<ol>\n<li><code>npm i --save gitalk</code>安装gitalk</li>\n<li>新建个一GitHub仓库</li>\n<li>创建GitHub Application，可以<a href=\"https://github.com/settings/applications/new\">在这里创建</a><br>\n其中<code>Application name</code>写仓库名字就可以，<code>Homepage URL</code>和<code>Authorization callback URL</code>填写你博客的地址，最后勾选Enable Device Flow就创建完成了。此时可以生成<code>Client secrets</code></li>\n</ol>\n<p>准备工作做好了，接下来去修改主题配置文件即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gitalk:</span><br><span class=\"line\">  client_id: <span class=\"string\">&#x27;第3步中创建的GitHub Application，里面的client_id&#x27;</span></span><br><span class=\"line\">  client_secret: <span class=\"string\">&#x27;也是第3步中生成的client_secret&#x27;</span></span><br><span class=\"line\">  repo: <span class=\"string\">&#x27;仓库名字&#x27;</span></span><br><span class=\"line\">  owner: <span class=\"string\">&#x27;GitHub用户名&#x27;</span></span><br><span class=\"line\">  admin: [<span class=\"string\">&#x27;GitHub用户名&#x27;</span>]</span><br><span class=\"line\">  option: <span class=\"comment\"># 不用填</span></span><br></pre></td></tr></table></figure>\n<p>若配置后出现 <strong>未找到相关的issue评论，请联系xxx初始化创建</strong> 的问题，登录github账号即可。要注意的是，此时要预览效果不能仅在本地服务器，需要部署到GitHub才能看到效果。</p>\n<h1>文章加密</h1>\n<p><a href=\"https://github.com/D0n9X1n/hexo-blog-encrypt/tree/master\">hexo-blog-encrypt</a>按照文档安装就好。插件挺好的，就是品味差了些，输入密码的背景颜色太丑了，自己改一下相应的css文件就行了。</p>\n<h1>接入GoogleAdsense和谷歌搜索</h1>\n<h2 id=\"Google-Adsense\">Google Adsense</h2>\n<p>bufferfly配置文件中集成了Google Adsense，但是修改配置文件后发现并不能成功接入Google Adsense，通过对比修改配置文件后的网页源文件和Google Adsense要求的格式，发现两者细节上有一些差别，于是我<em>禁用了主题配置文件中的Google Adsense</em>，转而按照Google Adsense的要求重新接入。找到<code>主题配置文件</code>的inject,将Google Adsense给出的html验证方式的代码粘贴进去即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Inject</span></span><br><span class=\"line\"><span class=\"comment\"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class=\"line\"><span class=\"comment\"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class=\"line\">inject:</span><br><span class=\"line\">  <span class=\"built_in\">head</span>:</span><br><span class=\"line\">    - &lt;script async src=<span class=\"string\">&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4550636020481394&quot;</span></span><br><span class=\"line\">     crossorigin=<span class=\"string\">&quot;anonymous&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"被Google收录\">被Google收录</h2>\n<p>来到<a href=\"search.google.com/search-console\">Google Search Console</a>,选择网络前缀类型，将网站地址粘贴进去。接着验证网站所有权，他推荐的方法我试过了但是总是出错，于是我选择html方式验证网站的所有权，方法和Google Adsense的验证方法一样，将他给你的代码粘到<code>主题配置文件</code>的inject中，验证成功后就完成了被谷歌收录。</p>\n<p>一个验证是否被收录的方法是打开Google，输入<code>site:yoursite</code>看看能不能搜出来东西，能搜出来说明被收录了<img src=\"/img/googleSearch.png\" alt=\"googleSearch\" style=\"zoom:50%;\" /></p>\n<p>这个其实我在配置之前就能搜到了，不知道怎么回事。但是我配置被百度收录的时候，一直搜不到，不知道是不是githubpage不能被百度收录的原因。</p>\n<hr>\n<p>为了使搜索引擎更智能的抓取网站，可以给网站配置一个站点地图：首先到hexo的根目录，通过<code>npm install hexo-generator-sitemap --save</code>安装所需要的插件，然后在<code>hexo配置文件</code>中添加对应代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugins:</span><br><span class=\"line\">- hexo-generator-sitemap</span><br><span class=\"line\"></span><br><span class=\"line\">sitemap:</span><br><span class=\"line\">    path: sitemap.xml</span><br></pre></td></tr></table></figure>\n<p>然后重新部署一下，public目录下生成了sitemap.xml就代表成功了。</p>\n<hr>\n<p>然后回到<a href=\"search.google.com/search-console\">Google Search Console</a>,选择站点地图，将<code>sitemap.xml</code>添加到url后面，提交后看一下状态是否成功，我遇到了<strong>此位置的sitemap不允许此网站</strong>的错误。解决方法是修改<code>hexo配置文件</code>，找到<code>url</code>这一项，将后边的url修改为正确的地址即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class=\"line\">url: https://bwhite.top <span class=\"comment\">##修改这里</span></span><br></pre></td></tr></table></figure>\n<h1>慢慢更新</h1>\n"},{"title":"MarkDown实用语法，Latex公式","abbrlink":"e2acb477","date":"2024-01-06T07:58:20.000Z","description":null,"_content":"\n<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<table>\n\t<tr>\t<th>功能/符号<th>命令</tr>\n\t<tr style=\"text-align: center;\">\t<td>一级标题<td>#</tr>\n\t<tr style=\"text-align: center;\">\t<td>二级标题<td>##</tr>\n\t<tr style=\"text-align: center;\">\t<td>n级标题<td>n个#，且#与标题之间有两个空格</tr>\n\t<tr style=\"text-align: center;\">\t<td>空格<td>&ampnbsp;</tr>\n\t<tr style=\"text-align: center;\">\t<td>缩进（中文）<td>&ampemsp;</tr>\n\t<tr style=\"text-align: center;\">\t<td>缩进（英文）<td>&ampensp;</tr>\n\t<tr style=\"text-align: center;\">\t<td>分割线（同一行不能有其他东西）<td>***</tr>\n\t<tr style=\"text-align: center;\">\t<td>目录<td>[toc]</tr>\n\t<tr style=\"text-align: center;\">  <td>更改字体相关属性<td> &lt;font face=\"楷体\" color=#FF0000 size=4>&lt;/font></tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\pm&space;\" />\n\t\t\t<td>$\\pm$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\overline{X}\"/>\n\t\t\t<td>$\\overline{X}$</tr>\n\t<tr style=\"text-align: center;\"> <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;X^{a}\"/>\n\t\t\t<td>$x^a$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;X_{a}\"/>\t\t\n\t\t \t<td>$x_a$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\frac{a}{b}\" height=\"25\"/>\n\t\t\t<td>$\\frac{a}{b}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;&plus;\\infty\"/><td>$+\\infty$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;-\\infty\"/><td>$-\\infty$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\sum{ax^n}\"/>\n\t\t\t<td>$\\sum{ax^n}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\sum_{i=1}^N&space;{ax^i}\"/><td>$\\sum_{i=1}^N {ax^i}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\prod{ax^n}\"/>\n\t\t\t<td>$\\prod{ax^n}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\prod_{n=1}^N{ax^n}\"/>\n\t\t\t<td>$\\prod_{n=1}^N{ax^n}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\sqrt[a]{b}\"/>\n\t\t\t<td>$\\sqrt[a]{b}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\int^b_a{f(x)}{\\rm&space;d}x\"/>\n\t\t\t<td>$\\int^b_a{f(x)}{\\rm d}x$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\iint^b_a{f(x)}{\\rm&space;d}x\"/>\n\t\t\t<td>$\\iint^b_a{f(x)}{\\rm d}x$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\iiint^b_a{f(x)}{\\rm&space;d}x\"/>\n\t\t\t<td>$\\iiint^b_a{f(x)}{\\rm d}x$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\times\"/>\n\t\t\t<td>$\\times$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\neq&space;\"/>\n\t\t\t<td>$\\neq$</tr>\n\t<tr style=\"text-align: center;\">  <td>待更新...<td></tr>\n</table>\n\n\n","source":"_posts/MarkDown实用语法，Latex公式.md","raw":"---\ntitle: MarkDown实用语法，Latex公式\nabbrlink: e2acb477\ndate: 2024-01-06 15:58:20\ntags: shortcut\ncategories: shortcut\ndescription: \n---\n\n<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<table>\n\t<tr>\t<th>功能/符号<th>命令</tr>\n\t<tr style=\"text-align: center;\">\t<td>一级标题<td>#</tr>\n\t<tr style=\"text-align: center;\">\t<td>二级标题<td>##</tr>\n\t<tr style=\"text-align: center;\">\t<td>n级标题<td>n个#，且#与标题之间有两个空格</tr>\n\t<tr style=\"text-align: center;\">\t<td>空格<td>&ampnbsp;</tr>\n\t<tr style=\"text-align: center;\">\t<td>缩进（中文）<td>&ampemsp;</tr>\n\t<tr style=\"text-align: center;\">\t<td>缩进（英文）<td>&ampensp;</tr>\n\t<tr style=\"text-align: center;\">\t<td>分割线（同一行不能有其他东西）<td>***</tr>\n\t<tr style=\"text-align: center;\">\t<td>目录<td>[toc]</tr>\n\t<tr style=\"text-align: center;\">  <td>更改字体相关属性<td> &lt;font face=\"楷体\" color=#FF0000 size=4>&lt;/font></tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\pm&space;\" />\n\t\t\t<td>$\\pm$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\overline{X}\"/>\n\t\t\t<td>$\\overline{X}$</tr>\n\t<tr style=\"text-align: center;\"> <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;X^{a}\"/>\n\t\t\t<td>$x^a$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;X_{a}\"/>\t\t\n\t\t \t<td>$x_a$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\frac{a}{b}\" height=\"25\"/>\n\t\t\t<td>$\\frac{a}{b}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;&plus;\\infty\"/><td>$+\\infty$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;-\\infty\"/><td>$-\\infty$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\sum{ax^n}\"/>\n\t\t\t<td>$\\sum{ax^n}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\sum_{i=1}^N&space;{ax^i}\"/><td>$\\sum_{i=1}^N {ax^i}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\prod{ax^n}\"/>\n\t\t\t<td>$\\prod{ax^n}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\prod_{n=1}^N{ax^n}\"/>\n\t\t\t<td>$\\prod_{n=1}^N{ax^n}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\sqrt[a]{b}\"/>\n\t\t\t<td>$\\sqrt[a]{b}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\int^b_a{f(x)}{\\rm&space;d}x\"/>\n\t\t\t<td>$\\int^b_a{f(x)}{\\rm d}x$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\iint^b_a{f(x)}{\\rm&space;d}x\"/>\n\t\t\t<td>$\\iint^b_a{f(x)}{\\rm d}x$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\iiint^b_a{f(x)}{\\rm&space;d}x\"/>\n\t\t\t<td>$\\iiint^b_a{f(x)}{\\rm d}x$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\times\"/>\n\t\t\t<td>$\\times$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\neq&space;\"/>\n\t\t\t<td>$\\neq$</tr>\n\t<tr style=\"text-align: center;\">  <td>待更新...<td></tr>\n</table>\n\n\n","slug":"MarkDown实用语法，Latex公式","published":1,"updated":"2024-01-09T09:22:13.085Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gay000vbiub2c780e0c","content":"<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<table>\n\t<tr>\t<th>功能/符号<th>命令</tr>\n\t<tr style=\"text-align: center;\">\t<td>一级标题<td>#</tr>\n\t<tr style=\"text-align: center;\">\t<td>二级标题<td>##</tr>\n\t<tr style=\"text-align: center;\">\t<td>n级标题<td>n个#，且#与标题之间有两个空格</tr>\n\t<tr style=\"text-align: center;\">\t<td>空格<td>&ampnbsp;</tr>\n\t<tr style=\"text-align: center;\">\t<td>缩进（中文）<td>&ampemsp;</tr>\n\t<tr style=\"text-align: center;\">\t<td>缩进（英文）<td>&ampensp;</tr>\n\t<tr style=\"text-align: center;\">\t<td>分割线（同一行不能有其他东西）<td>***</tr>\n\t<tr style=\"text-align: center;\">\t<td>目录<td>[toc]</tr>\n\t<tr style=\"text-align: center;\">  <td>更改字体相关属性<td> &lt;font face=\"楷体\" color=#FF0000 size=4>&lt;/font></tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\pm&space;\" />\n\t\t\t<td>$\\pm$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\overline{X}\"/>\n\t\t\t<td>$\\overline{X}$</tr>\n\t<tr style=\"text-align: center;\"> <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;X^{a}\"/>\n\t\t\t<td>$x^a$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;X_{a}\"/>\t\t\n\t\t \t<td>$x_a$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\frac{a}{b}\" height=\"25\"/>\n\t\t\t<td>$\\frac{a}{b}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;&plus;\\infty\"/><td>$+\\infty$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;-\\infty\"/><td>$-\\infty$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\sum{ax^n}\"/>\n\t\t\t<td>$\\sum{ax^n}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\sum_{i=1}^N&space;{ax^i}\"/><td>$\\sum_{i=1}^N {ax^i}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\prod{ax^n}\"/>\n\t\t\t<td>$\\prod{ax^n}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\prod_{n=1}^N{ax^n}\"/>\n\t\t\t<td>$\\prod_{n=1}^N{ax^n}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\sqrt[a]{b}\"/>\n\t\t\t<td>$\\sqrt[a]{b}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\int^b_a{f(x)}{\\rm&space;d}x\"/>\n\t\t\t<td>$\\int^b_a{f(x)}{\\rm d}x$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\iint^b_a{f(x)}{\\rm&space;d}x\"/>\n\t\t\t<td>$\\iint^b_a{f(x)}{\\rm d}x$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\iiint^b_a{f(x)}{\\rm&space;d}x\"/>\n\t\t\t<td>$\\iiint^b_a{f(x)}{\\rm d}x$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\times\"/>\n\t\t\t<td>$\\times$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\neq&space;\"/>\n\t\t\t<td>$\\neq$</tr>\n\t<tr style=\"text-align: center;\">  <td>待更新...<td></tr>\n</table>\n","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":"<script type=\"text/javascript\"\nsrc=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\">\n</script>\n<table>\n\t<tr>\t<th>功能/符号<th>命令</tr>\n\t<tr style=\"text-align: center;\">\t<td>一级标题<td>#</tr>\n\t<tr style=\"text-align: center;\">\t<td>二级标题<td>##</tr>\n\t<tr style=\"text-align: center;\">\t<td>n级标题<td>n个#，且#与标题之间有两个空格</tr>\n\t<tr style=\"text-align: center;\">\t<td>空格<td>&ampnbsp;</tr>\n\t<tr style=\"text-align: center;\">\t<td>缩进（中文）<td>&ampemsp;</tr>\n\t<tr style=\"text-align: center;\">\t<td>缩进（英文）<td>&ampensp;</tr>\n\t<tr style=\"text-align: center;\">\t<td>分割线（同一行不能有其他东西）<td>***</tr>\n\t<tr style=\"text-align: center;\">\t<td>目录<td>[toc]</tr>\n\t<tr style=\"text-align: center;\">  <td>更改字体相关属性<td> &lt;font face=\"楷体\" color=#FF0000 size=4>&lt;/font></tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\pm&space;\" />\n\t\t\t<td>$\\pm$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\overline{X}\"/>\n\t\t\t<td>$\\overline{X}$</tr>\n\t<tr style=\"text-align: center;\"> <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;X^{a}\"/>\n\t\t\t<td>$x^a$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;X_{a}\"/>\t\t\n\t\t \t<td>$x_a$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\frac{a}{b}\" height=\"25\"/>\n\t\t\t<td>$\\frac{a}{b}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;&plus;\\infty\"/><td>$+\\infty$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;-\\infty\"/><td>$-\\infty$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\sum{ax^n}\"/>\n\t\t\t<td>$\\sum{ax^n}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\sum_{i=1}^N&space;{ax^i}\"/><td>$\\sum_{i=1}^N {ax^i}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\prod{ax^n}\"/>\n\t\t\t<td>$\\prod{ax^n}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\prod_{n=1}^N{ax^n}\"/>\n\t\t\t<td>$\\prod_{n=1}^N{ax^n}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\sqrt[a]{b}\"/>\n\t\t\t<td>$\\sqrt[a]{b}$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\int^b_a{f(x)}{\\rm&space;d}x\"/>\n\t\t\t<td>$\\int^b_a{f(x)}{\\rm d}x$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\iint^b_a{f(x)}{\\rm&space;d}x\"/>\n\t\t\t<td>$\\iint^b_a{f(x)}{\\rm d}x$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\iiint^b_a{f(x)}{\\rm&space;d}x\"/>\n\t\t\t<td>$\\iiint^b_a{f(x)}{\\rm d}x$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\inline&space;\\times\"/>\n\t\t\t<td>$\\times$</tr>\n\t<tr style=\"text-align: center;\">  <td><img src=\"https://latex.codecogs.com/svg.image?\\neq&space;\"/>\n\t\t\t<td>$\\neq$</tr>\n\t<tr style=\"text-align: center;\">  <td>待更新...<td></tr>\n</table>\n"},{"title":"homebrew源显示不一致","abbrlink":"694b06f0","date":"2024-01-07T12:54:01.000Z","description":null,"_content":"\n今天使用`brew update`时发现无法更新，看了一下错误提示是远程服务器断开连接，很自然的我就想到了可能是我的源有问题，于是我便`brew config`查看了一下源信息，果不其然core的源是github\n\n![](/img/brew源.png)\n然后我就切换了一下core源\n\n```bash\ncd \"$(brew --repo)/Library/Taps/homebrew/homebrew-core\"\ngit remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git\n```\n但是仍然没有效果，brew config的结果还是github源。但是我又用了`cd \"$(brew --repo homebrew/core)\" && git remote -v`命令看了一下，发现这次的结果是中科大源：\n\n![](/img/brew源2.png)\n没错，这在我修改了源以后，这两个命令查看到的源不是同一个。所以我便思考为什么会不一样，现在我正在使用的是哪一个源？\n于是我再一次使用`brew update`命令，发现仍然无法连接到服务器，于是我猜测现在的源仍然是github.\n然后我又去检查了我的.zshrc文件，发现里边只配置了下边的一条命令：\n\n```bash\nexport HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles\n```\n然后我又加上了两条：\n\n```bash\nexport HOMEBREW_BREW_GIT_REMOTE=\"https://mirrors.ustc.edu.cn/brew.git\"\nexport HOMEBREW_CORE_GIT_REMOTE=\"https://mirrors.ustc.edu.cn/homebrew-core.git\"\n```\n再次使用两个命令查看源发现源已经一致了，都是中科大，`brew update`命令可成功了。\n","source":"_posts/homebrew源显示不一致.md","raw":"---\ntitle: homebrew源显示不一致\nabbrlink: 694b06f0\ndate: 2024-01-07 20:54:01\ntags: homebrew\ncategories: tools\ndescription: \n---\n\n今天使用`brew update`时发现无法更新，看了一下错误提示是远程服务器断开连接，很自然的我就想到了可能是我的源有问题，于是我便`brew config`查看了一下源信息，果不其然core的源是github\n\n![](/img/brew源.png)\n然后我就切换了一下core源\n\n```bash\ncd \"$(brew --repo)/Library/Taps/homebrew/homebrew-core\"\ngit remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git\n```\n但是仍然没有效果，brew config的结果还是github源。但是我又用了`cd \"$(brew --repo homebrew/core)\" && git remote -v`命令看了一下，发现这次的结果是中科大源：\n\n![](/img/brew源2.png)\n没错，这在我修改了源以后，这两个命令查看到的源不是同一个。所以我便思考为什么会不一样，现在我正在使用的是哪一个源？\n于是我再一次使用`brew update`命令，发现仍然无法连接到服务器，于是我猜测现在的源仍然是github.\n然后我又去检查了我的.zshrc文件，发现里边只配置了下边的一条命令：\n\n```bash\nexport HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles\n```\n然后我又加上了两条：\n\n```bash\nexport HOMEBREW_BREW_GIT_REMOTE=\"https://mirrors.ustc.edu.cn/brew.git\"\nexport HOMEBREW_CORE_GIT_REMOTE=\"https://mirrors.ustc.edu.cn/homebrew-core.git\"\n```\n再次使用两个命令查看源发现源已经一致了，都是中科大，`brew update`命令可成功了。\n","slug":"homebrew源显示不一致","published":1,"updated":"2024-01-09T09:23:48.688Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gb20029biub8ain30bu","content":"<p>今天使用<code>brew update</code>时发现无法更新，看了一下错误提示是远程服务器断开连接，很自然的我就想到了可能是我的源有问题，于是我便<code>brew config</code>查看了一下源信息，果不其然core的源是github</p>\n<p><img src=\"/img/brew%E6%BA%90.png\" alt=\"\"><br>\n然后我就切换了一下core源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">&quot;<span class=\"subst\">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-core&quot;</span></span><br><span class=\"line\">git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br></pre></td></tr></table></figure>\n<p>但是仍然没有效果，brew config的结果还是github源。但是我又用了<code>cd &quot;$(brew --repo homebrew/core)&quot; &amp;&amp; git remote -v</code>命令看了一下，发现这次的结果是中科大源：</p>\n<p><img src=\"/img/brew%E6%BA%902.png\" alt=\"\"><br>\n没错，这在我修改了源以后，这两个命令查看到的源不是同一个。所以我便思考为什么会不一样，现在我正在使用的是哪一个源？<br>\n于是我再一次使用<code>brew update</code>命令，发现仍然无法连接到服务器，于是我猜测现在的源仍然是github.<br>\n然后我又去检查了我的.zshrc文件，发现里边只配置了下边的一条命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles</span><br></pre></td></tr></table></figure>\n<p>然后我又加上了两条：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> HOMEBREW_BREW_GIT_REMOTE=<span class=\"string\">&quot;https://mirrors.ustc.edu.cn/brew.git&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> HOMEBREW_CORE_GIT_REMOTE=<span class=\"string\">&quot;https://mirrors.ustc.edu.cn/homebrew-core.git&quot;</span></span><br></pre></td></tr></table></figure>\n<p>再次使用两个命令查看源发现源已经一致了，都是中科大，<code>brew update</code>命令可成功了。</p>\n","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":"<p>今天使用<code>brew update</code>时发现无法更新，看了一下错误提示是远程服务器断开连接，很自然的我就想到了可能是我的源有问题，于是我便<code>brew config</code>查看了一下源信息，果不其然core的源是github</p>\n<p><img src=\"/img/brew%E6%BA%90.png\" alt=\"\"><br>\n然后我就切换了一下core源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"string\">&quot;<span class=\"subst\">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-core&quot;</span></span><br><span class=\"line\">git remote set-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br></pre></td></tr></table></figure>\n<p>但是仍然没有效果，brew config的结果还是github源。但是我又用了<code>cd &quot;$(brew --repo homebrew/core)&quot; &amp;&amp; git remote -v</code>命令看了一下，发现这次的结果是中科大源：</p>\n<p><img src=\"/img/brew%E6%BA%902.png\" alt=\"\"><br>\n没错，这在我修改了源以后，这两个命令查看到的源不是同一个。所以我便思考为什么会不一样，现在我正在使用的是哪一个源？<br>\n于是我再一次使用<code>brew update</code>命令，发现仍然无法连接到服务器，于是我猜测现在的源仍然是github.<br>\n然后我又去检查了我的.zshrc文件，发现里边只配置了下边的一条命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles</span><br></pre></td></tr></table></figure>\n<p>然后我又加上了两条：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span> HOMEBREW_BREW_GIT_REMOTE=<span class=\"string\">&quot;https://mirrors.ustc.edu.cn/brew.git&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> HOMEBREW_CORE_GIT_REMOTE=<span class=\"string\">&quot;https://mirrors.ustc.edu.cn/homebrew-core.git&quot;</span></span><br></pre></td></tr></table></figure>\n<p>再次使用两个命令查看源发现源已经一致了，都是中科大，<code>brew update</code>命令可成功了。</p>\n"},{"title":"个人主页番外配置","description":"一些与主题不太相关的配置","abbrlink":"4ded3bd7","date":"2024-03-10T13:39:21.000Z","_content":"# 更换域名\n\n## 域名购买\n\n来到[namesilo.com](https://www.namesilo.com/)购买一个喜欢的域名，在这里购买域名需要付费，但是价格并不高，但是注意一下续订的费用，有的域名第一年价格不高但是续费比较贵。不想付费的朋友可以自行百度一下免费的域名注册网站。\n\n<img src=\"/img/namesilo.png\" alt=\"namesilo\" style=\"zoom:50%;\" />\n\n付款之前可以Google一下namesilo优惠券，一般能省个1刀左右。\n\n购买后回到namesilo的主页，在Dashboard中，可以在Active Domains中查看已有域名（第一次点击此项的时候需要你完成一些个人信息，随便找个虚拟信息生成网站就行，但是邮箱建议填真实的）。一会儿需要再此页面做一些改动，先留着。\n\n## 域名解析\n\n来到[cloudflare](https://dash.cloudflare.com/),点击添加站点\n\n<img src=\"/img/cloudflare1.png\" alt=\"cloudflare1\" style=\"zoom:50%;\" />\n\n将刚才购买的域名输入，点击继续，选择最下边的免费计划，点击继续\n\n<img src=\"/img/cloudflare2.png\" alt=\"cloudflare2\" style=\"zoom:50%;\" />\n\n然后下拉找到cloudflare提供的两个服务器地址\n\n<img src=\"/img/cloudflare3.png\" alt=\"cloudflare3\" style=\"zoom:50%;\" />\n\n然后回到刚刚namesilo的域名管理页面，点击你购买的域名，会跳转到一个域名的详细信息页面，下拉找到NameServers处，点击Change,将默认的三个地址删除掉，替换为上图中的两个地址，然后提交。\n\n<img src=\"/img/namesilo2.png\" alt=\"namesilo2\" style=\"zoom:50%;\" />\n\n改好以后回到cloudflare，设置一下域名的DNS\n\n<img src=\"/img/cloudflareDNS.png\" alt=\"cloudflareDNS\" style=\"zoom:50%;\" />\n\n按图示添加一条A记录和一条CNAME记录，其中A记录的内容需要ping一下自己的**xx.github.io**来获取。\n\n做好这些工作以后，等个几分钟，域名解析就会完成了。\n\n## 设置GitHub page的domain\n上述步骤完成后，在`hexo/source/`下新建一个名为`CNAME`的文件，注意不要有后缀，将你的域名放进去，比如我的就是`bwhite.top`，然后这个域名就可以正常使用了。\n\n有的朋友可能会在github项目仓库的setting中设置page的domain,这么做每次新发布一篇文章都需要重新设置一下这个选项，很麻烦。上边的方法可以一劳永逸。\n\n> 参考资料：\n>\n> github docs https://docs.github.com/cn/pages/getting-started-with-github-pages/about-github-pages \n>\n> Cloudflare https://zh.wikipedia.org/wiki/Cloudflare\n>\n> https://cloud.tencent.com/developer/article/2298074?areaId=106001\n\n\n# 接入GoogleAdsense和谷歌搜索\n## Google Adsense\n\nbufferfly配置文件中集成了Google Adsense，但是修改配置文件后发现并不能成功接入Google Adsense，通过对比修改配置文件后的网页源文件和Google Adsense要求的格式，发现两者细节上有一些差别，于是我*禁用了主题配置文件中的Google Adsense*，转而按照Google Adsense的要求重新接入。找到`主题配置文件`的inject,将Google Adsense给出的html验证方式的代码粘贴进去即可。\n\n```bash\n# Inject\n# Insert the code to head (before '</head>' tag) and the bottom (before '</body>' tag)\n# 插入代码到头部 </head> 之前 和 底部 </body> 之前\ninject:\n  head:\n    - <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4550636020481394\"\n     crossorigin=\"anonymous\"></script>\n```\n\n## 被Google收录\n\n来到[Google Search Console](search.google.com/search-console),选择网络前缀类型，将网站地址粘贴进去。接着验证网站所有权，他推荐的方法我试过了但是总是出错，于是我选择html方式验证网站的所有权，方法和Google Adsense的验证方法一样，将他给你的代码粘到`主题配置文件`的inject中，验证成功后就完成了被谷歌收录。\n\n一个验证是否被收录的方法是打开Google，输入`site:yoursite`看看能不能搜出来东西，能搜出来说明被收录了<img src=\"/img/googleSearch.png\" alt=\"googleSearch\" style=\"zoom:50%;\" />\n\n这个其实我在配置之前就能搜到了，不知道怎么回事。但是我配置被百度收录的时候，一直搜不到，不知道是不是githubpage不能被百度收录的原因。\n\n---\n\n为了使搜索引擎更智能的抓取网站，可以给网站配置一个站点地图：首先到hexo的根目录，通过`npm install hexo-generator-sitemap --save`安装所需要的插件，然后在`hexo配置文件`中添加对应代码：\n\n```bash\nPlugins:\n- hexo-generator-sitemap\n\nsitemap:\n    path: sitemap.xml\n```\n\n然后重新部署一下，public目录下生成了sitemap.xml就代表成功了。\n\n---\n\n然后回到[Google Search Console](search.google.com/search-console),选择站点地图，将`sitemap.xml`添加到url后面，提交后看一下状态是否成功，我遇到了**此位置的sitemap不允许此网站**的错误。解决方法是修改`hexo配置文件`，找到`url`这一项，将后边的url修改为正确的地址即可：\n\n```bash\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\nurl: https://bwhite.top ##修改这里\n```\n\n\n# 添加自定义html页面\n我想上传几个自定义样式的html文件，发现他们都会被hexo渲染，查看了文档以后找到了解决方法：修改`hexo配置文件`中的`skip_render`字段，达到让指定文件跳过渲染的目的，有以下几种方式：\n```bash\n#跳过单个文件\nskip_render: \n  - \"xxx.html\"\n  - \"yyy.html\"\n```\n```bash\n#跳过目录下的目录\nskip_render: \"dir/dir/*\"\n```\n```bash\n#跳过目录及其子目录\nskip_render: \"dir/**\"\n```","source":"_posts/个人主页番外配置.md","raw":"---\ntitle: 个人主页番外配置\ntags:\n  - hexo\n  - 博客搭建\ncategories:\n  - DIY\ndescription: 一些与主题不太相关的配置\nabbrlink: 4ded3bd7\ndate: 2024-03-10 21:39:21\n---\n# 更换域名\n\n## 域名购买\n\n来到[namesilo.com](https://www.namesilo.com/)购买一个喜欢的域名，在这里购买域名需要付费，但是价格并不高，但是注意一下续订的费用，有的域名第一年价格不高但是续费比较贵。不想付费的朋友可以自行百度一下免费的域名注册网站。\n\n<img src=\"/img/namesilo.png\" alt=\"namesilo\" style=\"zoom:50%;\" />\n\n付款之前可以Google一下namesilo优惠券，一般能省个1刀左右。\n\n购买后回到namesilo的主页，在Dashboard中，可以在Active Domains中查看已有域名（第一次点击此项的时候需要你完成一些个人信息，随便找个虚拟信息生成网站就行，但是邮箱建议填真实的）。一会儿需要再此页面做一些改动，先留着。\n\n## 域名解析\n\n来到[cloudflare](https://dash.cloudflare.com/),点击添加站点\n\n<img src=\"/img/cloudflare1.png\" alt=\"cloudflare1\" style=\"zoom:50%;\" />\n\n将刚才购买的域名输入，点击继续，选择最下边的免费计划，点击继续\n\n<img src=\"/img/cloudflare2.png\" alt=\"cloudflare2\" style=\"zoom:50%;\" />\n\n然后下拉找到cloudflare提供的两个服务器地址\n\n<img src=\"/img/cloudflare3.png\" alt=\"cloudflare3\" style=\"zoom:50%;\" />\n\n然后回到刚刚namesilo的域名管理页面，点击你购买的域名，会跳转到一个域名的详细信息页面，下拉找到NameServers处，点击Change,将默认的三个地址删除掉，替换为上图中的两个地址，然后提交。\n\n<img src=\"/img/namesilo2.png\" alt=\"namesilo2\" style=\"zoom:50%;\" />\n\n改好以后回到cloudflare，设置一下域名的DNS\n\n<img src=\"/img/cloudflareDNS.png\" alt=\"cloudflareDNS\" style=\"zoom:50%;\" />\n\n按图示添加一条A记录和一条CNAME记录，其中A记录的内容需要ping一下自己的**xx.github.io**来获取。\n\n做好这些工作以后，等个几分钟，域名解析就会完成了。\n\n## 设置GitHub page的domain\n上述步骤完成后，在`hexo/source/`下新建一个名为`CNAME`的文件，注意不要有后缀，将你的域名放进去，比如我的就是`bwhite.top`，然后这个域名就可以正常使用了。\n\n有的朋友可能会在github项目仓库的setting中设置page的domain,这么做每次新发布一篇文章都需要重新设置一下这个选项，很麻烦。上边的方法可以一劳永逸。\n\n> 参考资料：\n>\n> github docs https://docs.github.com/cn/pages/getting-started-with-github-pages/about-github-pages \n>\n> Cloudflare https://zh.wikipedia.org/wiki/Cloudflare\n>\n> https://cloud.tencent.com/developer/article/2298074?areaId=106001\n\n\n# 接入GoogleAdsense和谷歌搜索\n## Google Adsense\n\nbufferfly配置文件中集成了Google Adsense，但是修改配置文件后发现并不能成功接入Google Adsense，通过对比修改配置文件后的网页源文件和Google Adsense要求的格式，发现两者细节上有一些差别，于是我*禁用了主题配置文件中的Google Adsense*，转而按照Google Adsense的要求重新接入。找到`主题配置文件`的inject,将Google Adsense给出的html验证方式的代码粘贴进去即可。\n\n```bash\n# Inject\n# Insert the code to head (before '</head>' tag) and the bottom (before '</body>' tag)\n# 插入代码到头部 </head> 之前 和 底部 </body> 之前\ninject:\n  head:\n    - <script async src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4550636020481394\"\n     crossorigin=\"anonymous\"></script>\n```\n\n## 被Google收录\n\n来到[Google Search Console](search.google.com/search-console),选择网络前缀类型，将网站地址粘贴进去。接着验证网站所有权，他推荐的方法我试过了但是总是出错，于是我选择html方式验证网站的所有权，方法和Google Adsense的验证方法一样，将他给你的代码粘到`主题配置文件`的inject中，验证成功后就完成了被谷歌收录。\n\n一个验证是否被收录的方法是打开Google，输入`site:yoursite`看看能不能搜出来东西，能搜出来说明被收录了<img src=\"/img/googleSearch.png\" alt=\"googleSearch\" style=\"zoom:50%;\" />\n\n这个其实我在配置之前就能搜到了，不知道怎么回事。但是我配置被百度收录的时候，一直搜不到，不知道是不是githubpage不能被百度收录的原因。\n\n---\n\n为了使搜索引擎更智能的抓取网站，可以给网站配置一个站点地图：首先到hexo的根目录，通过`npm install hexo-generator-sitemap --save`安装所需要的插件，然后在`hexo配置文件`中添加对应代码：\n\n```bash\nPlugins:\n- hexo-generator-sitemap\n\nsitemap:\n    path: sitemap.xml\n```\n\n然后重新部署一下，public目录下生成了sitemap.xml就代表成功了。\n\n---\n\n然后回到[Google Search Console](search.google.com/search-console),选择站点地图，将`sitemap.xml`添加到url后面，提交后看一下状态是否成功，我遇到了**此位置的sitemap不允许此网站**的错误。解决方法是修改`hexo配置文件`，找到`url`这一项，将后边的url修改为正确的地址即可：\n\n```bash\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\nurl: https://bwhite.top ##修改这里\n```\n\n\n# 添加自定义html页面\n我想上传几个自定义样式的html文件，发现他们都会被hexo渲染，查看了文档以后找到了解决方法：修改`hexo配置文件`中的`skip_render`字段，达到让指定文件跳过渲染的目的，有以下几种方式：\n```bash\n#跳过单个文件\nskip_render: \n  - \"xxx.html\"\n  - \"yyy.html\"\n```\n```bash\n#跳过目录下的目录\nskip_render: \"dir/dir/*\"\n```\n```bash\n#跳过目录及其子目录\nskip_render: \"dir/**\"\n```","slug":"个人主页番外配置","published":1,"updated":"2024-03-21T02:18:32.542Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gb2002abiub3ggl19ok","content":"<h1>更换域名</h1>\n<h2 id=\"域名购买\">域名购买</h2>\n<p>来到<a href=\"https://www.namesilo.com/\">namesilo.com</a>购买一个喜欢的域名，在这里购买域名需要付费，但是价格并不高，但是注意一下续订的费用，有的域名第一年价格不高但是续费比较贵。不想付费的朋友可以自行百度一下免费的域名注册网站。</p>\n<img src=\"/img/namesilo.png\" alt=\"namesilo\" style=\"zoom:50%;\" />\n<p>付款之前可以Google一下namesilo优惠券，一般能省个1刀左右。</p>\n<p>购买后回到namesilo的主页，在Dashboard中，可以在Active Domains中查看已有域名（第一次点击此项的时候需要你完成一些个人信息，随便找个虚拟信息生成网站就行，但是邮箱建议填真实的）。一会儿需要再此页面做一些改动，先留着。</p>\n<h2 id=\"域名解析\">域名解析</h2>\n<p>来到<a href=\"https://dash.cloudflare.com/\">cloudflare</a>,点击添加站点</p>\n<img src=\"/img/cloudflare1.png\" alt=\"cloudflare1\" style=\"zoom:50%;\" />\n<p>将刚才购买的域名输入，点击继续，选择最下边的免费计划，点击继续</p>\n<img src=\"/img/cloudflare2.png\" alt=\"cloudflare2\" style=\"zoom:50%;\" />\n<p>然后下拉找到cloudflare提供的两个服务器地址</p>\n<img src=\"/img/cloudflare3.png\" alt=\"cloudflare3\" style=\"zoom:50%;\" />\n<p>然后回到刚刚namesilo的域名管理页面，点击你购买的域名，会跳转到一个域名的详细信息页面，下拉找到NameServers处，点击Change,将默认的三个地址删除掉，替换为上图中的两个地址，然后提交。</p>\n<img src=\"/img/namesilo2.png\" alt=\"namesilo2\" style=\"zoom:50%;\" />\n<p>改好以后回到cloudflare，设置一下域名的DNS</p>\n<img src=\"/img/cloudflareDNS.png\" alt=\"cloudflareDNS\" style=\"zoom:50%;\" />\n<p>按图示添加一条A记录和一条CNAME记录，其中A记录的内容需要ping一下自己的<strong><a href=\"http://xx.github.io\">xx.github.io</a></strong>来获取。</p>\n<p>做好这些工作以后，等个几分钟，域名解析就会完成了。</p>\n<h2 id=\"设置GitHub-page的domain\">设置GitHub page的domain</h2>\n<p>上述步骤完成后，在<code>hexo/source/</code>下新建一个名为<code>CNAME</code>的文件，注意不要有后缀，将你的域名放进去，比如我的就是<code>bwhite.top</code>，然后这个域名就可以正常使用了。</p>\n<p>有的朋友可能会在github项目仓库的setting中设置page的domain,这么做每次新发布一篇文章都需要重新设置一下这个选项，很麻烦。上边的方法可以一劳永逸。</p>\n<blockquote>\n<p>参考资料：</p>\n<p>github docs <a href=\"https://docs.github.com/cn/pages/getting-started-with-github-pages/about-github-pages\">https://docs.github.com/cn/pages/getting-started-with-github-pages/about-github-pages</a></p>\n<p>Cloudflare <a href=\"https://zh.wikipedia.org/wiki/Cloudflare\">https://zh.wikipedia.org/wiki/Cloudflare</a></p>\n<p><a href=\"https://cloud.tencent.com/developer/article/2298074?areaId=106001\">https://cloud.tencent.com/developer/article/2298074?areaId=106001</a></p>\n</blockquote>\n<h1>接入GoogleAdsense和谷歌搜索</h1>\n<h2 id=\"Google-Adsense\">Google Adsense</h2>\n<p>bufferfly配置文件中集成了Google Adsense，但是修改配置文件后发现并不能成功接入Google Adsense，通过对比修改配置文件后的网页源文件和Google Adsense要求的格式，发现两者细节上有一些差别，于是我<em>禁用了主题配置文件中的Google Adsense</em>，转而按照Google Adsense的要求重新接入。找到<code>主题配置文件</code>的inject,将Google Adsense给出的html验证方式的代码粘贴进去即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Inject</span></span><br><span class=\"line\"><span class=\"comment\"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class=\"line\"><span class=\"comment\"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class=\"line\">inject:</span><br><span class=\"line\">  <span class=\"built_in\">head</span>:</span><br><span class=\"line\">    - &lt;script async src=<span class=\"string\">&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4550636020481394&quot;</span></span><br><span class=\"line\">     crossorigin=<span class=\"string\">&quot;anonymous&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"被Google收录\">被Google收录</h2>\n<p>来到<a href=\"search.google.com/search-console\">Google Search Console</a>,选择网络前缀类型，将网站地址粘贴进去。接着验证网站所有权，他推荐的方法我试过了但是总是出错，于是我选择html方式验证网站的所有权，方法和Google Adsense的验证方法一样，将他给你的代码粘到<code>主题配置文件</code>的inject中，验证成功后就完成了被谷歌收录。</p>\n<p>一个验证是否被收录的方法是打开Google，输入<code>site:yoursite</code>看看能不能搜出来东西，能搜出来说明被收录了<img src=\"/img/googleSearch.png\" alt=\"googleSearch\" style=\"zoom:50%;\" /></p>\n<p>这个其实我在配置之前就能搜到了，不知道怎么回事。但是我配置被百度收录的时候，一直搜不到，不知道是不是githubpage不能被百度收录的原因。</p>\n<hr>\n<p>为了使搜索引擎更智能的抓取网站，可以给网站配置一个站点地图：首先到hexo的根目录，通过<code>npm install hexo-generator-sitemap --save</code>安装所需要的插件，然后在<code>hexo配置文件</code>中添加对应代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugins:</span><br><span class=\"line\">- hexo-generator-sitemap</span><br><span class=\"line\"></span><br><span class=\"line\">sitemap:</span><br><span class=\"line\">    path: sitemap.xml</span><br></pre></td></tr></table></figure>\n<p>然后重新部署一下，public目录下生成了sitemap.xml就代表成功了。</p>\n<hr>\n<p>然后回到<a href=\"search.google.com/search-console\">Google Search Console</a>,选择站点地图，将<code>sitemap.xml</code>添加到url后面，提交后看一下状态是否成功，我遇到了<strong>此位置的sitemap不允许此网站</strong>的错误。解决方法是修改<code>hexo配置文件</code>，找到<code>url</code>这一项，将后边的url修改为正确的地址即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class=\"line\">url: https://bwhite.top <span class=\"comment\">##修改这里</span></span><br></pre></td></tr></table></figure>\n<h1>添加自定义html页面</h1>\n<p>我想上传几个自定义样式的html文件，发现他们都会被hexo渲染，查看了文档以后找到了解决方法：修改<code>hexo配置文件</code>中的<code>skip_render</code>字段，达到让指定文件跳过渲染的目的，有以下几种方式：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#跳过单个文件</span></span><br><span class=\"line\">skip_render: </span><br><span class=\"line\">  - <span class=\"string\">&quot;xxx.html&quot;</span></span><br><span class=\"line\">  - <span class=\"string\">&quot;yyy.html&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#跳过目录下的目录</span></span><br><span class=\"line\">skip_render: <span class=\"string\">&quot;dir/dir/*&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#跳过目录及其子目录</span></span><br><span class=\"line\">skip_render: <span class=\"string\">&quot;dir/**&quot;</span></span><br></pre></td></tr></table></figure>","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":"<h1>更换域名</h1>\n<h2 id=\"域名购买\">域名购买</h2>\n<p>来到<a href=\"https://www.namesilo.com/\">namesilo.com</a>购买一个喜欢的域名，在这里购买域名需要付费，但是价格并不高，但是注意一下续订的费用，有的域名第一年价格不高但是续费比较贵。不想付费的朋友可以自行百度一下免费的域名注册网站。</p>\n<img src=\"/img/namesilo.png\" alt=\"namesilo\" style=\"zoom:50%;\" />\n<p>付款之前可以Google一下namesilo优惠券，一般能省个1刀左右。</p>\n<p>购买后回到namesilo的主页，在Dashboard中，可以在Active Domains中查看已有域名（第一次点击此项的时候需要你完成一些个人信息，随便找个虚拟信息生成网站就行，但是邮箱建议填真实的）。一会儿需要再此页面做一些改动，先留着。</p>\n<h2 id=\"域名解析\">域名解析</h2>\n<p>来到<a href=\"https://dash.cloudflare.com/\">cloudflare</a>,点击添加站点</p>\n<img src=\"/img/cloudflare1.png\" alt=\"cloudflare1\" style=\"zoom:50%;\" />\n<p>将刚才购买的域名输入，点击继续，选择最下边的免费计划，点击继续</p>\n<img src=\"/img/cloudflare2.png\" alt=\"cloudflare2\" style=\"zoom:50%;\" />\n<p>然后下拉找到cloudflare提供的两个服务器地址</p>\n<img src=\"/img/cloudflare3.png\" alt=\"cloudflare3\" style=\"zoom:50%;\" />\n<p>然后回到刚刚namesilo的域名管理页面，点击你购买的域名，会跳转到一个域名的详细信息页面，下拉找到NameServers处，点击Change,将默认的三个地址删除掉，替换为上图中的两个地址，然后提交。</p>\n<img src=\"/img/namesilo2.png\" alt=\"namesilo2\" style=\"zoom:50%;\" />\n<p>改好以后回到cloudflare，设置一下域名的DNS</p>\n<img src=\"/img/cloudflareDNS.png\" alt=\"cloudflareDNS\" style=\"zoom:50%;\" />\n<p>按图示添加一条A记录和一条CNAME记录，其中A记录的内容需要ping一下自己的<strong><a href=\"http://xx.github.io\">xx.github.io</a></strong>来获取。</p>\n<p>做好这些工作以后，等个几分钟，域名解析就会完成了。</p>\n<h2 id=\"设置GitHub-page的domain\">设置GitHub page的domain</h2>\n<p>上述步骤完成后，在<code>hexo/source/</code>下新建一个名为<code>CNAME</code>的文件，注意不要有后缀，将你的域名放进去，比如我的就是<code>bwhite.top</code>，然后这个域名就可以正常使用了。</p>\n<p>有的朋友可能会在github项目仓库的setting中设置page的domain,这么做每次新发布一篇文章都需要重新设置一下这个选项，很麻烦。上边的方法可以一劳永逸。</p>\n<blockquote>\n<p>参考资料：</p>\n<p>github docs <a href=\"https://docs.github.com/cn/pages/getting-started-with-github-pages/about-github-pages\">https://docs.github.com/cn/pages/getting-started-with-github-pages/about-github-pages</a></p>\n<p>Cloudflare <a href=\"https://zh.wikipedia.org/wiki/Cloudflare\">https://zh.wikipedia.org/wiki/Cloudflare</a></p>\n<p><a href=\"https://cloud.tencent.com/developer/article/2298074?areaId=106001\">https://cloud.tencent.com/developer/article/2298074?areaId=106001</a></p>\n</blockquote>\n<h1>接入GoogleAdsense和谷歌搜索</h1>\n<h2 id=\"Google-Adsense\">Google Adsense</h2>\n<p>bufferfly配置文件中集成了Google Adsense，但是修改配置文件后发现并不能成功接入Google Adsense，通过对比修改配置文件后的网页源文件和Google Adsense要求的格式，发现两者细节上有一些差别，于是我<em>禁用了主题配置文件中的Google Adsense</em>，转而按照Google Adsense的要求重新接入。找到<code>主题配置文件</code>的inject,将Google Adsense给出的html验证方式的代码粘贴进去即可。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Inject</span></span><br><span class=\"line\"><span class=\"comment\"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class=\"line\"><span class=\"comment\"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class=\"line\">inject:</span><br><span class=\"line\">  <span class=\"built_in\">head</span>:</span><br><span class=\"line\">    - &lt;script async src=<span class=\"string\">&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4550636020481394&quot;</span></span><br><span class=\"line\">     crossorigin=<span class=\"string\">&quot;anonymous&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"被Google收录\">被Google收录</h2>\n<p>来到<a href=\"search.google.com/search-console\">Google Search Console</a>,选择网络前缀类型，将网站地址粘贴进去。接着验证网站所有权，他推荐的方法我试过了但是总是出错，于是我选择html方式验证网站的所有权，方法和Google Adsense的验证方法一样，将他给你的代码粘到<code>主题配置文件</code>的inject中，验证成功后就完成了被谷歌收录。</p>\n<p>一个验证是否被收录的方法是打开Google，输入<code>site:yoursite</code>看看能不能搜出来东西，能搜出来说明被收录了<img src=\"/img/googleSearch.png\" alt=\"googleSearch\" style=\"zoom:50%;\" /></p>\n<p>这个其实我在配置之前就能搜到了，不知道怎么回事。但是我配置被百度收录的时候，一直搜不到，不知道是不是githubpage不能被百度收录的原因。</p>\n<hr>\n<p>为了使搜索引擎更智能的抓取网站，可以给网站配置一个站点地图：首先到hexo的根目录，通过<code>npm install hexo-generator-sitemap --save</code>安装所需要的插件，然后在<code>hexo配置文件</code>中添加对应代码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plugins:</span><br><span class=\"line\">- hexo-generator-sitemap</span><br><span class=\"line\"></span><br><span class=\"line\">sitemap:</span><br><span class=\"line\">    path: sitemap.xml</span><br></pre></td></tr></table></figure>\n<p>然后重新部署一下，public目录下生成了sitemap.xml就代表成功了。</p>\n<hr>\n<p>然后回到<a href=\"search.google.com/search-console\">Google Search Console</a>,选择站点地图，将<code>sitemap.xml</code>添加到url后面，提交后看一下状态是否成功，我遇到了<strong>此位置的sitemap不允许此网站</strong>的错误。解决方法是修改<code>hexo配置文件</code>，找到<code>url</code>这一项，将后边的url修改为正确的地址即可：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class=\"line\">url: https://bwhite.top <span class=\"comment\">##修改这里</span></span><br></pre></td></tr></table></figure>\n<h1>添加自定义html页面</h1>\n<p>我想上传几个自定义样式的html文件，发现他们都会被hexo渲染，查看了文档以后找到了解决方法：修改<code>hexo配置文件</code>中的<code>skip_render</code>字段，达到让指定文件跳过渲染的目的，有以下几种方式：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#跳过单个文件</span></span><br><span class=\"line\">skip_render: </span><br><span class=\"line\">  - <span class=\"string\">&quot;xxx.html&quot;</span></span><br><span class=\"line\">  - <span class=\"string\">&quot;yyy.html&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#跳过目录下的目录</span></span><br><span class=\"line\">skip_render: <span class=\"string\">&quot;dir/dir/*&quot;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#跳过目录及其子目录</span></span><br><span class=\"line\">skip_render: <span class=\"string\">&quot;dir/**&quot;</span></span><br></pre></td></tr></table></figure>"},{"title":"pytorch","description":"pytorch简单入门","abbrlink":"68f29f36","date":"2024-07-17T09:25:35.000Z","_content":"\n# 环境配置\n作为学习，还是用anaconda新建一个虚拟环境比较好.在terminal中`conda create -n pytorch python=3.8 -y`新建一个环境，使用python3.8版本。然后切换到pytorch环境，`pip list`看一下有什么包，发现没有pytorch，于是需要自己安装一下。来到[pyorch官网](https://pytorch.org/),根据自己电脑型号选择对应版本，他会自动生成一条安装命令，在当前虚拟环境运行即可。\n\n安装好了以后，再配置一下pycharm和Jupyter，以后两个应该都会用。\npycharm中新建一个项目，`File->New Project->Pure Python->Python Interpreter->Previously Configured Interpreter->Add Interpreter->Add Local Interpreter->Conda Environment->Use existing environment`选择自己刚刚创建的虚拟环境。这里我的pycharm是2022的，不同版本可能略有差异。\n然后配置Jupyter，新建的虚拟环境也是没有Jupyter的，需要安装相关依赖。在相应的虚拟环境中运行`conda install nb_conda`安装nb_conda,这是一个用于在Jupyter Notebook中管理Conda环境的扩展，运行以后就可以在Jupyter中使用创建的环境。安装好以后在环境中运行`Jupyter notebook`就可以启动了，启动后notebook页面的new下面会出现自己创建的环境。\n\n至此，相关环境就已经配置好了。\n\n# python几个帮助调试的函数\n- dir()\n- help()\n- print(type())//打印返回值类型\n\ndir()函数可以查看目标中包含什么模块。\n如<img src=\"/img/24071701.png\" style=\"zoom:50%;\" />\n<img src=\"/img/24071702.png\" style=\"zoom:50%;\" />\n当展示的信息是__xx__的形式，表明这个模块已经是一个可以使用的函数了，里面没有其他东西。像下面这样：\n<img src=\"/img/24071703.png\" style=\"zoom:50%;\" />\n\n然后就可以用help()来看它的使用方法：\n<img src=\"/img/24071704.png\" style=\"zoom:50%;\" />\n\n# Dataset\n加载数据主要用到两个类：Dataset和Dataloader.\nDataset会提供一种方式来获取目标数据机器label，并且说明总共有多少个数据；Dataloader会将获取到的数据组合为不同的形式以供后边的网络使用。\n\n```python\nfrom torch.utils.data import Dataset\nfrom PIL import Image   #处理图片\nimport os\n\nclass MyData(Dataset):  #python中的继承语法\n\n    # self修饰的属性，相当于类的属性，类内其他方法也可以访问\n    def __init__(self,root_dir,label_dir): #初始化数据集\n        self.root_dir = root_dir    #图片所在目录的上级目录的路径\n        self.lable_dir = label_dir  #图片的标签，就是图片所在目录的名称\n        self.path = os.path.join(self.root_dir,self.lable_dir)  #将这两个拼在一起组成图片所在目录的路径\n        self.img_path = os.listdir(self.path)   #将路径下所有项转成列表\n\n    def __getitem__(self, idx): #从数据集中取图片\n        img_name = self.img_path[idx]   #图片名，没有self修饰，只能在函数内访问\n        img_item_path = os.path.join(self.root_dir,self.lable_dir,img_name) #加上图片名就构成了图片的完整路径\n        img = Image.open(img_item_path) #拿图片\n        label = self.lable_dir  #图片标签\n        return img,label;   #返回图片和对应标签\n\n    def __len__(self):  #数据集大小\n        return len(self.img_path)\n\nroot_dir = \"dataset/train\"\nant_label_dir = \"ants\"\nbee_label_dir = \"bees\"\nants_dataset = MyData(root_dir,ant_label_dir)\nbees_dataset = MyData(root_dir,bee_label_dir)\n\ntrain_dataset = ants_dataset + bees_dataset #数据集可以这样加，组合成一个大的数据集\nimg1,label1 = train_dataset[120]\nimg2,label2 = train_dataset[150]\nprint(img1) #看图片信息\nimg1.show() #显示图片\nimg2.show()\n```\n\n# Tendorboard\ntensorboard可以将数据可视化。他之前属于tensorflow,后来可以单独安装使用了。但是我在单独使用它过程中，出现了无法显示图像的问题，报错failed to fetch run.尝试了很多方法都没用，想什么改绝对路径这些。后来索性把tensorflow也安装了，然后就好用了。\n\n## add_scalar()\n```python\nfrom torch.utils.tensorboard import SummaryWriter\n# 创建 SummaryWriter 对象\nwriter = SummaryWriter(\"logs\")  #参数\"logs\"为文件夹名，事件文件会保存在此\n                    #创建好后可以用在teminal用tensorboard --logdir=logs --port=指定端口 命令显示train noise\n                    #logs是创建对象时的参数，port可以自己指定，不加则默认为6006\n# writer.add_image()\n# y = x\nfor i in range(100):\n    writer.add_scalar(\"y=x\",i,i) # 添加标量数据 参数依次为：图像名，y轴，x轴\n\n# 用后关闭\nwriter.close()\n\n```\n\n```bash\n# terminal run the command. use --port=n to appoint the port,default is 6006\ntensorboard --logdir=logs\n```\n上述代码用tensorboard简单画了一个y=x的图像。\n<img src=\"/img/24072000.png\" style=\"zoom:50%;\" />\n\n## add_image()\n前三个常用的参数\ntag (str): Data identifier\nimg_tensor (torch.Tensor, numpy.ndarray, or string/blobname): Image data\nglobal_step (int): Global step value to record\ndataformats (str): Image data format specification of the form\nCHW, HWC, HW, WH, etc.\n\n其中numpy.ndarray有不同shape，对应了不用的dataformats.默认是3HW.\nimg_tensor的类型只能接收括号中的，而使用PIL的Image，获得的img不是这几个类型：\n```python\nfrom PIL import Image\nimg = Image.open(image_path)\nprint(type(img))\n<class 'PIL.JpegImagePlugin.JpegImageFile'>\n```\n可以使用numpy，这样将PIL的图片转换成的img是满足要求的类型：\n```python\nimport numpy as np\nimg_array = np.array(img)\nprint(type(img_array))\n<class 'numpy.ndarray'>\nprint(img_array.shape)\n(512, 768, 3) #与默认的格式不一样，需要指定dataformats，否则报错。C表示通道，图片一般都是3通道\n\nwriter.add_image(\"test\",img_array,1,dataformats=\"HWC\")\n```\n\n# Transforms\n## 简单的使用\ntransform可以将对象转换为tensor类型，该类型中记录了深度学习中需要的一系列属性。\n\n```python\nfrom PIL import Image\nfrom torch.utils.tensorboard import SummaryWriter\nfrom torchvision import transforms\n\n# 如何使用常用的transforms\n## 先加载数据\nimg_path = \"data/train/ants_image/0013035.jpg\"\nimg = Image.open(img_path)\n\n## ToTensor\ntensor_trains = transforms.ToTensor()   #返回ToTensor对象\ntensor_img = tensor_trains(img) #将img转换成tensor\n\n# print(tensor_img)\n\nwriter = SummaryWriter(\"logs\")\nwriter.add_image(\"image\",tensor_img)\n\n## Normalize归一化\n## (input[channel] - mean[channel]) / std[channel]\nprint(tensor_img[0][0][0]) #归一化前\ntrans_norm = transforms.Normalize([2,0.7,2],[0.4,0.8,2])\nimg_norm = trans_norm(tensor_img)\nprint(img_norm[0][0][0])  #归一化后\nwriter.add_image(\"normalize\",img_norm,3)\n\n## Resize\nprint(img.size)\ntrans_resize = transforms.Resize((512, 512))\n# img PIL -> resize -> img_resize PIL\nimg_resize = trans_resize(img)\n# img_resize PIL -> totensor -> img_resize tensor\nimg_resize = tensor_trans(img_resize)\nwriter.add_image(\"Resize\", img_resize, 0)\nprint(img_resize)\n\n## Compose - resize -2   参数需要transforms类型\ntrans_resize_2 = transforms.Resize(512)  # 等比缩放\n# PIL -> PIL -> tensor\ntrans_compose = transforms.Compose([trans_resize_2, tensor_trans])  # compose参数列表中，前一个的输出作为后一个的输入\nimg_resize_2 = trans_compose(img)\nwriter.add_image(\"Resize\", img_resize_2, 1)\n\n## RandomCrop\ntrans_random = transforms.RandomCrop((500, 600))\ntrans_compose_2 = transforms.Compose([trans_random, tensor_trans])\nfor i in range(10):\n    img_crop = trans_compose_2(img)\n    writer.add_image(\"RandomCropHW\", img_crop, i)\n\nwriter.close()\n```\n\n## \\___call\\___\n```python\nclass Person:\n    def __call__(self, name):\n        print(\"__call__\" + name)\n\n    def hello(self, name):\n        print(\"hello\" + name)\n\n\nperson = Person()\nperson(\"zhangsan\")\nperson.hello(\"lisi\")\n\n#output\n__call__zhangsan\nhellolisi\n```\n可以看出该方法使得一个类实例变得像函数一样可以被调用，并且能够接受参数。\n\n# Dataloader\ndataset是对数据集进行预处理，Dataloader就是怎么将数据集应用到神经网络中。\n\n```python\nimport torchvision.datasets\nfrom torch.utils.data import DataLoader\nfrom torch.utils.tensorboard import SummaryWriter\n\ntest_set = torchvision.datasets.CIFAR10(\"./dataset1\", train=False, transform=torchvision.transforms.ToTensor())\n\ntest_loader = DataLoader(dataset=test_set, batch_size=64, shuffle=True, num_workers=0, drop_last=False)\n\nwriter = SummaryWriter(\"dataloader\")\nfor epoch in range(2):\n    step = 0\n    for data in test_loader:\n        imgs, target = data\n        writer.add_images(\"Epoch: {}\".format(epoch), imgs, step)\n        step = step + 1\n\nwriter.close()\n\n```\n\n","source":"_posts/pytorch.md","raw":"---\ntitle: pytorch\ntags: python\ncategories: python\ndescription: pytorch简单入门\nabbrlink: 68f29f36\ndate: 2024-07-17 17:25:35\n---\n\n# 环境配置\n作为学习，还是用anaconda新建一个虚拟环境比较好.在terminal中`conda create -n pytorch python=3.8 -y`新建一个环境，使用python3.8版本。然后切换到pytorch环境，`pip list`看一下有什么包，发现没有pytorch，于是需要自己安装一下。来到[pyorch官网](https://pytorch.org/),根据自己电脑型号选择对应版本，他会自动生成一条安装命令，在当前虚拟环境运行即可。\n\n安装好了以后，再配置一下pycharm和Jupyter，以后两个应该都会用。\npycharm中新建一个项目，`File->New Project->Pure Python->Python Interpreter->Previously Configured Interpreter->Add Interpreter->Add Local Interpreter->Conda Environment->Use existing environment`选择自己刚刚创建的虚拟环境。这里我的pycharm是2022的，不同版本可能略有差异。\n然后配置Jupyter，新建的虚拟环境也是没有Jupyter的，需要安装相关依赖。在相应的虚拟环境中运行`conda install nb_conda`安装nb_conda,这是一个用于在Jupyter Notebook中管理Conda环境的扩展，运行以后就可以在Jupyter中使用创建的环境。安装好以后在环境中运行`Jupyter notebook`就可以启动了，启动后notebook页面的new下面会出现自己创建的环境。\n\n至此，相关环境就已经配置好了。\n\n# python几个帮助调试的函数\n- dir()\n- help()\n- print(type())//打印返回值类型\n\ndir()函数可以查看目标中包含什么模块。\n如<img src=\"/img/24071701.png\" style=\"zoom:50%;\" />\n<img src=\"/img/24071702.png\" style=\"zoom:50%;\" />\n当展示的信息是__xx__的形式，表明这个模块已经是一个可以使用的函数了，里面没有其他东西。像下面这样：\n<img src=\"/img/24071703.png\" style=\"zoom:50%;\" />\n\n然后就可以用help()来看它的使用方法：\n<img src=\"/img/24071704.png\" style=\"zoom:50%;\" />\n\n# Dataset\n加载数据主要用到两个类：Dataset和Dataloader.\nDataset会提供一种方式来获取目标数据机器label，并且说明总共有多少个数据；Dataloader会将获取到的数据组合为不同的形式以供后边的网络使用。\n\n```python\nfrom torch.utils.data import Dataset\nfrom PIL import Image   #处理图片\nimport os\n\nclass MyData(Dataset):  #python中的继承语法\n\n    # self修饰的属性，相当于类的属性，类内其他方法也可以访问\n    def __init__(self,root_dir,label_dir): #初始化数据集\n        self.root_dir = root_dir    #图片所在目录的上级目录的路径\n        self.lable_dir = label_dir  #图片的标签，就是图片所在目录的名称\n        self.path = os.path.join(self.root_dir,self.lable_dir)  #将这两个拼在一起组成图片所在目录的路径\n        self.img_path = os.listdir(self.path)   #将路径下所有项转成列表\n\n    def __getitem__(self, idx): #从数据集中取图片\n        img_name = self.img_path[idx]   #图片名，没有self修饰，只能在函数内访问\n        img_item_path = os.path.join(self.root_dir,self.lable_dir,img_name) #加上图片名就构成了图片的完整路径\n        img = Image.open(img_item_path) #拿图片\n        label = self.lable_dir  #图片标签\n        return img,label;   #返回图片和对应标签\n\n    def __len__(self):  #数据集大小\n        return len(self.img_path)\n\nroot_dir = \"dataset/train\"\nant_label_dir = \"ants\"\nbee_label_dir = \"bees\"\nants_dataset = MyData(root_dir,ant_label_dir)\nbees_dataset = MyData(root_dir,bee_label_dir)\n\ntrain_dataset = ants_dataset + bees_dataset #数据集可以这样加，组合成一个大的数据集\nimg1,label1 = train_dataset[120]\nimg2,label2 = train_dataset[150]\nprint(img1) #看图片信息\nimg1.show() #显示图片\nimg2.show()\n```\n\n# Tendorboard\ntensorboard可以将数据可视化。他之前属于tensorflow,后来可以单独安装使用了。但是我在单独使用它过程中，出现了无法显示图像的问题，报错failed to fetch run.尝试了很多方法都没用，想什么改绝对路径这些。后来索性把tensorflow也安装了，然后就好用了。\n\n## add_scalar()\n```python\nfrom torch.utils.tensorboard import SummaryWriter\n# 创建 SummaryWriter 对象\nwriter = SummaryWriter(\"logs\")  #参数\"logs\"为文件夹名，事件文件会保存在此\n                    #创建好后可以用在teminal用tensorboard --logdir=logs --port=指定端口 命令显示train noise\n                    #logs是创建对象时的参数，port可以自己指定，不加则默认为6006\n# writer.add_image()\n# y = x\nfor i in range(100):\n    writer.add_scalar(\"y=x\",i,i) # 添加标量数据 参数依次为：图像名，y轴，x轴\n\n# 用后关闭\nwriter.close()\n\n```\n\n```bash\n# terminal run the command. use --port=n to appoint the port,default is 6006\ntensorboard --logdir=logs\n```\n上述代码用tensorboard简单画了一个y=x的图像。\n<img src=\"/img/24072000.png\" style=\"zoom:50%;\" />\n\n## add_image()\n前三个常用的参数\ntag (str): Data identifier\nimg_tensor (torch.Tensor, numpy.ndarray, or string/blobname): Image data\nglobal_step (int): Global step value to record\ndataformats (str): Image data format specification of the form\nCHW, HWC, HW, WH, etc.\n\n其中numpy.ndarray有不同shape，对应了不用的dataformats.默认是3HW.\nimg_tensor的类型只能接收括号中的，而使用PIL的Image，获得的img不是这几个类型：\n```python\nfrom PIL import Image\nimg = Image.open(image_path)\nprint(type(img))\n<class 'PIL.JpegImagePlugin.JpegImageFile'>\n```\n可以使用numpy，这样将PIL的图片转换成的img是满足要求的类型：\n```python\nimport numpy as np\nimg_array = np.array(img)\nprint(type(img_array))\n<class 'numpy.ndarray'>\nprint(img_array.shape)\n(512, 768, 3) #与默认的格式不一样，需要指定dataformats，否则报错。C表示通道，图片一般都是3通道\n\nwriter.add_image(\"test\",img_array,1,dataformats=\"HWC\")\n```\n\n# Transforms\n## 简单的使用\ntransform可以将对象转换为tensor类型，该类型中记录了深度学习中需要的一系列属性。\n\n```python\nfrom PIL import Image\nfrom torch.utils.tensorboard import SummaryWriter\nfrom torchvision import transforms\n\n# 如何使用常用的transforms\n## 先加载数据\nimg_path = \"data/train/ants_image/0013035.jpg\"\nimg = Image.open(img_path)\n\n## ToTensor\ntensor_trains = transforms.ToTensor()   #返回ToTensor对象\ntensor_img = tensor_trains(img) #将img转换成tensor\n\n# print(tensor_img)\n\nwriter = SummaryWriter(\"logs\")\nwriter.add_image(\"image\",tensor_img)\n\n## Normalize归一化\n## (input[channel] - mean[channel]) / std[channel]\nprint(tensor_img[0][0][0]) #归一化前\ntrans_norm = transforms.Normalize([2,0.7,2],[0.4,0.8,2])\nimg_norm = trans_norm(tensor_img)\nprint(img_norm[0][0][0])  #归一化后\nwriter.add_image(\"normalize\",img_norm,3)\n\n## Resize\nprint(img.size)\ntrans_resize = transforms.Resize((512, 512))\n# img PIL -> resize -> img_resize PIL\nimg_resize = trans_resize(img)\n# img_resize PIL -> totensor -> img_resize tensor\nimg_resize = tensor_trans(img_resize)\nwriter.add_image(\"Resize\", img_resize, 0)\nprint(img_resize)\n\n## Compose - resize -2   参数需要transforms类型\ntrans_resize_2 = transforms.Resize(512)  # 等比缩放\n# PIL -> PIL -> tensor\ntrans_compose = transforms.Compose([trans_resize_2, tensor_trans])  # compose参数列表中，前一个的输出作为后一个的输入\nimg_resize_2 = trans_compose(img)\nwriter.add_image(\"Resize\", img_resize_2, 1)\n\n## RandomCrop\ntrans_random = transforms.RandomCrop((500, 600))\ntrans_compose_2 = transforms.Compose([trans_random, tensor_trans])\nfor i in range(10):\n    img_crop = trans_compose_2(img)\n    writer.add_image(\"RandomCropHW\", img_crop, i)\n\nwriter.close()\n```\n\n## \\___call\\___\n```python\nclass Person:\n    def __call__(self, name):\n        print(\"__call__\" + name)\n\n    def hello(self, name):\n        print(\"hello\" + name)\n\n\nperson = Person()\nperson(\"zhangsan\")\nperson.hello(\"lisi\")\n\n#output\n__call__zhangsan\nhellolisi\n```\n可以看出该方法使得一个类实例变得像函数一样可以被调用，并且能够接受参数。\n\n# Dataloader\ndataset是对数据集进行预处理，Dataloader就是怎么将数据集应用到神经网络中。\n\n```python\nimport torchvision.datasets\nfrom torch.utils.data import DataLoader\nfrom torch.utils.tensorboard import SummaryWriter\n\ntest_set = torchvision.datasets.CIFAR10(\"./dataset1\", train=False, transform=torchvision.transforms.ToTensor())\n\ntest_loader = DataLoader(dataset=test_set, batch_size=64, shuffle=True, num_workers=0, drop_last=False)\n\nwriter = SummaryWriter(\"dataloader\")\nfor epoch in range(2):\n    step = 0\n    for data in test_loader:\n        imgs, target = data\n        writer.add_images(\"Epoch: {}\".format(epoch), imgs, step)\n        step = step + 1\n\nwriter.close()\n\n```\n\n","slug":"pytorch","published":1,"updated":"2024-07-25T10:05:44.001Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gb3002dbiubdyp0b6tc","content":"<h1>环境配置</h1>\n<p>作为学习，还是用anaconda新建一个虚拟环境比较好.在terminal中<code>conda create -n pytorch python=3.8 -y</code>新建一个环境，使用python3.8版本。然后切换到pytorch环境，<code>pip list</code>看一下有什么包，发现没有pytorch，于是需要自己安装一下。来到<a href=\"https://pytorch.org/\">pyorch官网</a>,根据自己电脑型号选择对应版本，他会自动生成一条安装命令，在当前虚拟环境运行即可。</p>\n<p>安装好了以后，再配置一下pycharm和Jupyter，以后两个应该都会用。<br>\npycharm中新建一个项目，<code>File-&gt;New Project-&gt;Pure Python-&gt;Python Interpreter-&gt;Previously Configured Interpreter-&gt;Add Interpreter-&gt;Add Local Interpreter-&gt;Conda Environment-&gt;Use existing environment</code>选择自己刚刚创建的虚拟环境。这里我的pycharm是2022的，不同版本可能略有差异。<br>\n然后配置Jupyter，新建的虚拟环境也是没有Jupyter的，需要安装相关依赖。在相应的虚拟环境中运行<code>conda install nb_conda</code>安装nb_conda,这是一个用于在Jupyter Notebook中管理Conda环境的扩展，运行以后就可以在Jupyter中使用创建的环境。安装好以后在环境中运行<code>Jupyter notebook</code>就可以启动了，启动后notebook页面的new下面会出现自己创建的环境。</p>\n<p>至此，相关环境就已经配置好了。</p>\n<h1>python几个帮助调试的函数</h1>\n<ul>\n<li>dir()</li>\n<li>help()</li>\n<li>print(type())//打印返回值类型</li>\n</ul>\n<p>dir()函数可以查看目标中包含什么模块。<br>\n如<img src=\"/img/24071701.png\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24071702.png\" style=\"zoom:50%;\" /><br>\n当展示的信息是__xx__的形式，表明这个模块已经是一个可以使用的函数了，里面没有其他东西。像下面这样：<br>\n<img src=\"/img/24071703.png\" style=\"zoom:50%;\" /></p>\n<p>然后就可以用help()来看它的使用方法：<br>\n<img src=\"/img/24071704.png\" style=\"zoom:50%;\" /></p>\n<h1>Dataset</h1>\n<p>加载数据主要用到两个类：Dataset和Dataloader.<br>\nDataset会提供一种方式来获取目标数据机器label，并且说明总共有多少个数据；Dataloader会将获取到的数据组合为不同的形式以供后边的网络使用。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> torch.utils.data <span class=\"keyword\">import</span> Dataset</span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image   <span class=\"comment\">#处理图片</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyData</span>(<span class=\"title class_ inherited__\">Dataset</span>):  <span class=\"comment\">#python中的继承语法</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># self修饰的属性，相当于类的属性，类内其他方法也可以访问</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self,root_dir,label_dir</span>): <span class=\"comment\">#初始化数据集</span></span><br><span class=\"line\">        self.root_dir = root_dir    <span class=\"comment\">#图片所在目录的上级目录的路径</span></span><br><span class=\"line\">        self.lable_dir = label_dir  <span class=\"comment\">#图片的标签，就是图片所在目录的名称</span></span><br><span class=\"line\">        self.path = os.path.join(self.root_dir,self.lable_dir)  <span class=\"comment\">#将这两个拼在一起组成图片所在目录的路径</span></span><br><span class=\"line\">        self.img_path = os.listdir(self.path)   <span class=\"comment\">#将路径下所有项转成列表</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__getitem__</span>(<span class=\"params\">self, idx</span>): <span class=\"comment\">#从数据集中取图片</span></span><br><span class=\"line\">        img_name = self.img_path[idx]   <span class=\"comment\">#图片名，没有self修饰，只能在函数内访问</span></span><br><span class=\"line\">        img_item_path = os.path.join(self.root_dir,self.lable_dir,img_name) <span class=\"comment\">#加上图片名就构成了图片的完整路径</span></span><br><span class=\"line\">        img = Image.<span class=\"built_in\">open</span>(img_item_path) <span class=\"comment\">#拿图片</span></span><br><span class=\"line\">        label = self.lable_dir  <span class=\"comment\">#图片标签</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> img,label;   <span class=\"comment\">#返回图片和对应标签</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__len__</span>(<span class=\"params\">self</span>):  <span class=\"comment\">#数据集大小</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">len</span>(self.img_path)</span><br><span class=\"line\"></span><br><span class=\"line\">root_dir = <span class=\"string\">&quot;dataset/train&quot;</span></span><br><span class=\"line\">ant_label_dir = <span class=\"string\">&quot;ants&quot;</span></span><br><span class=\"line\">bee_label_dir = <span class=\"string\">&quot;bees&quot;</span></span><br><span class=\"line\">ants_dataset = MyData(root_dir,ant_label_dir)</span><br><span class=\"line\">bees_dataset = MyData(root_dir,bee_label_dir)</span><br><span class=\"line\"></span><br><span class=\"line\">train_dataset = ants_dataset + bees_dataset <span class=\"comment\">#数据集可以这样加，组合成一个大的数据集</span></span><br><span class=\"line\">img1,label1 = train_dataset[<span class=\"number\">120</span>]</span><br><span class=\"line\">img2,label2 = train_dataset[<span class=\"number\">150</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(img1) <span class=\"comment\">#看图片信息</span></span><br><span class=\"line\">img1.show() <span class=\"comment\">#显示图片</span></span><br><span class=\"line\">img2.show()</span><br></pre></td></tr></table></figure>\n<h1>Tendorboard</h1>\n<p>tensorboard可以将数据可视化。他之前属于tensorflow,后来可以单独安装使用了。但是我在单独使用它过程中，出现了无法显示图像的问题，报错failed to fetch run.尝试了很多方法都没用，想什么改绝对路径这些。后来索性把tensorflow也安装了，然后就好用了。</p>\n<h2 id=\"add-scalar\">add_scalar()</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> torch.utils.tensorboard <span class=\"keyword\">import</span> SummaryWriter</span><br><span class=\"line\"><span class=\"comment\"># 创建 SummaryWriter 对象</span></span><br><span class=\"line\">writer = SummaryWriter(<span class=\"string\">&quot;logs&quot;</span>)  <span class=\"comment\">#参数&quot;logs&quot;为文件夹名，事件文件会保存在此</span></span><br><span class=\"line\">                    <span class=\"comment\">#创建好后可以用在teminal用tensorboard --logdir=logs --port=指定端口 命令显示train noise</span></span><br><span class=\"line\">                    <span class=\"comment\">#logs是创建对象时的参数，port可以自己指定，不加则默认为6006</span></span><br><span class=\"line\"><span class=\"comment\"># writer.add_image()</span></span><br><span class=\"line\"><span class=\"comment\"># y = x</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">    writer.add_scalar(<span class=\"string\">&quot;y=x&quot;</span>,i,i) <span class=\"comment\"># 添加标量数据 参数依次为：图像名，y轴，x轴</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用后关闭</span></span><br><span class=\"line\">writer.close()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># terminal run the command. use --port=n to appoint the port,default is 6006</span></span><br><span class=\"line\">tensorboard --logdir=logs</span><br></pre></td></tr></table></figure>\n<p>上述代码用tensorboard简单画了一个y=x的图像。<br>\n<img src=\"/img/24072000.png\" style=\"zoom:50%;\" /></p>\n<h2 id=\"add-image\">add_image()</h2>\n<p>前三个常用的参数<br>\ntag (str): Data identifier<br>\nimg_tensor (torch.Tensor, numpy.ndarray, or string/blobname): Image data<br>\nglobal_step (int): Global step value to record<br>\ndataformats (str): Image data format specification of the form<br>\nCHW, HWC, HW, WH, etc.</p>\n<p>其中numpy.ndarray有不同shape，对应了不用的dataformats.默认是3HW.<br>\nimg_tensor的类型只能接收括号中的，而使用PIL的Image，获得的img不是这几个类型：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(image_path)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(img))</span><br><span class=\"line\">&lt;<span class=\"keyword\">class</span> <span class=\"string\">&#x27;PIL.JpegImagePlugin.JpegImageFile&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>可以使用numpy，这样将PIL的图片转换成的img是满足要求的类型：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">img_array = np.array(img)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(img_array))</span><br><span class=\"line\">&lt;<span class=\"keyword\">class</span> <span class=\"string\">&#x27;numpy.ndarray&#x27;</span>&gt;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(img_array.shape)</span><br><span class=\"line\">(<span class=\"number\">512</span>, <span class=\"number\">768</span>, <span class=\"number\">3</span>) <span class=\"comment\">#与默认的格式不一样，需要指定dataformats，否则报错。C表示通道，图片一般都是3通道</span></span><br><span class=\"line\"></span><br><span class=\"line\">writer.add_image(<span class=\"string\">&quot;test&quot;</span>,img_array,<span class=\"number\">1</span>,dataformats=<span class=\"string\">&quot;HWC&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h1>Transforms</h1>\n<h2 id=\"简单的使用\">简单的使用</h2>\n<p>transform可以将对象转换为tensor类型，该类型中记录了深度学习中需要的一系列属性。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"><span class=\"keyword\">from</span> torch.utils.tensorboard <span class=\"keyword\">import</span> SummaryWriter</span><br><span class=\"line\"><span class=\"keyword\">from</span> torchvision <span class=\"keyword\">import</span> transforms</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如何使用常用的transforms</span></span><br><span class=\"line\"><span class=\"comment\">## 先加载数据</span></span><br><span class=\"line\">img_path = <span class=\"string\">&quot;data/train/ants_image/0013035.jpg&quot;</span></span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(img_path)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## ToTensor</span></span><br><span class=\"line\">tensor_trains = transforms.ToTensor()   <span class=\"comment\">#返回ToTensor对象</span></span><br><span class=\"line\">tensor_img = tensor_trains(img) <span class=\"comment\">#将img转换成tensor</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(tensor_img)</span></span><br><span class=\"line\"></span><br><span class=\"line\">writer = SummaryWriter(<span class=\"string\">&quot;logs&quot;</span>)</span><br><span class=\"line\">writer.add_image(<span class=\"string\">&quot;image&quot;</span>,tensor_img)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Normalize归一化</span></span><br><span class=\"line\"><span class=\"comment\">## (input[channel] - mean[channel]) / std[channel]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(tensor_img[<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>]) <span class=\"comment\">#归一化前</span></span><br><span class=\"line\">trans_norm = transforms.Normalize([<span class=\"number\">2</span>,<span class=\"number\">0.7</span>,<span class=\"number\">2</span>],[<span class=\"number\">0.4</span>,<span class=\"number\">0.8</span>,<span class=\"number\">2</span>])</span><br><span class=\"line\">img_norm = trans_norm(tensor_img)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(img_norm[<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>])  <span class=\"comment\">#归一化后</span></span><br><span class=\"line\">writer.add_image(<span class=\"string\">&quot;normalize&quot;</span>,img_norm,<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Resize</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(img.size)</span><br><span class=\"line\">trans_resize = transforms.Resize((<span class=\"number\">512</span>, <span class=\"number\">512</span>))</span><br><span class=\"line\"><span class=\"comment\"># img PIL -&gt; resize -&gt; img_resize PIL</span></span><br><span class=\"line\">img_resize = trans_resize(img)</span><br><span class=\"line\"><span class=\"comment\"># img_resize PIL -&gt; totensor -&gt; img_resize tensor</span></span><br><span class=\"line\">img_resize = tensor_trans(img_resize)</span><br><span class=\"line\">writer.add_image(<span class=\"string\">&quot;Resize&quot;</span>, img_resize, <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(img_resize)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Compose - resize -2   参数需要transforms类型</span></span><br><span class=\"line\">trans_resize_2 = transforms.Resize(<span class=\"number\">512</span>)  <span class=\"comment\"># 等比缩放</span></span><br><span class=\"line\"><span class=\"comment\"># PIL -&gt; PIL -&gt; tensor</span></span><br><span class=\"line\">trans_compose = transforms.Compose([trans_resize_2, tensor_trans])  <span class=\"comment\"># compose参数列表中，前一个的输出作为后一个的输入</span></span><br><span class=\"line\">img_resize_2 = trans_compose(img)</span><br><span class=\"line\">writer.add_image(<span class=\"string\">&quot;Resize&quot;</span>, img_resize_2, <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## RandomCrop</span></span><br><span class=\"line\">trans_random = transforms.RandomCrop((<span class=\"number\">500</span>, <span class=\"number\">600</span>))</span><br><span class=\"line\">trans_compose_2 = transforms.Compose([trans_random, tensor_trans])</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    img_crop = trans_compose_2(img)</span><br><span class=\"line\">    writer.add_image(<span class=\"string\">&quot;RandomCropHW&quot;</span>, img_crop, i)</span><br><span class=\"line\"></span><br><span class=\"line\">writer.close()</span><br></pre></td></tr></table></figure>\n<h2 id=\"call\">_<strong>call_</strong></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__call__</span>(<span class=\"params\">self, name</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;__call__&quot;</span> + name)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>(<span class=\"params\">self, name</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello&quot;</span> + name)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">person = Person()</span><br><span class=\"line\">person(<span class=\"string\">&quot;zhangsan&quot;</span>)</span><br><span class=\"line\">person.hello(<span class=\"string\">&quot;lisi&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#output</span></span><br><span class=\"line\">__call__zhangsan</span><br><span class=\"line\">hellolisi</span><br></pre></td></tr></table></figure>\n<p>可以看出该方法使得一个类实例变得像函数一样可以被调用，并且能够接受参数。</p>\n<h1>Dataloader</h1>\n<p>dataset是对数据集进行预处理，Dataloader就是怎么将数据集应用到神经网络中。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torchvision.datasets</span><br><span class=\"line\"><span class=\"keyword\">from</span> torch.utils.data <span class=\"keyword\">import</span> DataLoader</span><br><span class=\"line\"><span class=\"keyword\">from</span> torch.utils.tensorboard <span class=\"keyword\">import</span> SummaryWriter</span><br><span class=\"line\"></span><br><span class=\"line\">test_set = torchvision.datasets.CIFAR10(<span class=\"string\">&quot;./dataset1&quot;</span>, train=<span class=\"literal\">False</span>, transform=torchvision.transforms.ToTensor())</span><br><span class=\"line\"></span><br><span class=\"line\">test_loader = DataLoader(dataset=test_set, batch_size=<span class=\"number\">64</span>, shuffle=<span class=\"literal\">True</span>, num_workers=<span class=\"number\">0</span>, drop_last=<span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">writer = SummaryWriter(<span class=\"string\">&quot;dataloader&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> epoch <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>):</span><br><span class=\"line\">    step = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> data <span class=\"keyword\">in</span> test_loader:</span><br><span class=\"line\">        imgs, target = data</span><br><span class=\"line\">        writer.add_images(<span class=\"string\">&quot;Epoch: &#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(epoch), imgs, step)</span><br><span class=\"line\">        step = step + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">writer.close()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":"<h1>环境配置</h1>\n<p>作为学习，还是用anaconda新建一个虚拟环境比较好.在terminal中<code>conda create -n pytorch python=3.8 -y</code>新建一个环境，使用python3.8版本。然后切换到pytorch环境，<code>pip list</code>看一下有什么包，发现没有pytorch，于是需要自己安装一下。来到<a href=\"https://pytorch.org/\">pyorch官网</a>,根据自己电脑型号选择对应版本，他会自动生成一条安装命令，在当前虚拟环境运行即可。</p>\n<p>安装好了以后，再配置一下pycharm和Jupyter，以后两个应该都会用。<br>\npycharm中新建一个项目，<code>File-&gt;New Project-&gt;Pure Python-&gt;Python Interpreter-&gt;Previously Configured Interpreter-&gt;Add Interpreter-&gt;Add Local Interpreter-&gt;Conda Environment-&gt;Use existing environment</code>选择自己刚刚创建的虚拟环境。这里我的pycharm是2022的，不同版本可能略有差异。<br>\n然后配置Jupyter，新建的虚拟环境也是没有Jupyter的，需要安装相关依赖。在相应的虚拟环境中运行<code>conda install nb_conda</code>安装nb_conda,这是一个用于在Jupyter Notebook中管理Conda环境的扩展，运行以后就可以在Jupyter中使用创建的环境。安装好以后在环境中运行<code>Jupyter notebook</code>就可以启动了，启动后notebook页面的new下面会出现自己创建的环境。</p>\n<p>至此，相关环境就已经配置好了。</p>\n<h1>python几个帮助调试的函数</h1>\n<ul>\n<li>dir()</li>\n<li>help()</li>\n<li>print(type())//打印返回值类型</li>\n</ul>\n<p>dir()函数可以查看目标中包含什么模块。<br>\n如<img src=\"/img/24071701.png\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24071702.png\" style=\"zoom:50%;\" /><br>\n当展示的信息是__xx__的形式，表明这个模块已经是一个可以使用的函数了，里面没有其他东西。像下面这样：<br>\n<img src=\"/img/24071703.png\" style=\"zoom:50%;\" /></p>\n<p>然后就可以用help()来看它的使用方法：<br>\n<img src=\"/img/24071704.png\" style=\"zoom:50%;\" /></p>\n<h1>Dataset</h1>\n<p>加载数据主要用到两个类：Dataset和Dataloader.<br>\nDataset会提供一种方式来获取目标数据机器label，并且说明总共有多少个数据；Dataloader会将获取到的数据组合为不同的形式以供后边的网络使用。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> torch.utils.data <span class=\"keyword\">import</span> Dataset</span><br><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image   <span class=\"comment\">#处理图片</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyData</span>(<span class=\"title class_ inherited__\">Dataset</span>):  <span class=\"comment\">#python中的继承语法</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># self修饰的属性，相当于类的属性，类内其他方法也可以访问</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self,root_dir,label_dir</span>): <span class=\"comment\">#初始化数据集</span></span><br><span class=\"line\">        self.root_dir = root_dir    <span class=\"comment\">#图片所在目录的上级目录的路径</span></span><br><span class=\"line\">        self.lable_dir = label_dir  <span class=\"comment\">#图片的标签，就是图片所在目录的名称</span></span><br><span class=\"line\">        self.path = os.path.join(self.root_dir,self.lable_dir)  <span class=\"comment\">#将这两个拼在一起组成图片所在目录的路径</span></span><br><span class=\"line\">        self.img_path = os.listdir(self.path)   <span class=\"comment\">#将路径下所有项转成列表</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__getitem__</span>(<span class=\"params\">self, idx</span>): <span class=\"comment\">#从数据集中取图片</span></span><br><span class=\"line\">        img_name = self.img_path[idx]   <span class=\"comment\">#图片名，没有self修饰，只能在函数内访问</span></span><br><span class=\"line\">        img_item_path = os.path.join(self.root_dir,self.lable_dir,img_name) <span class=\"comment\">#加上图片名就构成了图片的完整路径</span></span><br><span class=\"line\">        img = Image.<span class=\"built_in\">open</span>(img_item_path) <span class=\"comment\">#拿图片</span></span><br><span class=\"line\">        label = self.lable_dir  <span class=\"comment\">#图片标签</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> img,label;   <span class=\"comment\">#返回图片和对应标签</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__len__</span>(<span class=\"params\">self</span>):  <span class=\"comment\">#数据集大小</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">len</span>(self.img_path)</span><br><span class=\"line\"></span><br><span class=\"line\">root_dir = <span class=\"string\">&quot;dataset/train&quot;</span></span><br><span class=\"line\">ant_label_dir = <span class=\"string\">&quot;ants&quot;</span></span><br><span class=\"line\">bee_label_dir = <span class=\"string\">&quot;bees&quot;</span></span><br><span class=\"line\">ants_dataset = MyData(root_dir,ant_label_dir)</span><br><span class=\"line\">bees_dataset = MyData(root_dir,bee_label_dir)</span><br><span class=\"line\"></span><br><span class=\"line\">train_dataset = ants_dataset + bees_dataset <span class=\"comment\">#数据集可以这样加，组合成一个大的数据集</span></span><br><span class=\"line\">img1,label1 = train_dataset[<span class=\"number\">120</span>]</span><br><span class=\"line\">img2,label2 = train_dataset[<span class=\"number\">150</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(img1) <span class=\"comment\">#看图片信息</span></span><br><span class=\"line\">img1.show() <span class=\"comment\">#显示图片</span></span><br><span class=\"line\">img2.show()</span><br></pre></td></tr></table></figure>\n<h1>Tendorboard</h1>\n<p>tensorboard可以将数据可视化。他之前属于tensorflow,后来可以单独安装使用了。但是我在单独使用它过程中，出现了无法显示图像的问题，报错failed to fetch run.尝试了很多方法都没用，想什么改绝对路径这些。后来索性把tensorflow也安装了，然后就好用了。</p>\n<h2 id=\"add-scalar\">add_scalar()</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> torch.utils.tensorboard <span class=\"keyword\">import</span> SummaryWriter</span><br><span class=\"line\"><span class=\"comment\"># 创建 SummaryWriter 对象</span></span><br><span class=\"line\">writer = SummaryWriter(<span class=\"string\">&quot;logs&quot;</span>)  <span class=\"comment\">#参数&quot;logs&quot;为文件夹名，事件文件会保存在此</span></span><br><span class=\"line\">                    <span class=\"comment\">#创建好后可以用在teminal用tensorboard --logdir=logs --port=指定端口 命令显示train noise</span></span><br><span class=\"line\">                    <span class=\"comment\">#logs是创建对象时的参数，port可以自己指定，不加则默认为6006</span></span><br><span class=\"line\"><span class=\"comment\"># writer.add_image()</span></span><br><span class=\"line\"><span class=\"comment\"># y = x</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">    writer.add_scalar(<span class=\"string\">&quot;y=x&quot;</span>,i,i) <span class=\"comment\"># 添加标量数据 参数依次为：图像名，y轴，x轴</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 用后关闭</span></span><br><span class=\"line\">writer.close()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># terminal run the command. use --port=n to appoint the port,default is 6006</span></span><br><span class=\"line\">tensorboard --logdir=logs</span><br></pre></td></tr></table></figure>\n<p>上述代码用tensorboard简单画了一个y=x的图像。<br>\n<img src=\"/img/24072000.png\" style=\"zoom:50%;\" /></p>\n<h2 id=\"add-image\">add_image()</h2>\n<p>前三个常用的参数<br>\ntag (str): Data identifier<br>\nimg_tensor (torch.Tensor, numpy.ndarray, or string/blobname): Image data<br>\nglobal_step (int): Global step value to record<br>\ndataformats (str): Image data format specification of the form<br>\nCHW, HWC, HW, WH, etc.</p>\n<p>其中numpy.ndarray有不同shape，对应了不用的dataformats.默认是3HW.<br>\nimg_tensor的类型只能接收括号中的，而使用PIL的Image，获得的img不是这几个类型：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(image_path)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(img))</span><br><span class=\"line\">&lt;<span class=\"keyword\">class</span> <span class=\"string\">&#x27;PIL.JpegImagePlugin.JpegImageFile&#x27;</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>可以使用numpy，这样将PIL的图片转换成的img是满足要求的类型：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\">img_array = np.array(img)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(img_array))</span><br><span class=\"line\">&lt;<span class=\"keyword\">class</span> <span class=\"string\">&#x27;numpy.ndarray&#x27;</span>&gt;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(img_array.shape)</span><br><span class=\"line\">(<span class=\"number\">512</span>, <span class=\"number\">768</span>, <span class=\"number\">3</span>) <span class=\"comment\">#与默认的格式不一样，需要指定dataformats，否则报错。C表示通道，图片一般都是3通道</span></span><br><span class=\"line\"></span><br><span class=\"line\">writer.add_image(<span class=\"string\">&quot;test&quot;</span>,img_array,<span class=\"number\">1</span>,dataformats=<span class=\"string\">&quot;HWC&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h1>Transforms</h1>\n<h2 id=\"简单的使用\">简单的使用</h2>\n<p>transform可以将对象转换为tensor类型，该类型中记录了深度学习中需要的一系列属性。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> PIL <span class=\"keyword\">import</span> Image</span><br><span class=\"line\"><span class=\"keyword\">from</span> torch.utils.tensorboard <span class=\"keyword\">import</span> SummaryWriter</span><br><span class=\"line\"><span class=\"keyword\">from</span> torchvision <span class=\"keyword\">import</span> transforms</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 如何使用常用的transforms</span></span><br><span class=\"line\"><span class=\"comment\">## 先加载数据</span></span><br><span class=\"line\">img_path = <span class=\"string\">&quot;data/train/ants_image/0013035.jpg&quot;</span></span><br><span class=\"line\">img = Image.<span class=\"built_in\">open</span>(img_path)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## ToTensor</span></span><br><span class=\"line\">tensor_trains = transforms.ToTensor()   <span class=\"comment\">#返回ToTensor对象</span></span><br><span class=\"line\">tensor_img = tensor_trains(img) <span class=\"comment\">#将img转换成tensor</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(tensor_img)</span></span><br><span class=\"line\"></span><br><span class=\"line\">writer = SummaryWriter(<span class=\"string\">&quot;logs&quot;</span>)</span><br><span class=\"line\">writer.add_image(<span class=\"string\">&quot;image&quot;</span>,tensor_img)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Normalize归一化</span></span><br><span class=\"line\"><span class=\"comment\">## (input[channel] - mean[channel]) / std[channel]</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(tensor_img[<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>]) <span class=\"comment\">#归一化前</span></span><br><span class=\"line\">trans_norm = transforms.Normalize([<span class=\"number\">2</span>,<span class=\"number\">0.7</span>,<span class=\"number\">2</span>],[<span class=\"number\">0.4</span>,<span class=\"number\">0.8</span>,<span class=\"number\">2</span>])</span><br><span class=\"line\">img_norm = trans_norm(tensor_img)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(img_norm[<span class=\"number\">0</span>][<span class=\"number\">0</span>][<span class=\"number\">0</span>])  <span class=\"comment\">#归一化后</span></span><br><span class=\"line\">writer.add_image(<span class=\"string\">&quot;normalize&quot;</span>,img_norm,<span class=\"number\">3</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Resize</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(img.size)</span><br><span class=\"line\">trans_resize = transforms.Resize((<span class=\"number\">512</span>, <span class=\"number\">512</span>))</span><br><span class=\"line\"><span class=\"comment\"># img PIL -&gt; resize -&gt; img_resize PIL</span></span><br><span class=\"line\">img_resize = trans_resize(img)</span><br><span class=\"line\"><span class=\"comment\"># img_resize PIL -&gt; totensor -&gt; img_resize tensor</span></span><br><span class=\"line\">img_resize = tensor_trans(img_resize)</span><br><span class=\"line\">writer.add_image(<span class=\"string\">&quot;Resize&quot;</span>, img_resize, <span class=\"number\">0</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(img_resize)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## Compose - resize -2   参数需要transforms类型</span></span><br><span class=\"line\">trans_resize_2 = transforms.Resize(<span class=\"number\">512</span>)  <span class=\"comment\"># 等比缩放</span></span><br><span class=\"line\"><span class=\"comment\"># PIL -&gt; PIL -&gt; tensor</span></span><br><span class=\"line\">trans_compose = transforms.Compose([trans_resize_2, tensor_trans])  <span class=\"comment\"># compose参数列表中，前一个的输出作为后一个的输入</span></span><br><span class=\"line\">img_resize_2 = trans_compose(img)</span><br><span class=\"line\">writer.add_image(<span class=\"string\">&quot;Resize&quot;</span>, img_resize_2, <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## RandomCrop</span></span><br><span class=\"line\">trans_random = transforms.RandomCrop((<span class=\"number\">500</span>, <span class=\"number\">600</span>))</span><br><span class=\"line\">trans_compose_2 = transforms.Compose([trans_random, tensor_trans])</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    img_crop = trans_compose_2(img)</span><br><span class=\"line\">    writer.add_image(<span class=\"string\">&quot;RandomCropHW&quot;</span>, img_crop, i)</span><br><span class=\"line\"></span><br><span class=\"line\">writer.close()</span><br></pre></td></tr></table></figure>\n<h2 id=\"call\">_<strong>call_</strong></h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__call__</span>(<span class=\"params\">self, name</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;__call__&quot;</span> + name)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>(<span class=\"params\">self, name</span>):</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello&quot;</span> + name)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">person = Person()</span><br><span class=\"line\">person(<span class=\"string\">&quot;zhangsan&quot;</span>)</span><br><span class=\"line\">person.hello(<span class=\"string\">&quot;lisi&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#output</span></span><br><span class=\"line\">__call__zhangsan</span><br><span class=\"line\">hellolisi</span><br></pre></td></tr></table></figure>\n<p>可以看出该方法使得一个类实例变得像函数一样可以被调用，并且能够接受参数。</p>\n<h1>Dataloader</h1>\n<p>dataset是对数据集进行预处理，Dataloader就是怎么将数据集应用到神经网络中。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torchvision.datasets</span><br><span class=\"line\"><span class=\"keyword\">from</span> torch.utils.data <span class=\"keyword\">import</span> DataLoader</span><br><span class=\"line\"><span class=\"keyword\">from</span> torch.utils.tensorboard <span class=\"keyword\">import</span> SummaryWriter</span><br><span class=\"line\"></span><br><span class=\"line\">test_set = torchvision.datasets.CIFAR10(<span class=\"string\">&quot;./dataset1&quot;</span>, train=<span class=\"literal\">False</span>, transform=torchvision.transforms.ToTensor())</span><br><span class=\"line\"></span><br><span class=\"line\">test_loader = DataLoader(dataset=test_set, batch_size=<span class=\"number\">64</span>, shuffle=<span class=\"literal\">True</span>, num_workers=<span class=\"number\">0</span>, drop_last=<span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">writer = SummaryWriter(<span class=\"string\">&quot;dataloader&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> epoch <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">2</span>):</span><br><span class=\"line\">    step = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> data <span class=\"keyword\">in</span> test_loader:</span><br><span class=\"line\">        imgs, target = data</span><br><span class=\"line\">        writer.add_images(<span class=\"string\">&quot;Epoch: &#123;&#125;&quot;</span>.<span class=\"built_in\">format</span>(epoch), imgs, step)</span><br><span class=\"line\">        step = step + <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">writer.close()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n"},{"title":"unsupervised learning","description":"something about unsupervised learning, recommender systems and reinforcement learning","abbrlink":"9915f4c8","date":"2024-01-29T13:26:53.000Z","_content":"\n同一系列的[监督学习](https://b-white07.github.io/posts/acf03113.html)和[神经网络](https://b-white07.github.io/posts/1ca572.html)相关笔记点击查看\n\n\n# 无监督学习\n监督学习和无监督学习的对比在[监督学习](https://b-white07.github.io/posts/acf03113.html)开篇处已经介绍，此处不再赘述。\n## 聚类算法Clustering\n聚类就是对于输入特征x,算法会根据一些特征自动将其归为几类。与监督学习的数据集不同，这些数据集是没有y标签的。\n<img src=\"/img/24050800.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## K-means聚类算法\n假设现在你需要算法寻找一个数据集中的两个集群，K-means算法做的第一件事是随机猜测这两个集群的中心在哪里，集群的中心称为**集群质心**，集群质心与输入特征x具有**相同的维度**。然后算法会遍历数据集中的每个数据，看一下他们与两个集群质心的差距，离哪个质心更近，就讲该数据归为哪一类。下图中❌和蓝叉就是算法最开始随机猜的两个值。\n<img src=\"/img/24050801.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n然后算法会计算红色集群的平均值，然后将最初预测的红色质心移动到红色集群的平均值处。同样的方式处理蓝色质心。\n然后在新的质心基础上，算法会重复第一步，遍历数据集中的每个节点，再次计算他们对于质心的位置，如果发现原来被划分为红色集群的数据现在离蓝色更近，那么将该数据划分到蓝色集群。\n<img src=\"/img/24050802.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24050803.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n然后再次计算新的集群的平均值，然后移动质心。重复执行这两个步骤，最后会导致质心的位置不再有变化，此时K-means算法就收敛了。\n<img src=\"/img/24050804.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***实现***\n计算数据和质心的靠近程度其实就是计算两者的距离$||x^i - \\mu _k||$，也称为**L2范数**。在计算一个数据$x_i$与每一个质心$\\mu_k$的距离以后，选择使距离最小的k,将其设置为$c^i$的值，$c^i$记录了一个索引，该索引记录了当前数据与哪个质心离得最近。当计算距离的时候，其实计算其平方会方便一些，而且效果是一样的。然后计算不同集群平均值即可得到不同集群新的质心。\n<img src=\"/img/24050805.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n有一个极端的情况：在分配集群的时候，没有任何一个数据属于一个质心，此时可以删掉这个质心，这也就会减少一个集群。如果不希望集群的数量减少，那么可以试一下重新随机一个质心位置，看看能不能将数据分配给他。\n对于没有明显被划分为不同集群的数据集，K-means算法也可以较好的工作。比如衣服大小与人身高体重的关系，往往是一组连续的没有明显分组的数据，在这个数据集上使用K-means算法，依旧会得到比如k=3的3个集群，这三个集群的质心可以作为小、中、大号的代表。\n<img src=\"/img/24050806.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***代价函数***\nK-means算法的损失函数（失真函数distortion funciton）定义如下，他其实就是在找合适的质点，使得所有数据与其质点距离平方和的平均值最小。\n<img src=\"/img/24050807.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n以之前的例子为例，此时的状态，该模型的代价就是每一个蓝色的数据与蓝色叉距离的平方与每一个红色数据与红叉的距离的平方的和的平均值。\n<img src=\"/img/24050808.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n可以看到，该代价函数是$C^i$和$\\mu_k$的函数，每个$C^i$与$x^i$是一一对应的，因为它代表了$x^i$是属于哪个质心的；而$\\mu_k$本身就是质心的位置，所以这个代价函数会不断调整数据属于哪个集群以及不同质点的位置。\n\n进一步来看一下K-means算法的每一步：\n第一步是在将数据分配给不同的质心，此时质心是保持不动的。观察代价函数，若想让代价函数变小，很明显应该减少二者之间的距离，而K-means算法也正是这么做的，他将数据分配给了离自己近的质心。\n第二步是数据已经分配好了，调整质心的位置。K-means算法做的是将新的质心位置取在集群的平均值的位置，事实上，这种做法会使所有样本的$||x^i-\\mu_c^i||$和的平均值最小，也就是减少了代价函数。\n也就是说K-means算法每一步都在降低他的代价函数，所以万一出现了代价函数升高的情况，意味着你的程序有Bug了。\n<img src=\"/img/24050809.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***质心初值的随机选择***\n之前说过K-means算法的第一步是随机选择一个质心，常见的做法是如果你需要k个质心，那么可以从数据集中随机选择k个数据作为初始的质心。\n对于质心不同的初值，K-means算法在收敛后可能得到不同的聚类，如下图所示不同的初值得到了3个聚类。\n<img src=\"/img/24050900.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n因此为了是算法得到一个不错的效果，通常需要多次选择随机的初值，然后分别计算这些模型的代价函数，然后选择代价函数最低的模型。\n<img src=\"/img/24050901.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***质心（聚类）数量k的选择***\n有一个选择k的方法是叫肘算法（Elbow method），不得不说名字太难听了，还不如以发明者的名字命名。该方法将代价函数J()作为K的函数，观察J()的变化。如果发现了一点处函数的变化幅度发生突变，那么就选择该点处的K值。如下图中，K=3之前J()都在快速下降，但是k=3之后J()下降速度明显变缓，那么此时就可以选择K=3.但是J()往往也会想右图那样，找不到这样的K值。此时也不能找使J()最小的K值，因为随着K的增大，J()总是在减小。所以这个方法感觉不太行。\n<img src=\"/img/24050902.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n另外一种方法是权衡一下不同k值的效果，看看哪个更符合当前需求。比如在衣服尺码的数据集中，可以将k取为3，这样会得到三个聚类，这三个聚类可以分别代表小号，中号和大号。当然也可以让k=5，这样就得到了5个聚类，那么就可以分别代表超小、小、中、大、超大号。将衣服分为更多的类别，会增加制作成本，但是衣服会更贴合消费者的体型。所以在贴合消费者体型和制作成本之间，要做出一个权衡，以选择合适的k。\n<img src=\"/img/24050903.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n\n\n## 异常检测Anomaly detection\n异常检测就是根据已有的数据集，判断新的数据与已有数据的相似性，以此来检测新的数据是否有异常。\n<img src=\"/img/24051200.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n异常检测最常见的方法是**密度估计（density estimation）**。该算法首先会建立一个关于特征x的概率模型$p(x)$，该模型的作用是检测当前特征的不同取值的概率。如下图最小的椭圆中的取值概率最高，向外慢慢降低。然后用该模型预测新数据，得到新数据的概率$P(x_{test})$,如果得到的概率小于某个阈值，那么就认为该数据有异常。\n<img src=\"/img/24051201.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n异常检测的应用很广泛，比如制造业中像检测引擎、欺诈检测、黑客攻击等。\n<img src=\"/img/24051202.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***高斯正态分布***\n为了应用异常检测，需要了解高斯正态分布。首先了解如何利用高斯分布实现**单特征**的异常检测。\n高斯分布中，$\\mu$是期望，也就是这组数据的平均数；$\\sigma$是标准差，$\\sigma^2$是方差，描述了这组数据的分散程度。\n<img src=\"/img/24051300.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n高斯曲线的方程为$p(x)=\\frac{1}{\\sqrt {2\\pi} \\sigma}e^{\\frac{-(x-\\mu)^2}{2 \\sigma^2}}$,其曲线与x轴围成的面积恒为1，因此对于不同的$\\mu、\\sigma$该图像有如下变化：\n<img src=\"/img/24051301.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n根据数据集可以计算出$\\mu、\\sigma$，然后就得到了相应的高斯分布曲线。在此基础上，对于一个新的输入x，可以计算他的p(x),如果概率较高，那就认为这个数据没什么异常；相反如果这个值较低，那么就认为这个数据可能出现了异常。这了的数据只能是单特征，即x是个数而不是向量。\n<img src=\"/img/24051302.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n数据集x为向量时，可以依靠每个特征的p(x)来计算总的概率：$p(\\vec{x}) = p(x_1;\\mu_1,\\sigma_1^2)p(x_2;\\mu_2,\\sigma_2^2)···p(x_n;\\mu_n,\\sigma_n^2) = \\prod_{j=1}^{n}p(x_j;\\mu_j,\\sigma_j^2)$\n<img src=\"/img/24051303.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n多特征的异常检测检测算法，n不是数据集的数量而是可能导致异常的特征：\n<img src=\"/img/24051304.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24051305.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 异常检测系统的评估\n**实数评估**可以用于评估异常检测系统。通过实数评估，可以方便的选择特征x或者阈值$\\varepsilon$之类的参数。\n在无监督学习中，数据集是没有标签的，但是我们可以假设数据集有标签。如飞机发动机的数据集中，可以假设正常的发动机对应于y=0,异常的发动机对应于y=1.通常来讲异常发动机的数量是远小于正常发动机的数量的对吧。然后将数据集划分为三个部分，一部分用于训练模型，一部分用于调整参数，一部分用于评估模型。其中用来训练模型的数据集选用正常的发动机的数据，虽说是用正常的发动机训练，但实际上数据集中若参杂了一些异常的发动机也没关系。训练好模型以后，划分出一个交叉验证集和一个测试集，通过交叉验证集的结果来对模型进行微调，最后通过测试集来评估该模型的表现。这其实和之前的评估神经网络步骤很类似。\n<img src=\"/img/24051400.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n由于在异常检测的应用中，异常的例子往往很少，所以有时也可以不用单独划分出一个测试集。当然这样对于该模型的泛化评估就会差一些。\n<img src=\"/img/24051401.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n其实异常检测的数据集，正常的和异常的数量差别很大，如果给他们加上标签，那么这些数据集就是深度学习中，数据集偏斜很大的情况，在这种情况下，可以通过精确率、召回率、F1score这些参数来评估该模型。\n<img src=\"/img/24051402.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 异常检测 VS 监督学习\n上边提到了给无监督学习的数据集假设标签，那其实就变成了监督学习，那二者的区别有什么呢？当正面的数据集很少，负面数据集很多的时候，异常检测会比较合适；当正面和负面数据都很多的时候，监督学习会比较合适。\n当正面数据很少的时候，虽然二者都可以使用，但是二者看待数据集的方式截然不同。对于异常检测，负面数据是正常的情况，也是多数情况。那对于一个新的数据是否正常的判断的依据是他和负面数据的不同的程度，**他是找不同**，他不指望通过几个异常类型就能囊括所有的异常。比如诈骗，类型可以说层出不穷，诈骗er们天天在研究新的诈骗类型，如果指望查看信息诈骗的特征与以往就诈骗特征的相似程度，那诈骗er们就没饭吃了，他们在时时刻刻创新啊！而对于监督学习，他做的是通过大量的相应标签的数据，将它归为正面数据。对于新的数据，他看的是新的数据与以往已有标签的数据的相同的程度，**他是找相同**，像垃圾邮件，手段就那么些，改改数字，发发钓鱼网站，所以找相同更容易奏效。\n<img src=\"/img/24051403.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24051404.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 特征选择\n异常检测中，提供的特征需要是满足高斯分布的。在使用特征之前，可以绘制一下不同特征的曲线，如果不满足高斯分布，那么可以将特征做一些变形使他满足高斯分布。然后用变形过后的特征训练模型，交叉验证和测试。\n<img src=\"/img/24051500.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n有时，异常的数据经过p(x)后表现的和正常的数据差不多大，此时该模型对于异常的判断就不太理想，此时可以分析一下异常的数据，看看能否通过添加新的特征，该特征对于异常的数据和对于正常的数据有比较大的差异，这样就可以使该模型得到更准确的结果。\n<img src=\"/img/24051501.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n比如检测数据中心的电脑是否有异常情况，通常会用内存使用率、每秒访问磁盘次数、CPU负载、网络流量等指标来检测一个计算机是否异常。在处理不同业务时，对不同部件的使用情况也许会出现多种合理的不同情况，比如CPU负载高或低都正常，网络流量高或低也都正常，但是若在你的业务下，CPU高负载而网络流量低负载或者CPU低负载而网络流量高负载的情况不太会出现，那么此时可以新建一个特征为CPU负载和网络流量的比值，这个新特征**既不会影响正常的数据，又能检测出异常数据**。\n<img src=\"/img/24051502.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n# 推荐系统\n推荐系统就是我想的那样，只是需要了解下图中的几个术语，其中问号表示该用户没有对该电影打分：\n<img src=\"/img/24051700.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 使用基本线性回归\n假设我们已经有了电影的特征，我们可以使用如下方式来预测用户对没看过的电影的打分，其中n表示特征的数量，w和b的上标表示是第几个用户的参数。这看起来很像线性回归：\n<img src=\"/img/24051701.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n代价函数和线性回归模型也很类似，其中的正则化项，可以将分母的m去掉，m代表了用户评过分的电影的数量，是个常数，去掉它不影响参数w的取值：\n<img src=\"/img/24051702.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n上述是在训练单个用户的参数，可以将代价函数稍作修改，将所有用户的参数一起训练：\n<img src=\"/img/24051703.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 协同过滤算法collaborative filter\n如果我们事先知道电影的特征x，则可以直接使用线性回归模型。如果我们事先不知道电影的特征，就无法使用线性回归。对于这种情况，**假设**我们现在已经有了每个用户的线性回归模型，即不同用户的**w和b**已知，我们又同时**拥有不同用户**对同一部电影的打分，而同一部电影的两个特征必然是一样的，因此我们可以根据不同用户的参数以及他们的打分情况来推测一下这部电影的不同特征的值：\n<img src=\"/img/24051704.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n具体的实现其实就是将代价函数作为特征x的函数，同样的可以一个个训练x，也可以一次性训练所有电影的特征x：\n<img src=\"/img/24051705.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n到此为止，我们分别在已知特征x的情况下训练了参数w和b，和已知参数w和b的情况下训练了电影特征x.**协同过滤算法**就是将二者结合起来，这样就得到了关于w、b、x的代价函数。注意到对于参数w的求和和对于特征x的求和虽然看起来有差别，但是实际上计算的项数都是一样的，他们的数量都是所有被用户打过分的电影的数量，只是解释起来的方式不太相同而已。\n<img src=\"/img/24051706.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n同样用梯度下降算法确定参数：\n$$\\begin{align*}\n&\\text{repeat until convergence:} \\; \\lbrace \\\\\n&  \\; \\; \\;w_i^{(j)} = w_i^{(j)} -  \\alpha \\frac{\\partial J(w,b,x)}{\\partial w_j}  \\; & \\\\ \n&  \\; \\; \\;  \\; \\;b^{(j)} = b^{(j)} -  \\alpha \\frac{\\partial J(w,b,x)}{\\partial b^{(j)}} \\\\\n&  \\; \\; \\;  \\; \\;x_k^{(i)} = x_k^{(i)} -  \\alpha \\frac{\\partial J(w,b,x)}{\\partial x_k^{(i)}} \\\\\n&\\rbrace\n\\end{align*}$$\n\n## 二进制标签\n相对于给电影打分，更多的推荐算法是二进制标签的，像喜欢或是不喜欢这样的。于是预测任务就从之前的预测分数变成了预测用户是否喜欢，进一步，这其实就是从线性回归变成了逻辑回归，代价函数也和逻辑回归的代价函数很类似：\n<img src=\"/img/24051707.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24051708.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 均值归一化mean normalization\n之前的例子中，所有用户都已经评价过了一个或几个电影，那么对于新注册的用户，他没有对任何电影进行评分，因此对他执行协同过滤算法的话，会导致他对所有的电影的评分都是0.也就是无法完成给新用户推荐电影，很明显实际上不应该这样。\n<img src=\"/img/24051800.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n**均值归一化**可以解决这个问题。现在将用户对不同电影的打分组成一个矩阵A，A的每一行代表了不同用户对同一电影的打分。向量$\\mu$的每一项表示表示用户对一个电影打分的平均值。用矩阵A减去$\\mu$得到矩阵B，然后用矩阵B来学习新的参数w、b、x。学到新模型后，为了使预测保持在合理的范围之内，如评分非负，最终的预测结果需要在模型的预测基础之上加上对应电影的平均分数$\\mu$.比如预测新用户对于第一个电影的评分，学习到的参数w、b为0，于是模型的预测打分是0,然后加上$\\mu_1=2.5$,于是得到了最终的结果是2.5.这个结果比之前的0看起来更有说服力一些，他其实**反映了其他用户对该电影的平均打分情况**。\n观察矩阵B的每一行，发现他们的均值为0，也就是上述算法其实将矩阵A的每一行都均值化为0.当有新用户注册时，想预测该用户对不同电影的评分用这种方法是不错的。但是还有另外一种情况，就是上映了一个新的电影，没有或者几乎没有用户对他进行过评分，这个时候想要预估用户对该电影的评分，可以将矩阵A的每一列均值化为0.\n<img src=\"/img/24051801.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## tensorflow实现协同过滤\n两图胜千言\n<img src=\"/img/24051802.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24051803.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 寻找相关特征\n下面的方法可以找到和目标比较接近的一些东西，其实和代价函数很类似，只不过目标y换了一下而已：\n<img src=\"/img/24051804.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n协同过滤算法的局限性，图片中的第二个方面side information没看明白，他的意思是获取这些信息比较难吗？\n<img src=\"/img/24051805.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 内容过滤算法content-based filtering\n内容过滤算法是根据用户特征和电影特征来推荐影片。用户和影片的特征可能是不同维度的，像用户有10个特征二影片有15个特征这样，所以向量$x_u^{(j)}$和$x_m^{(i)}$的大小是可以不一样的。\n<img src=\"/img/24052800.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n在协同过滤算法中，使用$w^{(j)}·x^{(i)}+b^{(j)}$来预测用户对电影的评分。在内容过滤算法中，需要使用$v_u^{(j)}$和$v_m^{(i)}$，他们分别是通过$w^{(j)}$和$x^{(i)}$计算而来，代表了用户j和电影i的特征的向量。而$b^{(j)}$项可以舍弃，这不会有什么影响。然后两个v向量的点积用来估计用户j对电影i的评分。虽然v是由x计算而来，而x的维度可以不同，但是v的维度必须相同。\n<img src=\"/img/24052801.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***计算$v_u$and$v_m$***\n可以分别使用两个神经网络来计算$v_u$and$v_m$,然后用$v_u·v_m$来预测用户对电影的评分。或者若想要得到一个二元分类的结果，将$v_u·v_m$作为参数传递给g()即可。注意到用户网络和电影网络输入层中的神经元数量不同，这代表了用户和电影的特征可以不同，但是他们的输出层有相同的神经元数量，这代表了他们最后的u的维度是相同的，便可以进行点积运算。\n<img src=\"/img/24052802.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n也可以同时构建两个神经网络，然后为整个神经网络定义一个代价函数，这样可以一次性计算所有的参数。若要想找与电影i相似的电影k，只需要计算$||v_m^k - v_m^i ||^2$即可。\n<img src=\"/img/24052803.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 从大型目录中推荐\n大型目录指的代推荐的东西有很多，比如当一个用户访问不同网站时，该网站可能会推荐电影，推荐广告，推荐商品，推荐歌曲等等。这些代被推荐的东西有很多，如电影网站中有上万个电影、购物网站有上百万个商品等，如果每个用户来到这个网站，该网站就用上边提到的神经网络计算一次，那这个做法不太好，响应慢成本还很高。\n为了解决这个问题，可以使用**检索（Retrieval）和排序（Ranking）**这两个方法。检索要做的有两个事情：首先选择出一些合理的stuff作为候选项；然后将这些候选项进一步筛选，比如重复的项扔掉，买过的项也扔掉，得到一个列表。排序要做的就是将检索好的列表用模型进行排序，比如将检索好的电影根据模型最后的预测评分由高至低排序。由于排序的列表是经过检索的，因此不会像最开始那样把所有的stuff丢给模型计算，这就大大降低了运算量。想想给你推荐的电影或者商品，100个算不少了吧，相比该网站所有的stuff上百万个，极大的降低了运算量。而且，*网站已有的stuff的对应$v_m$是可以提前计算的*，所以当有用户访问网站时，只需要计算该用户对应的$v_u$即可，这又进一步的降低了运算量。\n<img src=\"/img/24052804.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24052805.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n可以看出，检索其实就是做了一次广度的覆盖，而排序的目的是为了更精准的推送。那现在要思考的问题是，在第一步检索的过程中，筛选出多少stuff比较合适。容易想到，检索的stuff越多，那么推荐的效果就会越好，但是相应的速度也会降低。因此需要在性能和速度之间做出权衡。一个有效的方法是进行*离线实验*，看一下\n<img src=\"/img/24052806.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## Tensorflow实现内容过滤算法\n见jupyterLab\n\n## Principal Component Analysis\n***将数据可视化***\n一个汽车又长和宽两个特征，但是汽车的宽度变化范围其实差别不大，而汽车的长度变化范围较大，此时为了见数据可视化，可以忽略变化幅度小的特征像这里的汽车宽度。\n<img src=\"/img/24053100.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n再比如若两个特征为汽车的长和高，大小不同的车的这两个参数会有较大的差异，就是说这两个特征的变化幅度都挺大的，无法直接忽略任何一个，此时可以创建一个新的特征来描述这两个特征。比如新建一个z轴表示车的尺寸，这里的z轴不是新建了一个维度，还是在二维空间内新建的，他和x、y在同一平面。车的尺寸越大，相应的长度和高度就越高，因此可以用z这一个特征来粗略的估计x和y.\n<img src=\"/img/24053101.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n下图中的数据有3个特征，我们可以在三维坐标系中描绘出这些数据。但是若将三个特征减少到两个特征，我们就可以在二位坐标系中描绘出这些数据，会更方便一些对吧。\n<img src=\"/img/24053102.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n如果要描述一个国家，那一个国家的特征可太多了，如GDP，人口数量，占地面积，男女比例等等。假设一个国家有50个特征，我们一定是无法将有50个特征的国家可视化的。PCA算法可以将这大量特征减少到2、3个，这样我们就可以在坐标系中描绘出不同国家了。如经过PCA算法后，将这50个特征减少到了2个，这两个特征大致相当于GDP和人均GDP，这样我们就可以将一个国家在坐标系中可视化。\n<img src=\"/img/24053103.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24053104.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***PCA算法***\n在使用PCA算法之前，需要先将特征进行放缩，让他们的变化范围大致相同。然后将放缩过后的特征归一化为0均值，就是把每个特征减去平均值。\n<img src=\"/img/24060200.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n接下来选择一个新的坐标轴来代替原来的两个坐标轴，比如这里选择坐标轴z，其实和之前的x1坐标轴一样。选择z作为新的坐标轴后，将原来的五个数据映射到z轴上，我们可以知道他们的变化幅度很大，这也是一种比较有效的信息。\n<img src=\"/img/24060201.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n如果将z轴选成这样，将数据映射到z轴后，他们的变化幅度不如上一个z轴那样明显，所以这个新的坐标轴选的就不如上一个。\n<img src=\"/img/24060202.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n如果将z轴选为下面这样，那此时数据在z轴上的映射会得到最大的变化范围，此时的z轴就被称为*主成分*：当将数据映射到其上时，会得到最大的方差。\n<img src=\"/img/24060203.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n有了主成分之后，想要将二维的数据映射到主成分上，要做的就是将原数据向量和与主成分方向一致的单位向量做点积，就会得到其在主成分上的投影。想这里原数据向量是(2,3),假设找到的主成分是与x1夹角pi/4,从原点出发的指向第一象限的射线，那这个单位向量的坐标大概是(0.71,0.71),然后二者做内积，于是便计算出了x在主成分上的投影是3.55.\n<img src=\"/img/24060204.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n找到了主成分之后，如果还想要更多的主成分，那么只需要让这些主成分互相垂直(perpendicular).如要找第二个主成分，只需要和第一个主成分垂直即可，此时还在二维平面。若还想再找一个主成分，就需要与前两个主成分都垂直，也就延展到了三维空间。\n<img src=\"/img/24060205.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n只有两个特征的时候，PCA看起来和线性回归很类似，但是大多数时候数据集的特征很多，这个时候PCA和线性回归看起来就有很大不同了。实际上这两者本身就是两个事情，线性回归是监督学习中的事情，他有y标签，他想找的是一条和数据集拟合程度好的曲线，目的是尽量靠近y.而PCA没有y标签，他对待所有的特征都是平等的，他想找的是一条能尽量保留特征差异的曲线，这样将数据可视化的时候能看得更清晰一些。\n<img src=\"/img/24060206.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n特别的，若数据集是这样，即使仅有两个特征也能看出来二者的不同。\n<img src=\"/img/24060207.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n反过来，若给出映射后的数据，可以通过*PCA重建*来近似还原出原来的数据。如给定的z=3.55,与单位向量相乘后得到了(2.52,2.52),这和原始数据(2,3)相差不大。\n<img src=\"/img/24060208.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***PCA实现***\n可以使用scikit-learn包来实现PCA算法。使用前若数据不同特征的变化范围太大了，需要预处理，将不同特征放缩到一个合适的范围，这有助于找到合适的主成分。然后就可以使用sl包来完成其他事情。其中的fit函数会自动完成特征的归一化为均值0.\n<img src=\"/img/24060209.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n参数n_components=1表示只想要1个主成分；explained_variance_ratio_输出0.992表示经过PCA后的主成分，也就是新的坐标轴，保留了原始数据99.2%的变化率，看起来很不错。\n<img src=\"/img/24060210.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n若将二维的数据映射到二维的数据，就是说选两个主成分，那会出现这样的结果。其中explained_variance_ratio_有两个输出，0.992和0.008,分别代表了在不同的主成分上保留的原始数据的差距的比例，二者之和为1,就是说能完全解释原数据。\n<img src=\"/img/24060211.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n关于PCA的一些早期应用，现在的主要应用还是将数据可视化：\n<img src=\"/img/24060212.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n\n# 强化学习\n假设现在有一个无人机，将无人机的位置，方向和速度等信息称为状态。强化学习做的就是对于给定的状态s，找到一个函数将其映射为a，a是怎么操作摇杆让他保持想要的状态，像让它待在固定位置不同这样。虽然我们也可以使用监督学习来做这个事情，这不但需要对于无人机状态x的大量观测，同时需要比较专业的人来说明对于一个x应该怎么操作摇杆，也就是y.但这是很难做到的，因为这种操作无人机的顺序和力度很难精确说明，比如向左倾斜多一点还是少一点，这个一点儿怎么衡量；又或者是给无人机多少动力，这些都决定了x如何映射到y，这无疑是很困难的。正因如此，很多对于机器人的控制的应用中，监督学习的效果并不理想，而要使用强化学习。\n强化学习之所以强大的一个原因是你只需要说明做什么，而不需要说明怎么做。这就需要奖励函数，如果飞机飞得好，那可以将某个值+1，飞得不好则—1，如果飞的坠毁了，-10000这样。\n <img src=\"/img/24060300.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***火星探测器模拟***\n一个简化的火星探测的例子：探测器的初始状态为4,现在状态1和状态6都是值得探测的地方，但是状态1更有价值一些，因此可以将状态1的奖励设置的更高一些。探测器每次向左或向右移动，每次移动到新的状态都会得到奖励。如过探测器一直向左走，走到3的时候，得到0奖励，走到2的时候，得到0奖励，走到1的时候，得到100奖励；同样它也可以一直往右走；又或者左走走右走走。假设他走到1或6的时候，他就不会继续做其他事情，那状态1和状态6就是*终端态*。当他每一次行动的时候，都有4个参数：(状态，动作，奖励，下一个状态)，这几个参数是强化学的的关键信息。\n<img src=\"/img/24060301.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 回报\n通过之前的例子可以知道，不同的动作序列可能得到的奖励是不同的，通过强化学习的回报可以捕获不同序列的奖励。回报捕捉到的通常是能快速得到的奖励。像你身边现在就有10块钱，但是在山的那边有20块钱，回报会捕捉身边的这10块钱。计算回报公示如下图所示，第一项是初始状态的奖励，然后依次相加直到终端态。其中$\\gamma$是折扣因子，他是小于1的，通常取很接近1 的值如0.99等。正是折扣因子的存在导致了回报会更倾向于离得近的奖励。\n<img src=\"/img/24060302.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n假设现在一直向左走，从不同状态出发得到的回报用红色的字在上边注明了。需要注意的是如果从状态6开始，那么他的起始状态就是终端态，因此计算回报时只有一项，就是该终端态的奖励，也就是40.类似的，一直向右走的话，各状态作为起点的回报如图所示。当然如果在不同的初始状态选择不同的动作，那就可以得到第三个表格中的回报。\n<img src=\"/img/24060303.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***决策学习算法的策略***\n决策学习的目标是构建一个可以将*状态s*映射为*行动a*的Policy函数$\\pi(s)$,该函数会告诉我们为了得到最大的回报，每一步应该怎么做。如对于之前的例子中的最后一行，policy函数作为不同状态的函数会得到相应的行动。\n<img src=\"/img/24060304.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n看一下强化学习中的不同参数在不同应用中可以对应什么。\n<img src=\"/img/24060305.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n这种强化学习应用程序的形式可以称为*马尔科夫决策过程Markov Decision Precess(MDP)*.从之前的例子中可以得知，MDP说明了未来只取决于当前的状态，而不取决于是怎么到当前状态的。MDP也可以用下面这种图来解释：Agent是我们要操作的东西，经过Policy函数后得到了动作a，做了a之后会发生一些变化，比如我们的位置。基于这些变化，我们可以看到当前的状态以及奖励。\n<img src=\"/img/24060306.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## State-action value 函数定义\n状态动作做价值函数也可以叫Q函数，它以当前的状态s和当前要采取的行动a作为参数。当在状态s做了a动作之后，到达了一个新的状态，在这个新的状态下有最大的回报的路径即最优策略。Q函数返回的是从最初的状态s到新的状态再走最优策略的总回报。如对于状态2，若首先向右走到达状态3，根据之前计算过的最优策略，从状态3开始的最优解是往左走，于是便一路向左，这条路径的回报是12.5;若往左走，则直接到达了终端状态，回报是50.这样就可以计算出所有状态的Q值。\n>这里感觉比较奇怪，因为策略函数已经计算出了最大回报的路径是什么，为什么还要这个函数。比如在状态2的时候，明明知道了最优解是往左走，为什么还要计算一下往右一步，然后再走最优解。\n\n<img src=\"/img/24060400.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n对比Q函数和策略函数，发现每个状态的策略函数的回报就是Q函数取不同动作回报的最大值，这也给策略函数的计算提供了一种方法。Q函数也叫Q*或者最优Q函数或状态动作价值函数。\n<img src=\"/img/24060401.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 贝尔曼方程\n贝尔曼方程可以用来得到Q函数。刚查了一下，贝尔曼方程又较动态规划方程，OK,fine.挺希望有一天术语能统一一点，机器学习好像挺多概念就是数学概念换个叫法。\n<img src=\"/img/24060402.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n在看几个，注意的是若起始状态s是终端态，那么他不会采取行动，于是Q函数就只剩下第一项了。\n<img src=\"/img/24060403.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n回报可以分为两部分，一部分是马上能得到的回报，另一部分就是走到下一个状态后能得到的最佳回报，这也是贝尔曼方程要说明的主要事情。\n<img src=\"/img/24060404.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24060405.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 随机环境random(stochastic) environment\n实际工作中，机器人可能不会完全按照我们发出的指令执行。比如我们让他往右，但是他轮胎打滑了没有往右等，这就是随机环境。比如火星探测器的例子中，若初始状态在4号，现在你让他往左走，但是由于各种原因，比如风太大了，轮胎打滑了等等，最终导致了他有90%的概率往左走到3但是还有10%的概率往右走到5。考虑到这些随机的情况，就引出了*期望回报*。期望回报就是将一个设序列重复执行多次以计算他得到回报的平均值。所以，强化学习的目标到现在就变成了找到一个策略函数Policy()以得到最大的期望回报。同样，贝尔曼方程也要改进一下，加上期望。\n<img src=\"/img/24060406.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24060407.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***连续状态空间***\n火星他测器的例子中，探测器只在一些离散的位置，但实际应用中状态往往是连续的，并且一个物体的状态往往是多维的，比如x坐标，y坐标，x方向速度，y方向速度等。\n<img src=\"/img/24060500.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 登月器\n<img src=\"/img/24060501.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24060502.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n强化学习的主要任务是训练一个神经网络来逼近Q函数。登月器中，用于训练神经网络的输入可以由两部分组成，一个是登月器的状态，另一个是可以采取的行动，二者组合成一个向量作为输入。其中动作a有4个可能，什么都不做、向左点火、向右点火和向下点火来控制登月器的位置，以确保他能落在目标位置。将特征a经过one-hot编码得到4个二进制编码，在拼接上状态作为整体的输入向量。如当登月器在一个状态后，经过神经网络的计算，发现Q(s,main)最高，mian表示向下点火，那么登月器便会向下点火。\n<img src=\"/img/24060503.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n那现在问题就是怎么样训练这个神经网络。我们可以通过贝尔曼方程得到一些训练集x和y，然后用监督学习来训练神经网络。为了得到训练集，我们可以让登月器随即采取行动，这样可以得到很多不同的元组(s,a,R(s),s').根据s和a就可以得到输入x,根据R(s)和s'就可以得到Q(s,a)也就是y,于是就有了第一个数据集。其中贝尔曼方程的第一项就是R(s),而第二项需要的参数s'需要利用下一个元组的信息。在最初的时候，我们并不知道Q函数是什么，但是可以在最初的时候假设一个Q函数。\n<img src=\"/img/24060504.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n完整的训练过程，这个算法叫做DQ(Deep Q-Network)N算法：\n<img src=\"/img/24060505.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 算法改进\n***改进神经网络架构***\n之前的架构中，将动作a作为参数传给神经网络，于是对于同一个位置，神经网路一次只能计算对于该位置的一个动作。现在对输输入和输出做出改变，动作不作为输入，而在输出层中设置4个神经元，分别代表了不同动作的Q值，于是这样就可以一次计算出同一状态的4个不同动作的Q值。\n<img src=\"/img/24060506.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***$\\varepsilon$贪婪策略***\n当神经网络正在学习的时候，以前的方式中，他在每个状态总是采取能获得最到回报的动作。但是由于最初的Q函数是随机的，他有可能随机到一种情况，导致某个动作永远会使Q函数很低。比如Q(s,main)总是比较低，main表示向下开火，于是最终学到的Q函数就永远不会向下开火。为了避免这种情况，我们可以不必每次都选择能使回报最大的动作，当然应该尽量选择这个，只不过应该给他个权重像0.95，剩下的0.05权重让模型选择一个随机的动作，这个选择随机动作的做法被称为“探索”。这个策略就是$\\varepsilon$-greedy policy，其中$\\varepsilon$=0.05.\n$\\varepsilon$-greedy policy常见的做法是以一个比较高的$\\varepsilon$开始，逐步降低其值。比如登月器中，甚至可以将$\\varepsilon$初始化为1，然后逐渐减小到0.01.\n<img src=\"/img/24060600.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***小批量和软更新***\n小批量不但能提高强化学习的性能，也能加速监督学习，像提高一些神经网络的训练或者线性回归模型的训练速度。\n在监督学习中，我们使用梯度下降算法来训练参数的时候，每次梯度下降都会遍历一边所有数据集，当数据集很大的时候，这会导致梯度下降的很慢。小批量做的是取大数据集的一个小子集，每次用这些小子集更新参数而不是遍历整个数据集，这样速度就会快不少。其中每次迭代使用的子集可以是不同的，可以将整个数据集划分为n个不同的子集，或者有一些交集的子集，然后用这些子集分别进行每一次迭代。\n<img src=\"/img/24060601.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n普通的梯度下降中，每次迭代都会使代价函数减少。而小批量梯度下降时，由于每次使用的数据集只是一个局部的缘故，他可能在单次下降过程中效果不太好甚至有时会增加代价函数，但是该算法的总体趋势仍然是向着全局最优的地方。所以在有大量数据集的时候，往往更多地使用小批量梯度下降或者Adam算法而不是最普通的梯度下降，因为他们的速度更快且最终的效果也不错。同样的在登月器的例子中，让登月器先随机获取10000个数据样本以后，可以不全部使用这些样本，而是一次使用1000个样本这样。\n<img src=\"/img/24060602.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n在登月器的算法中，最后我们将Q设置为Qnew,这里有可能发生的一个情况是新训练的Qnew可能性能还不如最开始的Q函数，*软更新*可以防止这样的事情发生。对于$Set Q = Q_{new}$,其实就是将参数$W_{new}、B_{new}$分别赋给了旧的$W、B$.其实我们可以使用$W = 0.01W_{new} + 0.99W、B = 0.01B_{new} + 0.99B$这样的更新方式。0.01和0.99是*超参数*，二者的和为1，他们控制了参数像新的参数靠拢的程度。如当只给新的参数0.01权重而给旧的参数0.99权重的时候，说明参数只是做了小幅度的更新，他还是更靠近旧的参数。这种做法可以让强化学习算法收敛的更可靠。\n\n\n# 一些问题\n关于K-means算法的第二步，选择样本的平均值作为新的质点的位置，那么此时每个样本与质点的差的平方的和平均值最小的数学证明。（当质点这么取值的时候实际上这个式子就变成方差了对吧）\n\n## 协同过滤算法使新用户的评分是0\n使用协同过滤算法训练模型：\n$$\n\\begin{matrix}\n \\textbf{min}\\\\\n w^{(1)},...,w^{(n_u)}\\\\\n b^{(1)},...,b^{(n_u)}\\\\\n x^{(1)},...,x^{(n_m)}\\\\\n\\end{matrix}\n \\qquad \\frac{1}{2} \\sum_{(i,j):r(j,j)=1}(w^{(j)}·x^{(i)}+b^{(j)}-y^{(i,j)})^2 + \\frac{\\lambda}{2} \\sum_{j=1}^{n_u}\\sum_{k=1}^{n}(w_k^{(j)})^2 + \\frac{\\lambda}{2} \\sum_{i=1}^{n_m}\\sum_{k=1}^{n}(x_k^{(i)})^2\n$$\n我们的目的是使代价函数尽可能小。对于新用户，他为对任何电影做出评价，因此代价函数的第一项是0,在此基础上，若想使整体式子变小，明显w的取值是0.类似的，若还对b做了正则化，则b也为0,所以新用户在该模型上对任何影片的预测分数都为0,不便于推荐。\n刚写上边这几行的时候又想到在监督学习中，这几项也都是平放项，要使该式子最小岂不是也应该让w为0吗？稍微一想就清楚了，在一般的监督学习中，w的值会影响到无正则化的代价函数，也就是式子的第一项，因此两者合作才能得到最小的代价函数。而协同过滤算法中的新用户无第一项，决定整个式子的只有正则化项，因此w才为0.\n\n## 协同过滤算法不适应密集层\nvideop122 min10左右，Andrew说协同过滤算法不能适应密集层那一段，没明白。他说了需要自己实现代价函数，之前不也是自己实现代价函数吗。可能是我记错了，以后看一下tensorflow密集层的代价函数相关部分是怎么做的，和协同过滤算法有什么区别。\n\n## 协同过滤算法和内容过滤算法的区别\non Andrew's slide:\nCollaborative filtering:\n Recommend items to you based on rating of users w·o gave similar rating as you.\nContent-based filtering:\n Recommeng items to you based on features of users and item to find good match.\n\n查找一些资料，发现协同过滤算法分为用户协同过滤和物品协同过滤。Andrew说的应该是用户协同过滤。但是实现方式中是一起训练w、b和x,没看出来找相似用户这个过程。\n\n## Q函数\nQ函数的作用没太清楚，他能计算出策略函数，但他采取行动走的需要时最优解，这最优解如果不是通过策略函数找到的，那是怎么找到的。\n\n\n","source":"_posts/ML-Andrew-Ng-2.md","raw":"---\ntitle: unsupervised learning\ntags:\n  - AI\n  - machine learning\ncategories: Machine Learning\ndescription: >-\n  something about unsupervised learning, recommender systems and reinforcement\n  learning\nabbrlink: 9915f4c8\ndate: 2024-01-29 21:26:53\n\n---\n\n同一系列的[监督学习](https://b-white07.github.io/posts/acf03113.html)和[神经网络](https://b-white07.github.io/posts/1ca572.html)相关笔记点击查看\n\n\n# 无监督学习\n监督学习和无监督学习的对比在[监督学习](https://b-white07.github.io/posts/acf03113.html)开篇处已经介绍，此处不再赘述。\n## 聚类算法Clustering\n聚类就是对于输入特征x,算法会根据一些特征自动将其归为几类。与监督学习的数据集不同，这些数据集是没有y标签的。\n<img src=\"/img/24050800.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## K-means聚类算法\n假设现在你需要算法寻找一个数据集中的两个集群，K-means算法做的第一件事是随机猜测这两个集群的中心在哪里，集群的中心称为**集群质心**，集群质心与输入特征x具有**相同的维度**。然后算法会遍历数据集中的每个数据，看一下他们与两个集群质心的差距，离哪个质心更近，就讲该数据归为哪一类。下图中❌和蓝叉就是算法最开始随机猜的两个值。\n<img src=\"/img/24050801.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n然后算法会计算红色集群的平均值，然后将最初预测的红色质心移动到红色集群的平均值处。同样的方式处理蓝色质心。\n然后在新的质心基础上，算法会重复第一步，遍历数据集中的每个节点，再次计算他们对于质心的位置，如果发现原来被划分为红色集群的数据现在离蓝色更近，那么将该数据划分到蓝色集群。\n<img src=\"/img/24050802.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24050803.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n然后再次计算新的集群的平均值，然后移动质心。重复执行这两个步骤，最后会导致质心的位置不再有变化，此时K-means算法就收敛了。\n<img src=\"/img/24050804.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***实现***\n计算数据和质心的靠近程度其实就是计算两者的距离$||x^i - \\mu _k||$，也称为**L2范数**。在计算一个数据$x_i$与每一个质心$\\mu_k$的距离以后，选择使距离最小的k,将其设置为$c^i$的值，$c^i$记录了一个索引，该索引记录了当前数据与哪个质心离得最近。当计算距离的时候，其实计算其平方会方便一些，而且效果是一样的。然后计算不同集群平均值即可得到不同集群新的质心。\n<img src=\"/img/24050805.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n有一个极端的情况：在分配集群的时候，没有任何一个数据属于一个质心，此时可以删掉这个质心，这也就会减少一个集群。如果不希望集群的数量减少，那么可以试一下重新随机一个质心位置，看看能不能将数据分配给他。\n对于没有明显被划分为不同集群的数据集，K-means算法也可以较好的工作。比如衣服大小与人身高体重的关系，往往是一组连续的没有明显分组的数据，在这个数据集上使用K-means算法，依旧会得到比如k=3的3个集群，这三个集群的质心可以作为小、中、大号的代表。\n<img src=\"/img/24050806.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***代价函数***\nK-means算法的损失函数（失真函数distortion funciton）定义如下，他其实就是在找合适的质点，使得所有数据与其质点距离平方和的平均值最小。\n<img src=\"/img/24050807.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n以之前的例子为例，此时的状态，该模型的代价就是每一个蓝色的数据与蓝色叉距离的平方与每一个红色数据与红叉的距离的平方的和的平均值。\n<img src=\"/img/24050808.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n可以看到，该代价函数是$C^i$和$\\mu_k$的函数，每个$C^i$与$x^i$是一一对应的，因为它代表了$x^i$是属于哪个质心的；而$\\mu_k$本身就是质心的位置，所以这个代价函数会不断调整数据属于哪个集群以及不同质点的位置。\n\n进一步来看一下K-means算法的每一步：\n第一步是在将数据分配给不同的质心，此时质心是保持不动的。观察代价函数，若想让代价函数变小，很明显应该减少二者之间的距离，而K-means算法也正是这么做的，他将数据分配给了离自己近的质心。\n第二步是数据已经分配好了，调整质心的位置。K-means算法做的是将新的质心位置取在集群的平均值的位置，事实上，这种做法会使所有样本的$||x^i-\\mu_c^i||$和的平均值最小，也就是减少了代价函数。\n也就是说K-means算法每一步都在降低他的代价函数，所以万一出现了代价函数升高的情况，意味着你的程序有Bug了。\n<img src=\"/img/24050809.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***质心初值的随机选择***\n之前说过K-means算法的第一步是随机选择一个质心，常见的做法是如果你需要k个质心，那么可以从数据集中随机选择k个数据作为初始的质心。\n对于质心不同的初值，K-means算法在收敛后可能得到不同的聚类，如下图所示不同的初值得到了3个聚类。\n<img src=\"/img/24050900.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n因此为了是算法得到一个不错的效果，通常需要多次选择随机的初值，然后分别计算这些模型的代价函数，然后选择代价函数最低的模型。\n<img src=\"/img/24050901.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***质心（聚类）数量k的选择***\n有一个选择k的方法是叫肘算法（Elbow method），不得不说名字太难听了，还不如以发明者的名字命名。该方法将代价函数J()作为K的函数，观察J()的变化。如果发现了一点处函数的变化幅度发生突变，那么就选择该点处的K值。如下图中，K=3之前J()都在快速下降，但是k=3之后J()下降速度明显变缓，那么此时就可以选择K=3.但是J()往往也会想右图那样，找不到这样的K值。此时也不能找使J()最小的K值，因为随着K的增大，J()总是在减小。所以这个方法感觉不太行。\n<img src=\"/img/24050902.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n另外一种方法是权衡一下不同k值的效果，看看哪个更符合当前需求。比如在衣服尺码的数据集中，可以将k取为3，这样会得到三个聚类，这三个聚类可以分别代表小号，中号和大号。当然也可以让k=5，这样就得到了5个聚类，那么就可以分别代表超小、小、中、大、超大号。将衣服分为更多的类别，会增加制作成本，但是衣服会更贴合消费者的体型。所以在贴合消费者体型和制作成本之间，要做出一个权衡，以选择合适的k。\n<img src=\"/img/24050903.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n\n\n## 异常检测Anomaly detection\n异常检测就是根据已有的数据集，判断新的数据与已有数据的相似性，以此来检测新的数据是否有异常。\n<img src=\"/img/24051200.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n异常检测最常见的方法是**密度估计（density estimation）**。该算法首先会建立一个关于特征x的概率模型$p(x)$，该模型的作用是检测当前特征的不同取值的概率。如下图最小的椭圆中的取值概率最高，向外慢慢降低。然后用该模型预测新数据，得到新数据的概率$P(x_{test})$,如果得到的概率小于某个阈值，那么就认为该数据有异常。\n<img src=\"/img/24051201.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n异常检测的应用很广泛，比如制造业中像检测引擎、欺诈检测、黑客攻击等。\n<img src=\"/img/24051202.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***高斯正态分布***\n为了应用异常检测，需要了解高斯正态分布。首先了解如何利用高斯分布实现**单特征**的异常检测。\n高斯分布中，$\\mu$是期望，也就是这组数据的平均数；$\\sigma$是标准差，$\\sigma^2$是方差，描述了这组数据的分散程度。\n<img src=\"/img/24051300.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n高斯曲线的方程为$p(x)=\\frac{1}{\\sqrt {2\\pi} \\sigma}e^{\\frac{-(x-\\mu)^2}{2 \\sigma^2}}$,其曲线与x轴围成的面积恒为1，因此对于不同的$\\mu、\\sigma$该图像有如下变化：\n<img src=\"/img/24051301.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n根据数据集可以计算出$\\mu、\\sigma$，然后就得到了相应的高斯分布曲线。在此基础上，对于一个新的输入x，可以计算他的p(x),如果概率较高，那就认为这个数据没什么异常；相反如果这个值较低，那么就认为这个数据可能出现了异常。这了的数据只能是单特征，即x是个数而不是向量。\n<img src=\"/img/24051302.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n数据集x为向量时，可以依靠每个特征的p(x)来计算总的概率：$p(\\vec{x}) = p(x_1;\\mu_1,\\sigma_1^2)p(x_2;\\mu_2,\\sigma_2^2)···p(x_n;\\mu_n,\\sigma_n^2) = \\prod_{j=1}^{n}p(x_j;\\mu_j,\\sigma_j^2)$\n<img src=\"/img/24051303.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n多特征的异常检测检测算法，n不是数据集的数量而是可能导致异常的特征：\n<img src=\"/img/24051304.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24051305.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 异常检测系统的评估\n**实数评估**可以用于评估异常检测系统。通过实数评估，可以方便的选择特征x或者阈值$\\varepsilon$之类的参数。\n在无监督学习中，数据集是没有标签的，但是我们可以假设数据集有标签。如飞机发动机的数据集中，可以假设正常的发动机对应于y=0,异常的发动机对应于y=1.通常来讲异常发动机的数量是远小于正常发动机的数量的对吧。然后将数据集划分为三个部分，一部分用于训练模型，一部分用于调整参数，一部分用于评估模型。其中用来训练模型的数据集选用正常的发动机的数据，虽说是用正常的发动机训练，但实际上数据集中若参杂了一些异常的发动机也没关系。训练好模型以后，划分出一个交叉验证集和一个测试集，通过交叉验证集的结果来对模型进行微调，最后通过测试集来评估该模型的表现。这其实和之前的评估神经网络步骤很类似。\n<img src=\"/img/24051400.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n由于在异常检测的应用中，异常的例子往往很少，所以有时也可以不用单独划分出一个测试集。当然这样对于该模型的泛化评估就会差一些。\n<img src=\"/img/24051401.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n其实异常检测的数据集，正常的和异常的数量差别很大，如果给他们加上标签，那么这些数据集就是深度学习中，数据集偏斜很大的情况，在这种情况下，可以通过精确率、召回率、F1score这些参数来评估该模型。\n<img src=\"/img/24051402.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 异常检测 VS 监督学习\n上边提到了给无监督学习的数据集假设标签，那其实就变成了监督学习，那二者的区别有什么呢？当正面的数据集很少，负面数据集很多的时候，异常检测会比较合适；当正面和负面数据都很多的时候，监督学习会比较合适。\n当正面数据很少的时候，虽然二者都可以使用，但是二者看待数据集的方式截然不同。对于异常检测，负面数据是正常的情况，也是多数情况。那对于一个新的数据是否正常的判断的依据是他和负面数据的不同的程度，**他是找不同**，他不指望通过几个异常类型就能囊括所有的异常。比如诈骗，类型可以说层出不穷，诈骗er们天天在研究新的诈骗类型，如果指望查看信息诈骗的特征与以往就诈骗特征的相似程度，那诈骗er们就没饭吃了，他们在时时刻刻创新啊！而对于监督学习，他做的是通过大量的相应标签的数据，将它归为正面数据。对于新的数据，他看的是新的数据与以往已有标签的数据的相同的程度，**他是找相同**，像垃圾邮件，手段就那么些，改改数字，发发钓鱼网站，所以找相同更容易奏效。\n<img src=\"/img/24051403.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24051404.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 特征选择\n异常检测中，提供的特征需要是满足高斯分布的。在使用特征之前，可以绘制一下不同特征的曲线，如果不满足高斯分布，那么可以将特征做一些变形使他满足高斯分布。然后用变形过后的特征训练模型，交叉验证和测试。\n<img src=\"/img/24051500.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n有时，异常的数据经过p(x)后表现的和正常的数据差不多大，此时该模型对于异常的判断就不太理想，此时可以分析一下异常的数据，看看能否通过添加新的特征，该特征对于异常的数据和对于正常的数据有比较大的差异，这样就可以使该模型得到更准确的结果。\n<img src=\"/img/24051501.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n比如检测数据中心的电脑是否有异常情况，通常会用内存使用率、每秒访问磁盘次数、CPU负载、网络流量等指标来检测一个计算机是否异常。在处理不同业务时，对不同部件的使用情况也许会出现多种合理的不同情况，比如CPU负载高或低都正常，网络流量高或低也都正常，但是若在你的业务下，CPU高负载而网络流量低负载或者CPU低负载而网络流量高负载的情况不太会出现，那么此时可以新建一个特征为CPU负载和网络流量的比值，这个新特征**既不会影响正常的数据，又能检测出异常数据**。\n<img src=\"/img/24051502.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n# 推荐系统\n推荐系统就是我想的那样，只是需要了解下图中的几个术语，其中问号表示该用户没有对该电影打分：\n<img src=\"/img/24051700.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 使用基本线性回归\n假设我们已经有了电影的特征，我们可以使用如下方式来预测用户对没看过的电影的打分，其中n表示特征的数量，w和b的上标表示是第几个用户的参数。这看起来很像线性回归：\n<img src=\"/img/24051701.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n代价函数和线性回归模型也很类似，其中的正则化项，可以将分母的m去掉，m代表了用户评过分的电影的数量，是个常数，去掉它不影响参数w的取值：\n<img src=\"/img/24051702.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n上述是在训练单个用户的参数，可以将代价函数稍作修改，将所有用户的参数一起训练：\n<img src=\"/img/24051703.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 协同过滤算法collaborative filter\n如果我们事先知道电影的特征x，则可以直接使用线性回归模型。如果我们事先不知道电影的特征，就无法使用线性回归。对于这种情况，**假设**我们现在已经有了每个用户的线性回归模型，即不同用户的**w和b**已知，我们又同时**拥有不同用户**对同一部电影的打分，而同一部电影的两个特征必然是一样的，因此我们可以根据不同用户的参数以及他们的打分情况来推测一下这部电影的不同特征的值：\n<img src=\"/img/24051704.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n具体的实现其实就是将代价函数作为特征x的函数，同样的可以一个个训练x，也可以一次性训练所有电影的特征x：\n<img src=\"/img/24051705.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n到此为止，我们分别在已知特征x的情况下训练了参数w和b，和已知参数w和b的情况下训练了电影特征x.**协同过滤算法**就是将二者结合起来，这样就得到了关于w、b、x的代价函数。注意到对于参数w的求和和对于特征x的求和虽然看起来有差别，但是实际上计算的项数都是一样的，他们的数量都是所有被用户打过分的电影的数量，只是解释起来的方式不太相同而已。\n<img src=\"/img/24051706.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n同样用梯度下降算法确定参数：\n$$\\begin{align*}\n&\\text{repeat until convergence:} \\; \\lbrace \\\\\n&  \\; \\; \\;w_i^{(j)} = w_i^{(j)} -  \\alpha \\frac{\\partial J(w,b,x)}{\\partial w_j}  \\; & \\\\ \n&  \\; \\; \\;  \\; \\;b^{(j)} = b^{(j)} -  \\alpha \\frac{\\partial J(w,b,x)}{\\partial b^{(j)}} \\\\\n&  \\; \\; \\;  \\; \\;x_k^{(i)} = x_k^{(i)} -  \\alpha \\frac{\\partial J(w,b,x)}{\\partial x_k^{(i)}} \\\\\n&\\rbrace\n\\end{align*}$$\n\n## 二进制标签\n相对于给电影打分，更多的推荐算法是二进制标签的，像喜欢或是不喜欢这样的。于是预测任务就从之前的预测分数变成了预测用户是否喜欢，进一步，这其实就是从线性回归变成了逻辑回归，代价函数也和逻辑回归的代价函数很类似：\n<img src=\"/img/24051707.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24051708.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 均值归一化mean normalization\n之前的例子中，所有用户都已经评价过了一个或几个电影，那么对于新注册的用户，他没有对任何电影进行评分，因此对他执行协同过滤算法的话，会导致他对所有的电影的评分都是0.也就是无法完成给新用户推荐电影，很明显实际上不应该这样。\n<img src=\"/img/24051800.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n**均值归一化**可以解决这个问题。现在将用户对不同电影的打分组成一个矩阵A，A的每一行代表了不同用户对同一电影的打分。向量$\\mu$的每一项表示表示用户对一个电影打分的平均值。用矩阵A减去$\\mu$得到矩阵B，然后用矩阵B来学习新的参数w、b、x。学到新模型后，为了使预测保持在合理的范围之内，如评分非负，最终的预测结果需要在模型的预测基础之上加上对应电影的平均分数$\\mu$.比如预测新用户对于第一个电影的评分，学习到的参数w、b为0，于是模型的预测打分是0,然后加上$\\mu_1=2.5$,于是得到了最终的结果是2.5.这个结果比之前的0看起来更有说服力一些，他其实**反映了其他用户对该电影的平均打分情况**。\n观察矩阵B的每一行，发现他们的均值为0，也就是上述算法其实将矩阵A的每一行都均值化为0.当有新用户注册时，想预测该用户对不同电影的评分用这种方法是不错的。但是还有另外一种情况，就是上映了一个新的电影，没有或者几乎没有用户对他进行过评分，这个时候想要预估用户对该电影的评分，可以将矩阵A的每一列均值化为0.\n<img src=\"/img/24051801.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## tensorflow实现协同过滤\n两图胜千言\n<img src=\"/img/24051802.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24051803.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 寻找相关特征\n下面的方法可以找到和目标比较接近的一些东西，其实和代价函数很类似，只不过目标y换了一下而已：\n<img src=\"/img/24051804.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n协同过滤算法的局限性，图片中的第二个方面side information没看明白，他的意思是获取这些信息比较难吗？\n<img src=\"/img/24051805.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 内容过滤算法content-based filtering\n内容过滤算法是根据用户特征和电影特征来推荐影片。用户和影片的特征可能是不同维度的，像用户有10个特征二影片有15个特征这样，所以向量$x_u^{(j)}$和$x_m^{(i)}$的大小是可以不一样的。\n<img src=\"/img/24052800.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n在协同过滤算法中，使用$w^{(j)}·x^{(i)}+b^{(j)}$来预测用户对电影的评分。在内容过滤算法中，需要使用$v_u^{(j)}$和$v_m^{(i)}$，他们分别是通过$w^{(j)}$和$x^{(i)}$计算而来，代表了用户j和电影i的特征的向量。而$b^{(j)}$项可以舍弃，这不会有什么影响。然后两个v向量的点积用来估计用户j对电影i的评分。虽然v是由x计算而来，而x的维度可以不同，但是v的维度必须相同。\n<img src=\"/img/24052801.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***计算$v_u$and$v_m$***\n可以分别使用两个神经网络来计算$v_u$and$v_m$,然后用$v_u·v_m$来预测用户对电影的评分。或者若想要得到一个二元分类的结果，将$v_u·v_m$作为参数传递给g()即可。注意到用户网络和电影网络输入层中的神经元数量不同，这代表了用户和电影的特征可以不同，但是他们的输出层有相同的神经元数量，这代表了他们最后的u的维度是相同的，便可以进行点积运算。\n<img src=\"/img/24052802.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n也可以同时构建两个神经网络，然后为整个神经网络定义一个代价函数，这样可以一次性计算所有的参数。若要想找与电影i相似的电影k，只需要计算$||v_m^k - v_m^i ||^2$即可。\n<img src=\"/img/24052803.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 从大型目录中推荐\n大型目录指的代推荐的东西有很多，比如当一个用户访问不同网站时，该网站可能会推荐电影，推荐广告，推荐商品，推荐歌曲等等。这些代被推荐的东西有很多，如电影网站中有上万个电影、购物网站有上百万个商品等，如果每个用户来到这个网站，该网站就用上边提到的神经网络计算一次，那这个做法不太好，响应慢成本还很高。\n为了解决这个问题，可以使用**检索（Retrieval）和排序（Ranking）**这两个方法。检索要做的有两个事情：首先选择出一些合理的stuff作为候选项；然后将这些候选项进一步筛选，比如重复的项扔掉，买过的项也扔掉，得到一个列表。排序要做的就是将检索好的列表用模型进行排序，比如将检索好的电影根据模型最后的预测评分由高至低排序。由于排序的列表是经过检索的，因此不会像最开始那样把所有的stuff丢给模型计算，这就大大降低了运算量。想想给你推荐的电影或者商品，100个算不少了吧，相比该网站所有的stuff上百万个，极大的降低了运算量。而且，*网站已有的stuff的对应$v_m$是可以提前计算的*，所以当有用户访问网站时，只需要计算该用户对应的$v_u$即可，这又进一步的降低了运算量。\n<img src=\"/img/24052804.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24052805.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n可以看出，检索其实就是做了一次广度的覆盖，而排序的目的是为了更精准的推送。那现在要思考的问题是，在第一步检索的过程中，筛选出多少stuff比较合适。容易想到，检索的stuff越多，那么推荐的效果就会越好，但是相应的速度也会降低。因此需要在性能和速度之间做出权衡。一个有效的方法是进行*离线实验*，看一下\n<img src=\"/img/24052806.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## Tensorflow实现内容过滤算法\n见jupyterLab\n\n## Principal Component Analysis\n***将数据可视化***\n一个汽车又长和宽两个特征，但是汽车的宽度变化范围其实差别不大，而汽车的长度变化范围较大，此时为了见数据可视化，可以忽略变化幅度小的特征像这里的汽车宽度。\n<img src=\"/img/24053100.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n再比如若两个特征为汽车的长和高，大小不同的车的这两个参数会有较大的差异，就是说这两个特征的变化幅度都挺大的，无法直接忽略任何一个，此时可以创建一个新的特征来描述这两个特征。比如新建一个z轴表示车的尺寸，这里的z轴不是新建了一个维度，还是在二维空间内新建的，他和x、y在同一平面。车的尺寸越大，相应的长度和高度就越高，因此可以用z这一个特征来粗略的估计x和y.\n<img src=\"/img/24053101.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n下图中的数据有3个特征，我们可以在三维坐标系中描绘出这些数据。但是若将三个特征减少到两个特征，我们就可以在二位坐标系中描绘出这些数据，会更方便一些对吧。\n<img src=\"/img/24053102.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n如果要描述一个国家，那一个国家的特征可太多了，如GDP，人口数量，占地面积，男女比例等等。假设一个国家有50个特征，我们一定是无法将有50个特征的国家可视化的。PCA算法可以将这大量特征减少到2、3个，这样我们就可以在坐标系中描绘出不同国家了。如经过PCA算法后，将这50个特征减少到了2个，这两个特征大致相当于GDP和人均GDP，这样我们就可以将一个国家在坐标系中可视化。\n<img src=\"/img/24053103.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24053104.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***PCA算法***\n在使用PCA算法之前，需要先将特征进行放缩，让他们的变化范围大致相同。然后将放缩过后的特征归一化为0均值，就是把每个特征减去平均值。\n<img src=\"/img/24060200.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n接下来选择一个新的坐标轴来代替原来的两个坐标轴，比如这里选择坐标轴z，其实和之前的x1坐标轴一样。选择z作为新的坐标轴后，将原来的五个数据映射到z轴上，我们可以知道他们的变化幅度很大，这也是一种比较有效的信息。\n<img src=\"/img/24060201.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n如果将z轴选成这样，将数据映射到z轴后，他们的变化幅度不如上一个z轴那样明显，所以这个新的坐标轴选的就不如上一个。\n<img src=\"/img/24060202.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n如果将z轴选为下面这样，那此时数据在z轴上的映射会得到最大的变化范围，此时的z轴就被称为*主成分*：当将数据映射到其上时，会得到最大的方差。\n<img src=\"/img/24060203.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n有了主成分之后，想要将二维的数据映射到主成分上，要做的就是将原数据向量和与主成分方向一致的单位向量做点积，就会得到其在主成分上的投影。想这里原数据向量是(2,3),假设找到的主成分是与x1夹角pi/4,从原点出发的指向第一象限的射线，那这个单位向量的坐标大概是(0.71,0.71),然后二者做内积，于是便计算出了x在主成分上的投影是3.55.\n<img src=\"/img/24060204.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n找到了主成分之后，如果还想要更多的主成分，那么只需要让这些主成分互相垂直(perpendicular).如要找第二个主成分，只需要和第一个主成分垂直即可，此时还在二维平面。若还想再找一个主成分，就需要与前两个主成分都垂直，也就延展到了三维空间。\n<img src=\"/img/24060205.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n只有两个特征的时候，PCA看起来和线性回归很类似，但是大多数时候数据集的特征很多，这个时候PCA和线性回归看起来就有很大不同了。实际上这两者本身就是两个事情，线性回归是监督学习中的事情，他有y标签，他想找的是一条和数据集拟合程度好的曲线，目的是尽量靠近y.而PCA没有y标签，他对待所有的特征都是平等的，他想找的是一条能尽量保留特征差异的曲线，这样将数据可视化的时候能看得更清晰一些。\n<img src=\"/img/24060206.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n特别的，若数据集是这样，即使仅有两个特征也能看出来二者的不同。\n<img src=\"/img/24060207.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n反过来，若给出映射后的数据，可以通过*PCA重建*来近似还原出原来的数据。如给定的z=3.55,与单位向量相乘后得到了(2.52,2.52),这和原始数据(2,3)相差不大。\n<img src=\"/img/24060208.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***PCA实现***\n可以使用scikit-learn包来实现PCA算法。使用前若数据不同特征的变化范围太大了，需要预处理，将不同特征放缩到一个合适的范围，这有助于找到合适的主成分。然后就可以使用sl包来完成其他事情。其中的fit函数会自动完成特征的归一化为均值0.\n<img src=\"/img/24060209.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n参数n_components=1表示只想要1个主成分；explained_variance_ratio_输出0.992表示经过PCA后的主成分，也就是新的坐标轴，保留了原始数据99.2%的变化率，看起来很不错。\n<img src=\"/img/24060210.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n若将二维的数据映射到二维的数据，就是说选两个主成分，那会出现这样的结果。其中explained_variance_ratio_有两个输出，0.992和0.008,分别代表了在不同的主成分上保留的原始数据的差距的比例，二者之和为1,就是说能完全解释原数据。\n<img src=\"/img/24060211.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n关于PCA的一些早期应用，现在的主要应用还是将数据可视化：\n<img src=\"/img/24060212.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n\n# 强化学习\n假设现在有一个无人机，将无人机的位置，方向和速度等信息称为状态。强化学习做的就是对于给定的状态s，找到一个函数将其映射为a，a是怎么操作摇杆让他保持想要的状态，像让它待在固定位置不同这样。虽然我们也可以使用监督学习来做这个事情，这不但需要对于无人机状态x的大量观测，同时需要比较专业的人来说明对于一个x应该怎么操作摇杆，也就是y.但这是很难做到的，因为这种操作无人机的顺序和力度很难精确说明，比如向左倾斜多一点还是少一点，这个一点儿怎么衡量；又或者是给无人机多少动力，这些都决定了x如何映射到y，这无疑是很困难的。正因如此，很多对于机器人的控制的应用中，监督学习的效果并不理想，而要使用强化学习。\n强化学习之所以强大的一个原因是你只需要说明做什么，而不需要说明怎么做。这就需要奖励函数，如果飞机飞得好，那可以将某个值+1，飞得不好则—1，如果飞的坠毁了，-10000这样。\n <img src=\"/img/24060300.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***火星探测器模拟***\n一个简化的火星探测的例子：探测器的初始状态为4,现在状态1和状态6都是值得探测的地方，但是状态1更有价值一些，因此可以将状态1的奖励设置的更高一些。探测器每次向左或向右移动，每次移动到新的状态都会得到奖励。如过探测器一直向左走，走到3的时候，得到0奖励，走到2的时候，得到0奖励，走到1的时候，得到100奖励；同样它也可以一直往右走；又或者左走走右走走。假设他走到1或6的时候，他就不会继续做其他事情，那状态1和状态6就是*终端态*。当他每一次行动的时候，都有4个参数：(状态，动作，奖励，下一个状态)，这几个参数是强化学的的关键信息。\n<img src=\"/img/24060301.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 回报\n通过之前的例子可以知道，不同的动作序列可能得到的奖励是不同的，通过强化学习的回报可以捕获不同序列的奖励。回报捕捉到的通常是能快速得到的奖励。像你身边现在就有10块钱，但是在山的那边有20块钱，回报会捕捉身边的这10块钱。计算回报公示如下图所示，第一项是初始状态的奖励，然后依次相加直到终端态。其中$\\gamma$是折扣因子，他是小于1的，通常取很接近1 的值如0.99等。正是折扣因子的存在导致了回报会更倾向于离得近的奖励。\n<img src=\"/img/24060302.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n假设现在一直向左走，从不同状态出发得到的回报用红色的字在上边注明了。需要注意的是如果从状态6开始，那么他的起始状态就是终端态，因此计算回报时只有一项，就是该终端态的奖励，也就是40.类似的，一直向右走的话，各状态作为起点的回报如图所示。当然如果在不同的初始状态选择不同的动作，那就可以得到第三个表格中的回报。\n<img src=\"/img/24060303.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***决策学习算法的策略***\n决策学习的目标是构建一个可以将*状态s*映射为*行动a*的Policy函数$\\pi(s)$,该函数会告诉我们为了得到最大的回报，每一步应该怎么做。如对于之前的例子中的最后一行，policy函数作为不同状态的函数会得到相应的行动。\n<img src=\"/img/24060304.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n看一下强化学习中的不同参数在不同应用中可以对应什么。\n<img src=\"/img/24060305.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n这种强化学习应用程序的形式可以称为*马尔科夫决策过程Markov Decision Precess(MDP)*.从之前的例子中可以得知，MDP说明了未来只取决于当前的状态，而不取决于是怎么到当前状态的。MDP也可以用下面这种图来解释：Agent是我们要操作的东西，经过Policy函数后得到了动作a，做了a之后会发生一些变化，比如我们的位置。基于这些变化，我们可以看到当前的状态以及奖励。\n<img src=\"/img/24060306.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## State-action value 函数定义\n状态动作做价值函数也可以叫Q函数，它以当前的状态s和当前要采取的行动a作为参数。当在状态s做了a动作之后，到达了一个新的状态，在这个新的状态下有最大的回报的路径即最优策略。Q函数返回的是从最初的状态s到新的状态再走最优策略的总回报。如对于状态2，若首先向右走到达状态3，根据之前计算过的最优策略，从状态3开始的最优解是往左走，于是便一路向左，这条路径的回报是12.5;若往左走，则直接到达了终端状态，回报是50.这样就可以计算出所有状态的Q值。\n>这里感觉比较奇怪，因为策略函数已经计算出了最大回报的路径是什么，为什么还要这个函数。比如在状态2的时候，明明知道了最优解是往左走，为什么还要计算一下往右一步，然后再走最优解。\n\n<img src=\"/img/24060400.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n对比Q函数和策略函数，发现每个状态的策略函数的回报就是Q函数取不同动作回报的最大值，这也给策略函数的计算提供了一种方法。Q函数也叫Q*或者最优Q函数或状态动作价值函数。\n<img src=\"/img/24060401.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 贝尔曼方程\n贝尔曼方程可以用来得到Q函数。刚查了一下，贝尔曼方程又较动态规划方程，OK,fine.挺希望有一天术语能统一一点，机器学习好像挺多概念就是数学概念换个叫法。\n<img src=\"/img/24060402.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n在看几个，注意的是若起始状态s是终端态，那么他不会采取行动，于是Q函数就只剩下第一项了。\n<img src=\"/img/24060403.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n回报可以分为两部分，一部分是马上能得到的回报，另一部分就是走到下一个状态后能得到的最佳回报，这也是贝尔曼方程要说明的主要事情。\n<img src=\"/img/24060404.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24060405.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 随机环境random(stochastic) environment\n实际工作中，机器人可能不会完全按照我们发出的指令执行。比如我们让他往右，但是他轮胎打滑了没有往右等，这就是随机环境。比如火星探测器的例子中，若初始状态在4号，现在你让他往左走，但是由于各种原因，比如风太大了，轮胎打滑了等等，最终导致了他有90%的概率往左走到3但是还有10%的概率往右走到5。考虑到这些随机的情况，就引出了*期望回报*。期望回报就是将一个设序列重复执行多次以计算他得到回报的平均值。所以，强化学习的目标到现在就变成了找到一个策略函数Policy()以得到最大的期望回报。同样，贝尔曼方程也要改进一下，加上期望。\n<img src=\"/img/24060406.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24060407.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***连续状态空间***\n火星他测器的例子中，探测器只在一些离散的位置，但实际应用中状态往往是连续的，并且一个物体的状态往往是多维的，比如x坐标，y坐标，x方向速度，y方向速度等。\n<img src=\"/img/24060500.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 登月器\n<img src=\"/img/24060501.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24060502.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n强化学习的主要任务是训练一个神经网络来逼近Q函数。登月器中，用于训练神经网络的输入可以由两部分组成，一个是登月器的状态，另一个是可以采取的行动，二者组合成一个向量作为输入。其中动作a有4个可能，什么都不做、向左点火、向右点火和向下点火来控制登月器的位置，以确保他能落在目标位置。将特征a经过one-hot编码得到4个二进制编码，在拼接上状态作为整体的输入向量。如当登月器在一个状态后，经过神经网络的计算，发现Q(s,main)最高，mian表示向下点火，那么登月器便会向下点火。\n<img src=\"/img/24060503.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n那现在问题就是怎么样训练这个神经网络。我们可以通过贝尔曼方程得到一些训练集x和y，然后用监督学习来训练神经网络。为了得到训练集，我们可以让登月器随即采取行动，这样可以得到很多不同的元组(s,a,R(s),s').根据s和a就可以得到输入x,根据R(s)和s'就可以得到Q(s,a)也就是y,于是就有了第一个数据集。其中贝尔曼方程的第一项就是R(s),而第二项需要的参数s'需要利用下一个元组的信息。在最初的时候，我们并不知道Q函数是什么，但是可以在最初的时候假设一个Q函数。\n<img src=\"/img/24060504.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n完整的训练过程，这个算法叫做DQ(Deep Q-Network)N算法：\n<img src=\"/img/24060505.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n## 算法改进\n***改进神经网络架构***\n之前的架构中，将动作a作为参数传给神经网络，于是对于同一个位置，神经网路一次只能计算对于该位置的一个动作。现在对输输入和输出做出改变，动作不作为输入，而在输出层中设置4个神经元，分别代表了不同动作的Q值，于是这样就可以一次计算出同一状态的4个不同动作的Q值。\n<img src=\"/img/24060506.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***$\\varepsilon$贪婪策略***\n当神经网络正在学习的时候，以前的方式中，他在每个状态总是采取能获得最到回报的动作。但是由于最初的Q函数是随机的，他有可能随机到一种情况，导致某个动作永远会使Q函数很低。比如Q(s,main)总是比较低，main表示向下开火，于是最终学到的Q函数就永远不会向下开火。为了避免这种情况，我们可以不必每次都选择能使回报最大的动作，当然应该尽量选择这个，只不过应该给他个权重像0.95，剩下的0.05权重让模型选择一个随机的动作，这个选择随机动作的做法被称为“探索”。这个策略就是$\\varepsilon$-greedy policy，其中$\\varepsilon$=0.05.\n$\\varepsilon$-greedy policy常见的做法是以一个比较高的$\\varepsilon$开始，逐步降低其值。比如登月器中，甚至可以将$\\varepsilon$初始化为1，然后逐渐减小到0.01.\n<img src=\"/img/24060600.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n***小批量和软更新***\n小批量不但能提高强化学习的性能，也能加速监督学习，像提高一些神经网络的训练或者线性回归模型的训练速度。\n在监督学习中，我们使用梯度下降算法来训练参数的时候，每次梯度下降都会遍历一边所有数据集，当数据集很大的时候，这会导致梯度下降的很慢。小批量做的是取大数据集的一个小子集，每次用这些小子集更新参数而不是遍历整个数据集，这样速度就会快不少。其中每次迭代使用的子集可以是不同的，可以将整个数据集划分为n个不同的子集，或者有一些交集的子集，然后用这些子集分别进行每一次迭代。\n<img src=\"/img/24060601.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n普通的梯度下降中，每次迭代都会使代价函数减少。而小批量梯度下降时，由于每次使用的数据集只是一个局部的缘故，他可能在单次下降过程中效果不太好甚至有时会增加代价函数，但是该算法的总体趋势仍然是向着全局最优的地方。所以在有大量数据集的时候，往往更多地使用小批量梯度下降或者Adam算法而不是最普通的梯度下降，因为他们的速度更快且最终的效果也不错。同样的在登月器的例子中，让登月器先随机获取10000个数据样本以后，可以不全部使用这些样本，而是一次使用1000个样本这样。\n<img src=\"/img/24060602.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n在登月器的算法中，最后我们将Q设置为Qnew,这里有可能发生的一个情况是新训练的Qnew可能性能还不如最开始的Q函数，*软更新*可以防止这样的事情发生。对于$Set Q = Q_{new}$,其实就是将参数$W_{new}、B_{new}$分别赋给了旧的$W、B$.其实我们可以使用$W = 0.01W_{new} + 0.99W、B = 0.01B_{new} + 0.99B$这样的更新方式。0.01和0.99是*超参数*，二者的和为1，他们控制了参数像新的参数靠拢的程度。如当只给新的参数0.01权重而给旧的参数0.99权重的时候，说明参数只是做了小幅度的更新，他还是更靠近旧的参数。这种做法可以让强化学习算法收敛的更可靠。\n\n\n# 一些问题\n关于K-means算法的第二步，选择样本的平均值作为新的质点的位置，那么此时每个样本与质点的差的平方的和平均值最小的数学证明。（当质点这么取值的时候实际上这个式子就变成方差了对吧）\n\n## 协同过滤算法使新用户的评分是0\n使用协同过滤算法训练模型：\n$$\n\\begin{matrix}\n \\textbf{min}\\\\\n w^{(1)},...,w^{(n_u)}\\\\\n b^{(1)},...,b^{(n_u)}\\\\\n x^{(1)},...,x^{(n_m)}\\\\\n\\end{matrix}\n \\qquad \\frac{1}{2} \\sum_{(i,j):r(j,j)=1}(w^{(j)}·x^{(i)}+b^{(j)}-y^{(i,j)})^2 + \\frac{\\lambda}{2} \\sum_{j=1}^{n_u}\\sum_{k=1}^{n}(w_k^{(j)})^2 + \\frac{\\lambda}{2} \\sum_{i=1}^{n_m}\\sum_{k=1}^{n}(x_k^{(i)})^2\n$$\n我们的目的是使代价函数尽可能小。对于新用户，他为对任何电影做出评价，因此代价函数的第一项是0,在此基础上，若想使整体式子变小，明显w的取值是0.类似的，若还对b做了正则化，则b也为0,所以新用户在该模型上对任何影片的预测分数都为0,不便于推荐。\n刚写上边这几行的时候又想到在监督学习中，这几项也都是平放项，要使该式子最小岂不是也应该让w为0吗？稍微一想就清楚了，在一般的监督学习中，w的值会影响到无正则化的代价函数，也就是式子的第一项，因此两者合作才能得到最小的代价函数。而协同过滤算法中的新用户无第一项，决定整个式子的只有正则化项，因此w才为0.\n\n## 协同过滤算法不适应密集层\nvideop122 min10左右，Andrew说协同过滤算法不能适应密集层那一段，没明白。他说了需要自己实现代价函数，之前不也是自己实现代价函数吗。可能是我记错了，以后看一下tensorflow密集层的代价函数相关部分是怎么做的，和协同过滤算法有什么区别。\n\n## 协同过滤算法和内容过滤算法的区别\non Andrew's slide:\nCollaborative filtering:\n Recommend items to you based on rating of users w·o gave similar rating as you.\nContent-based filtering:\n Recommeng items to you based on features of users and item to find good match.\n\n查找一些资料，发现协同过滤算法分为用户协同过滤和物品协同过滤。Andrew说的应该是用户协同过滤。但是实现方式中是一起训练w、b和x,没看出来找相似用户这个过程。\n\n## Q函数\nQ函数的作用没太清楚，他能计算出策略函数，但他采取行动走的需要时最优解，这最优解如果不是通过策略函数找到的，那是怎么找到的。\n\n\n","slug":"ML-Andrew-Ng-2","published":1,"updated":"2024-06-06T13:13:28.830Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gb3002fbiub43rngd7w","content":"<p>同一系列的<a href=\"https://b-white07.github.io/posts/acf03113.html\">监督学习</a>和<a href=\"https://b-white07.github.io/posts/1ca572.html\">神经网络</a>相关笔记点击查看</p>\n<h1>无监督学习</h1>\n<p>监督学习和无监督学习的对比在<a href=\"https://b-white07.github.io/posts/acf03113.html\">监督学习</a>开篇处已经介绍，此处不再赘述。</p>\n<h2 id=\"聚类算法Clustering\">聚类算法Clustering</h2>\n<p>聚类就是对于输入特征x,算法会根据一些特征自动将其归为几类。与监督学习的数据集不同，这些数据集是没有y标签的。<br>\n<img src=\"/img/24050800.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"K-means聚类算法\">K-means聚类算法</h2>\n<p>假设现在你需要算法寻找一个数据集中的两个集群，K-means算法做的第一件事是随机猜测这两个集群的中心在哪里，集群的中心称为<strong>集群质心</strong>，集群质心与输入特征x具有<strong>相同的维度</strong>。然后算法会遍历数据集中的每个数据，看一下他们与两个集群质心的差距，离哪个质心更近，就讲该数据归为哪一类。下图中❌和蓝叉就是算法最开始随机猜的两个值。<br>\n<img src=\"/img/24050801.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>然后算法会计算红色集群的平均值，然后将最初预测的红色质心移动到红色集群的平均值处。同样的方式处理蓝色质心。<br>\n然后在新的质心基础上，算法会重复第一步，遍历数据集中的每个节点，再次计算他们对于质心的位置，如果发现原来被划分为红色集群的数据现在离蓝色更近，那么将该数据划分到蓝色集群。<br>\n<img src=\"/img/24050802.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24050803.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>然后再次计算新的集群的平均值，然后移动质心。重复执行这两个步骤，最后会导致质心的位置不再有变化，此时K-means算法就收敛了。<br>\n<img src=\"/img/24050804.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>实现</strong></em><br>\n计算数据和质心的靠近程度其实就是计算两者的距离<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><msup><mi>x</mi><mi>i</mi></msup><mo>−</mo><msub><mi>μ</mi><mi>k</mi></msub><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">||x^i - \\mu _k||</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0747em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣∣</span></span></span></span>，也称为<strong>L2范数</strong>。在计算一个数据<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>与每一个质心<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>μ</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mu_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>的距离以后，选择使距离最小的k,将其设置为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>c</mi><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">c^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span>的值，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>c</mi><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">c^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span>记录了一个索引，该索引记录了当前数据与哪个质心离得最近。当计算距离的时候，其实计算其平方会方便一些，而且效果是一样的。然后计算不同集群平均值即可得到不同集群新的质心。<br>\n<img src=\"/img/24050805.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>有一个极端的情况：在分配集群的时候，没有任何一个数据属于一个质心，此时可以删掉这个质心，这也就会减少一个集群。如果不希望集群的数量减少，那么可以试一下重新随机一个质心位置，看看能不能将数据分配给他。<br>\n对于没有明显被划分为不同集群的数据集，K-means算法也可以较好的工作。比如衣服大小与人身高体重的关系，往往是一组连续的没有明显分组的数据，在这个数据集上使用K-means算法，依旧会得到比如k=3的3个集群，这三个集群的质心可以作为小、中、大号的代表。<br>\n<img src=\"/img/24050806.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>代价函数</strong></em><br>\nK-means算法的损失函数（失真函数distortion funciton）定义如下，他其实就是在找合适的质点，使得所有数据与其质点距离平方和的平均值最小。<br>\n<img src=\"/img/24050807.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n以之前的例子为例，此时的状态，该模型的代价就是每一个蓝色的数据与蓝色叉距离的平方与每一个红色数据与红叉的距离的平方的和的平均值。<br>\n<img src=\"/img/24050808.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n可以看到，该代价函数是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">C^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>μ</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mu_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>的函数，每个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">C^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span>与<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">x^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span>是一一对应的，因为它代表了<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">x^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span>是属于哪个质心的；而<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>μ</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mu_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>本身就是质心的位置，所以这个代价函数会不断调整数据属于哪个集群以及不同质点的位置。</p>\n<p>进一步来看一下K-means算法的每一步：<br>\n第一步是在将数据分配给不同的质心，此时质心是保持不动的。观察代价函数，若想让代价函数变小，很明显应该减少二者之间的距离，而K-means算法也正是这么做的，他将数据分配给了离自己近的质心。<br>\n第二步是数据已经分配好了，调整质心的位置。K-means算法做的是将新的质心位置取在集群的平均值的位置，事实上，这种做法会使所有样本的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><msup><mi>x</mi><mi>i</mi></msup><mo>−</mo><msubsup><mi>μ</mi><mi>c</mi><mi>i</mi></msubsup><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">||x^i-\\mu_c^i||</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0747em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0747em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣∣</span></span></span></span>和的平均值最小，也就是减少了代价函数。<br>\n也就是说K-means算法每一步都在降低他的代价函数，所以万一出现了代价函数升高的情况，意味着你的程序有Bug了。<br>\n<img src=\"/img/24050809.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>质心初值的随机选择</strong></em><br>\n之前说过K-means算法的第一步是随机选择一个质心，常见的做法是如果你需要k个质心，那么可以从数据集中随机选择k个数据作为初始的质心。<br>\n对于质心不同的初值，K-means算法在收敛后可能得到不同的聚类，如下图所示不同的初值得到了3个聚类。<br>\n<img src=\"/img/24050900.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n因此为了是算法得到一个不错的效果，通常需要多次选择随机的初值，然后分别计算这些模型的代价函数，然后选择代价函数最低的模型。<br>\n<img src=\"/img/24050901.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>质心（聚类）数量k的选择</strong></em><br>\n有一个选择k的方法是叫肘算法（Elbow method），不得不说名字太难听了，还不如以发明者的名字命名。该方法将代价函数J()作为K的函数，观察J()的变化。如果发现了一点处函数的变化幅度发生突变，那么就选择该点处的K值。如下图中，K=3之前J()都在快速下降，但是k=3之后J()下降速度明显变缓，那么此时就可以选择K=3.但是J()往往也会想右图那样，找不到这样的K值。此时也不能找使J()最小的K值，因为随着K的增大，J()总是在减小。所以这个方法感觉不太行。<br>\n<img src=\"/img/24050902.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>另外一种方法是权衡一下不同k值的效果，看看哪个更符合当前需求。比如在衣服尺码的数据集中，可以将k取为3，这样会得到三个聚类，这三个聚类可以分别代表小号，中号和大号。当然也可以让k=5，这样就得到了5个聚类，那么就可以分别代表超小、小、中、大、超大号。将衣服分为更多的类别，会增加制作成本，但是衣服会更贴合消费者的体型。所以在贴合消费者体型和制作成本之间，要做出一个权衡，以选择合适的k。<br>\n<img src=\"/img/24050903.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"异常检测Anomaly-detection\">异常检测Anomaly detection</h2>\n<p>异常检测就是根据已有的数据集，判断新的数据与已有数据的相似性，以此来检测新的数据是否有异常。<br>\n<img src=\"/img/24051200.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n异常检测最常见的方法是<strong>密度估计（density estimation）</strong>。该算法首先会建立一个关于特征x的概率模型<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>，该模型的作用是检测当前特征的不同取值的概率。如下图最小的椭圆中的取值概率最高，向外慢慢降低。然后用该模型预测新数据，得到新数据的概率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(x_{test})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">es</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>,如果得到的概率小于某个阈值，那么就认为该数据有异常。<br>\n<img src=\"/img/24051201.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>异常检测的应用很广泛，比如制造业中像检测引擎、欺诈检测、黑客攻击等。<br>\n<img src=\"/img/24051202.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>高斯正态分布</strong></em><br>\n为了应用异常检测，需要了解高斯正态分布。首先了解如何利用高斯分布实现<strong>单特征</strong>的异常检测。<br>\n高斯分布中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span>是期望，也就是这组数据的平均数；<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span>是标准差，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\sigma^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>是方差，描述了这组数据的分散程度。<br>\n<img src=\"/img/24051300.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>高斯曲线的方程为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt><mi>σ</mi></mrow></mfrac><msup><mi>e</mi><mfrac><mrow><mo>−</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo>−</mo><mi>μ</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></msup></mrow><annotation encoding=\"application/x-tex\">p(x)=\\frac{1}{\\sqrt {2\\pi} \\sigma}e^{\\frac{-(x-\\mu)^2}{2 \\sigma^2}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8671em;vertical-align:-0.538em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.551em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord sqrt mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9128em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mtight\" style=\"padding-left:0.833em;\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-2.8728em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail mtight\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1272em;\"><span></span></span></span></span></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.538em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3291em;\"><span style=\"top:-3.4534em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.251em;\"><span style=\"top:-2.5062em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9384em;\"><span style=\"top:-2.9384em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.5021em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">μ</span><span class=\"mclose mtight\"><span class=\"mclose mtight\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0484em;\"><span style=\"top:-3.0484em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4938em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span></span>,其曲线与x轴围成的面积恒为1，因此对于不同的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi><mtext>、</mtext><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu、\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">μ</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span>该图像有如下变化：<br>\n<img src=\"/img/24051301.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>根据数据集可以计算出<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi><mtext>、</mtext><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu、\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">μ</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span>，然后就得到了相应的高斯分布曲线。在此基础上，对于一个新的输入x，可以计算他的p(x),如果概率较高，那就认为这个数据没什么异常；相反如果这个值较低，那么就认为这个数据可能出现了异常。这了的数据只能是单特征，即x是个数而不是向量。<br>\n<img src=\"/img/24051302.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>数据集x为向量时，可以依靠每个特征的p(x)来计算总的概率：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">;</mo><msub><mi>μ</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msubsup><mi>σ</mi><mn>1</mn><mn>2</mn></msubsup><mo stretchy=\"false\">)</mo><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">;</mo><msub><mi>μ</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msubsup><mi>σ</mi><mn>2</mn><mn>2</mn></msubsup><mo stretchy=\"false\">)</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo separator=\"true\">;</mo><msub><mi>μ</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><msubsup><mi>σ</mi><mi>n</mi><mn>2</mn></msubsup><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∏</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>j</mi></msub><mo separator=\"true\">;</mo><msub><mi>μ</mi><mi>j</mi></msub><mo separator=\"true\">,</mo><msubsup><mi>σ</mi><mi>j</mi><mn>2</mn></msubsup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(\\vec{x}) = p(x_1;\\mu_1,\\sigma_1^2)p(x_2;\\mu_2,\\sigma_2^2)···p(x_n;\\mu_n,\\sigma_n^2) = \\prod_{j=1}^{n}p(x_j;\\mu_j,\\sigma_j^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.4519em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2481em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.4519em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2481em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">⋅⋅⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2499em;vertical-align:-0.4358em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3948em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><br>\n<img src=\"/img/24051303.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>多特征的异常检测检测算法，n不是数据集的数量而是可能导致异常的特征：<br>\n<img src=\"/img/24051304.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24051305.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"异常检测系统的评估\">异常检测系统的评估</h2>\n<p><strong>实数评估</strong>可以用于评估异常检测系统。通过实数评估，可以方便的选择特征x或者阈值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>之类的参数。<br>\n在无监督学习中，数据集是没有标签的，但是我们可以假设数据集有标签。如飞机发动机的数据集中，可以假设正常的发动机对应于y=0,异常的发动机对应于y=1.通常来讲异常发动机的数量是远小于正常发动机的数量的对吧。然后将数据集划分为三个部分，一部分用于训练模型，一部分用于调整参数，一部分用于评估模型。其中用来训练模型的数据集选用正常的发动机的数据，虽说是用正常的发动机训练，但实际上数据集中若参杂了一些异常的发动机也没关系。训练好模型以后，划分出一个交叉验证集和一个测试集，通过交叉验证集的结果来对模型进行微调，最后通过测试集来评估该模型的表现。这其实和之前的评估神经网络步骤很类似。<br>\n<img src=\"/img/24051400.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>由于在异常检测的应用中，异常的例子往往很少，所以有时也可以不用单独划分出一个测试集。当然这样对于该模型的泛化评估就会差一些。<br>\n<img src=\"/img/24051401.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>其实异常检测的数据集，正常的和异常的数量差别很大，如果给他们加上标签，那么这些数据集就是深度学习中，数据集偏斜很大的情况，在这种情况下，可以通过精确率、召回率、F1score这些参数来评估该模型。<br>\n<img src=\"/img/24051402.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"异常检测-VS-监督学习\">异常检测 VS 监督学习</h2>\n<p>上边提到了给无监督学习的数据集假设标签，那其实就变成了监督学习，那二者的区别有什么呢？当正面的数据集很少，负面数据集很多的时候，异常检测会比较合适；当正面和负面数据都很多的时候，监督学习会比较合适。<br>\n当正面数据很少的时候，虽然二者都可以使用，但是二者看待数据集的方式截然不同。对于异常检测，负面数据是正常的情况，也是多数情况。那对于一个新的数据是否正常的判断的依据是他和负面数据的不同的程度，<strong>他是找不同</strong>，他不指望通过几个异常类型就能囊括所有的异常。比如诈骗，类型可以说层出不穷，诈骗er们天天在研究新的诈骗类型，如果指望查看信息诈骗的特征与以往就诈骗特征的相似程度，那诈骗er们就没饭吃了，他们在时时刻刻创新啊！而对于监督学习，他做的是通过大量的相应标签的数据，将它归为正面数据。对于新的数据，他看的是新的数据与以往已有标签的数据的相同的程度，<strong>他是找相同</strong>，像垃圾邮件，手段就那么些，改改数字，发发钓鱼网站，所以找相同更容易奏效。<br>\n<img src=\"/img/24051403.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24051404.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"特征选择\">特征选择</h2>\n<p>异常检测中，提供的特征需要是满足高斯分布的。在使用特征之前，可以绘制一下不同特征的曲线，如果不满足高斯分布，那么可以将特征做一些变形使他满足高斯分布。然后用变形过后的特征训练模型，交叉验证和测试。<br>\n<img src=\"/img/24051500.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>有时，异常的数据经过p(x)后表现的和正常的数据差不多大，此时该模型对于异常的判断就不太理想，此时可以分析一下异常的数据，看看能否通过添加新的特征，该特征对于异常的数据和对于正常的数据有比较大的差异，这样就可以使该模型得到更准确的结果。<br>\n<img src=\"/img/24051501.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>比如检测数据中心的电脑是否有异常情况，通常会用内存使用率、每秒访问磁盘次数、CPU负载、网络流量等指标来检测一个计算机是否异常。在处理不同业务时，对不同部件的使用情况也许会出现多种合理的不同情况，比如CPU负载高或低都正常，网络流量高或低也都正常，但是若在你的业务下，CPU高负载而网络流量低负载或者CPU低负载而网络流量高负载的情况不太会出现，那么此时可以新建一个特征为CPU负载和网络流量的比值，这个新特征<strong>既不会影响正常的数据，又能检测出异常数据</strong>。<br>\n<img src=\"/img/24051502.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h1>推荐系统</h1>\n<p>推荐系统就是我想的那样，只是需要了解下图中的几个术语，其中问号表示该用户没有对该电影打分：<br>\n<img src=\"/img/24051700.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"使用基本线性回归\">使用基本线性回归</h2>\n<p>假设我们已经有了电影的特征，我们可以使用如下方式来预测用户对没看过的电影的打分，其中n表示特征的数量，w和b的上标表示是第几个用户的参数。这看起来很像线性回归：<br>\n<img src=\"/img/24051701.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>代价函数和线性回归模型也很类似，其中的正则化项，可以将分母的m去掉，m代表了用户评过分的电影的数量，是个常数，去掉它不影响参数w的取值：<br>\n<img src=\"/img/24051702.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>上述是在训练单个用户的参数，可以将代价函数稍作修改，将所有用户的参数一起训练：<br>\n<img src=\"/img/24051703.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"协同过滤算法collaborative-filter\">协同过滤算法collaborative filter</h2>\n<p>如果我们事先知道电影的特征x，则可以直接使用线性回归模型。如果我们事先不知道电影的特征，就无法使用线性回归。对于这种情况，<strong>假设</strong>我们现在已经有了每个用户的线性回归模型，即不同用户的<strong>w和b</strong>已知，我们又同时<strong>拥有不同用户</strong>对同一部电影的打分，而同一部电影的两个特征必然是一样的，因此我们可以根据不同用户的参数以及他们的打分情况来推测一下这部电影的不同特征的值：<br>\n<img src=\"/img/24051704.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>具体的实现其实就是将代价函数作为特征x的函数，同样的可以一个个训练x，也可以一次性训练所有电影的特征x：<br>\n<img src=\"/img/24051705.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>到此为止，我们分别在已知特征x的情况下训练了参数w和b，和已知参数w和b的情况下训练了电影特征x.<strong>协同过滤算法</strong>就是将二者结合起来，这样就得到了关于w、b、x的代价函数。注意到对于参数w的求和和对于特征x的求和虽然看起来有差别，但是实际上计算的项数都是一样的，他们的数量都是所有被用户打过分的电影的数量，只是解释起来的方式不太相同而已。<br>\n<img src=\"/img/24051706.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>同样用梯度下降算法确定参数：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left right\" columnspacing=\"0em 1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>repeat until convergence:</mtext><mtext>  </mtext><mo stretchy=\"false\">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><msubsup><mi>w</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><msubsup><mi>w</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mi>w</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mtext>  </mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mi>w</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><msubsup><mi>x</mi><mi>k</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><msubsup><mi>x</mi><mi>k</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mi>w</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msubsup><mi>x</mi><mi>k</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo stretchy=\"false\">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n&amp;\\text{repeat until convergence:} \\; \\lbrace \\\\\n&amp;  \\; \\; \\;w_i^{(j)} = w_i^{(j)} -  \\alpha \\frac{\\partial J(w,b,x)}{\\partial w_j}  \\; &amp; \\\\ \n&amp;  \\; \\; \\;  \\; \\;b^{(j)} = b^{(j)} -  \\alpha \\frac{\\partial J(w,b,x)}{\\partial b^{(j)}} \\\\\n&amp;  \\; \\; \\;  \\; \\;x_k^{(i)} = x_k^{(i)} -  \\alpha \\frac{\\partial J(w,b,x)}{\\partial x_k^{(i)}} \\\\\n&amp;\\rbrace\n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:11.0932em;vertical-align:-5.2966em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.7966em;\"><span style=\"top:-8.3836em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-6.2966em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.5975em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.1665em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:1.2096em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.2966em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.7966em;\"><span style=\"top:-8.3836em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">repeat until convergence:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">{</span></span></span><span style=\"top:-6.2966em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9721em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span></span><span style=\"top:-3.5975em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.296em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.814em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.704em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-1.1665em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.11em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.2748em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.7218em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2361em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:1.2096em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mclose\">}</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.2966em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.2966em;\"><span style=\"top:-6.2966em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h2 id=\"二进制标签\">二进制标签</h2>\n<p>相对于给电影打分，更多的推荐算法是二进制标签的，像喜欢或是不喜欢这样的。于是预测任务就从之前的预测分数变成了预测用户是否喜欢，进一步，这其实就是从线性回归变成了逻辑回归，代价函数也和逻辑回归的代价函数很类似：<br>\n<img src=\"/img/24051707.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24051708.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"均值归一化mean-normalization\">均值归一化mean normalization</h2>\n<p>之前的例子中，所有用户都已经评价过了一个或几个电影，那么对于新注册的用户，他没有对任何电影进行评分，因此对他执行协同过滤算法的话，会导致他对所有的电影的评分都是0.也就是无法完成给新用户推荐电影，很明显实际上不应该这样。<br>\n<img src=\"/img/24051800.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><strong>均值归一化</strong>可以解决这个问题。现在将用户对不同电影的打分组成一个矩阵A，A的每一行代表了不同用户对同一电影的打分。向量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span>的每一项表示表示用户对一个电影打分的平均值。用矩阵A减去<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span>得到矩阵B，然后用矩阵B来学习新的参数w、b、x。学到新模型后，为了使预测保持在合理的范围之内，如评分非负，最终的预测结果需要在模型的预测基础之上加上对应电影的平均分数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span>.比如预测新用户对于第一个电影的评分，学习到的参数w、b为0，于是模型的预测打分是0,然后加上<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>μ</mi><mn>1</mn></msub><mo>=</mo><mn>2.5</mn></mrow><annotation encoding=\"application/x-tex\">\\mu_1=2.5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2.5</span></span></span></span>,于是得到了最终的结果是2.5.这个结果比之前的0看起来更有说服力一些，他其实<strong>反映了其他用户对该电影的平均打分情况</strong>。<br>\n观察矩阵B的每一行，发现他们的均值为0，也就是上述算法其实将矩阵A的每一行都均值化为0.当有新用户注册时，想预测该用户对不同电影的评分用这种方法是不错的。但是还有另外一种情况，就是上映了一个新的电影，没有或者几乎没有用户对他进行过评分，这个时候想要预估用户对该电影的评分，可以将矩阵A的每一列均值化为0.<br>\n<img src=\"/img/24051801.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"tensorflow实现协同过滤\">tensorflow实现协同过滤</h2>\n<p>两图胜千言<br>\n<img src=\"/img/24051802.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24051803.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"寻找相关特征\">寻找相关特征</h2>\n<p>下面的方法可以找到和目标比较接近的一些东西，其实和代价函数很类似，只不过目标y换了一下而已：<br>\n<img src=\"/img/24051804.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n协同过滤算法的局限性，图片中的第二个方面side information没看明白，他的意思是获取这些信息比较难吗？<br>\n<img src=\"/img/24051805.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"内容过滤算法content-based-filtering\">内容过滤算法content-based filtering</h2>\n<p>内容过滤算法是根据用户特征和电影特征来推荐影片。用户和影片的特征可能是不同维度的，像用户有10个特征二影片有15个特征这样，所以向量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>x</mi><mi>u</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">x_u^{(j)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1614em;vertical-align:-0.1166em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1166em;\"><span></span></span></span></span></span></span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>x</mi><mi>m</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">x_m^{(i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1614em;vertical-align:-0.1166em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1166em;\"><span></span></span></span></span></span></span></span></span></span>的大小是可以不一样的。<br>\n<img src=\"/img/24052800.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>在协同过滤算法中，使用<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>w</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo separator=\"true\">⋅</mo><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>+</mo><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">w^{(j)}·x^{(i)}+b^{(j)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9713em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span>来预测用户对电影的评分。在内容过滤算法中，需要使用<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>v</mi><mi>u</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">v_u^{(j)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1614em;vertical-align:-0.1166em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1166em;\"><span></span></span></span></span></span></span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>v</mi><mi>m</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">v_m^{(i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1614em;vertical-align:-0.1166em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1166em;\"><span></span></span></span></span></span></span></span></span></span>，他们分别是通过<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>w</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">w^{(j)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">x^{(i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span>计算而来，代表了用户j和电影i的特征的向量。而<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">b^{(j)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span>项可以舍弃，这不会有什么影响。然后两个v向量的点积用来估计用户j对电影i的评分。虽然v是由x计算而来，而x的维度可以不同，但是v的维度必须相同。<br>\n<img src=\"/img/24052801.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>计算<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>u</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>and<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></strong></em><br>\n可以分别使用两个神经网络来计算<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>u</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>and<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,然后用<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>u</mi></msub><mo separator=\"true\">⋅</mo><msub><mi>v</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_u·v_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5945em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>来预测用户对电影的评分。或者若想要得到一个二元分类的结果，将<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>u</mi></msub><mo separator=\"true\">⋅</mo><msub><mi>v</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_u·v_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5945em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>作为参数传递给g()即可。注意到用户网络和电影网络输入层中的神经元数量不同，这代表了用户和电影的特征可以不同，但是他们的输出层有相同的神经元数量，这代表了他们最后的u的维度是相同的，便可以进行点积运算。<br>\n<img src=\"/img/24052802.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>也可以同时构建两个神经网络，然后为整个神经网络定义一个代价函数，这样可以一次性计算所有的参数。若要想找与电影i相似的电影k，只需要计算<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><msubsup><mi>v</mi><mi>m</mi><mi>k</mi></msubsup><mo>−</mo><msubsup><mi>v</mi><mi>m</mi><mi>i</mi></msubsup><mi mathvariant=\"normal\">∣</mi><msup><mi mathvariant=\"normal\">∣</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">||v_m^k - v_m^i ||^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0747em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>即可。<br>\n<img src=\"/img/24052803.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"从大型目录中推荐\">从大型目录中推荐</h2>\n<p>大型目录指的代推荐的东西有很多，比如当一个用户访问不同网站时，该网站可能会推荐电影，推荐广告，推荐商品，推荐歌曲等等。这些代被推荐的东西有很多，如电影网站中有上万个电影、购物网站有上百万个商品等，如果每个用户来到这个网站，该网站就用上边提到的神经网络计算一次，那这个做法不太好，响应慢成本还很高。<br>\n为了解决这个问题，可以使用**检索（Retrieval）和排序（Ranking）**这两个方法。检索要做的有两个事情：首先选择出一些合理的stuff作为候选项；然后将这些候选项进一步筛选，比如重复的项扔掉，买过的项也扔掉，得到一个列表。排序要做的就是将检索好的列表用模型进行排序，比如将检索好的电影根据模型最后的预测评分由高至低排序。由于排序的列表是经过检索的，因此不会像最开始那样把所有的stuff丢给模型计算，这就大大降低了运算量。想想给你推荐的电影或者商品，100个算不少了吧，相比该网站所有的stuff上百万个，极大的降低了运算量。而且，<em>网站已有的stuff的对应<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>是可以提前计算的</em>，所以当有用户访问网站时，只需要计算该用户对应的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>u</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>即可，这又进一步的降低了运算量。<br>\n<img src=\"/img/24052804.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24052805.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>可以看出，检索其实就是做了一次广度的覆盖，而排序的目的是为了更精准的推送。那现在要思考的问题是，在第一步检索的过程中，筛选出多少stuff比较合适。容易想到，检索的stuff越多，那么推荐的效果就会越好，但是相应的速度也会降低。因此需要在性能和速度之间做出权衡。一个有效的方法是进行<em>离线实验</em>，看一下<br>\n<img src=\"/img/24052806.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"Tensorflow实现内容过滤算法\">Tensorflow实现内容过滤算法</h2>\n<p>见jupyterLab</p>\n<h2 id=\"Principal-Component-Analysis\">Principal Component Analysis</h2>\n<p><em><strong>将数据可视化</strong></em><br>\n一个汽车又长和宽两个特征，但是汽车的宽度变化范围其实差别不大，而汽车的长度变化范围较大，此时为了见数据可视化，可以忽略变化幅度小的特征像这里的汽车宽度。<br>\n<img src=\"/img/24053100.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>再比如若两个特征为汽车的长和高，大小不同的车的这两个参数会有较大的差异，就是说这两个特征的变化幅度都挺大的，无法直接忽略任何一个，此时可以创建一个新的特征来描述这两个特征。比如新建一个z轴表示车的尺寸，这里的z轴不是新建了一个维度，还是在二维空间内新建的，他和x、y在同一平面。车的尺寸越大，相应的长度和高度就越高，因此可以用z这一个特征来粗略的估计x和y.<br>\n<img src=\"/img/24053101.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>下图中的数据有3个特征，我们可以在三维坐标系中描绘出这些数据。但是若将三个特征减少到两个特征，我们就可以在二位坐标系中描绘出这些数据，会更方便一些对吧。<br>\n<img src=\"/img/24053102.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>如果要描述一个国家，那一个国家的特征可太多了，如GDP，人口数量，占地面积，男女比例等等。假设一个国家有50个特征，我们一定是无法将有50个特征的国家可视化的。PCA算法可以将这大量特征减少到2、3个，这样我们就可以在坐标系中描绘出不同国家了。如经过PCA算法后，将这50个特征减少到了2个，这两个特征大致相当于GDP和人均GDP，这样我们就可以将一个国家在坐标系中可视化。<br>\n<img src=\"/img/24053103.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24053104.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>PCA算法</strong></em><br>\n在使用PCA算法之前，需要先将特征进行放缩，让他们的变化范围大致相同。然后将放缩过后的特征归一化为0均值，就是把每个特征减去平均值。<br>\n<img src=\"/img/24060200.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>接下来选择一个新的坐标轴来代替原来的两个坐标轴，比如这里选择坐标轴z，其实和之前的x1坐标轴一样。选择z作为新的坐标轴后，将原来的五个数据映射到z轴上，我们可以知道他们的变化幅度很大，这也是一种比较有效的信息。<br>\n<img src=\"/img/24060201.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>如果将z轴选成这样，将数据映射到z轴后，他们的变化幅度不如上一个z轴那样明显，所以这个新的坐标轴选的就不如上一个。<br>\n<img src=\"/img/24060202.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>如果将z轴选为下面这样，那此时数据在z轴上的映射会得到最大的变化范围，此时的z轴就被称为<em>主成分</em>：当将数据映射到其上时，会得到最大的方差。<br>\n<img src=\"/img/24060203.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>有了主成分之后，想要将二维的数据映射到主成分上，要做的就是将原数据向量和与主成分方向一致的单位向量做点积，就会得到其在主成分上的投影。想这里原数据向量是(2,3),假设找到的主成分是与x1夹角pi/4,从原点出发的指向第一象限的射线，那这个单位向量的坐标大概是(0.71,0.71),然后二者做内积，于是便计算出了x在主成分上的投影是3.55.<br>\n<img src=\"/img/24060204.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>找到了主成分之后，如果还想要更多的主成分，那么只需要让这些主成分互相垂直(perpendicular).如要找第二个主成分，只需要和第一个主成分垂直即可，此时还在二维平面。若还想再找一个主成分，就需要与前两个主成分都垂直，也就延展到了三维空间。<br>\n<img src=\"/img/24060205.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>只有两个特征的时候，PCA看起来和线性回归很类似，但是大多数时候数据集的特征很多，这个时候PCA和线性回归看起来就有很大不同了。实际上这两者本身就是两个事情，线性回归是监督学习中的事情，他有y标签，他想找的是一条和数据集拟合程度好的曲线，目的是尽量靠近y.而PCA没有y标签，他对待所有的特征都是平等的，他想找的是一条能尽量保留特征差异的曲线，这样将数据可视化的时候能看得更清晰一些。<br>\n<img src=\"/img/24060206.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>特别的，若数据集是这样，即使仅有两个特征也能看出来二者的不同。<br>\n<img src=\"/img/24060207.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>反过来，若给出映射后的数据，可以通过<em>PCA重建</em>来近似还原出原来的数据。如给定的z=3.55,与单位向量相乘后得到了(2.52,2.52),这和原始数据(2,3)相差不大。<br>\n<img src=\"/img/24060208.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>PCA实现</strong></em><br>\n可以使用scikit-learn包来实现PCA算法。使用前若数据不同特征的变化范围太大了，需要预处理，将不同特征放缩到一个合适的范围，这有助于找到合适的主成分。然后就可以使用sl包来完成其他事情。其中的fit函数会自动完成特征的归一化为均值0.<br>\n<img src=\"/img/24060209.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>参数n_components=1表示只想要1个主成分；explained_variance_ratio_输出0.992表示经过PCA后的主成分，也就是新的坐标轴，保留了原始数据99.2%的变化率，看起来很不错。<br>\n<img src=\"/img/24060210.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>若将二维的数据映射到二维的数据，就是说选两个主成分，那会出现这样的结果。其中explained_variance_ratio_有两个输出，0.992和0.008,分别代表了在不同的主成分上保留的原始数据的差距的比例，二者之和为1,就是说能完全解释原数据。<br>\n<img src=\"/img/24060211.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>关于PCA的一些早期应用，现在的主要应用还是将数据可视化：<br>\n<img src=\"/img/24060212.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h1>强化学习</h1>\n<p>假设现在有一个无人机，将无人机的位置，方向和速度等信息称为状态。强化学习做的就是对于给定的状态s，找到一个函数将其映射为a，a是怎么操作摇杆让他保持想要的状态，像让它待在固定位置不同这样。虽然我们也可以使用监督学习来做这个事情，这不但需要对于无人机状态x的大量观测，同时需要比较专业的人来说明对于一个x应该怎么操作摇杆，也就是y.但这是很难做到的，因为这种操作无人机的顺序和力度很难精确说明，比如向左倾斜多一点还是少一点，这个一点儿怎么衡量；又或者是给无人机多少动力，这些都决定了x如何映射到y，这无疑是很困难的。正因如此，很多对于机器人的控制的应用中，监督学习的效果并不理想，而要使用强化学习。<br>\n强化学习之所以强大的一个原因是你只需要说明做什么，而不需要说明怎么做。这就需要奖励函数，如果飞机飞得好，那可以将某个值+1，飞得不好则—1，如果飞的坠毁了，-10000这样。<br>\n<img src=\"/img/24060300.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>火星探测器模拟</strong></em><br>\n一个简化的火星探测的例子：探测器的初始状态为4,现在状态1和状态6都是值得探测的地方，但是状态1更有价值一些，因此可以将状态1的奖励设置的更高一些。探测器每次向左或向右移动，每次移动到新的状态都会得到奖励。如过探测器一直向左走，走到3的时候，得到0奖励，走到2的时候，得到0奖励，走到1的时候，得到100奖励；同样它也可以一直往右走；又或者左走走右走走。假设他走到1或6的时候，他就不会继续做其他事情，那状态1和状态6就是<em>终端态</em>。当他每一次行动的时候，都有4个参数：(状态，动作，奖励，下一个状态)，这几个参数是强化学的的关键信息。<br>\n<img src=\"/img/24060301.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"回报\">回报</h2>\n<p>通过之前的例子可以知道，不同的动作序列可能得到的奖励是不同的，通过强化学习的回报可以捕获不同序列的奖励。回报捕捉到的通常是能快速得到的奖励。像你身边现在就有10块钱，但是在山的那边有20块钱，回报会捕捉身边的这10块钱。计算回报公示如下图所示，第一项是初始状态的奖励，然后依次相加直到终端态。其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>γ</mi></mrow><annotation encoding=\"application/x-tex\">\\gamma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span></span>是折扣因子，他是小于1的，通常取很接近1 的值如0.99等。正是折扣因子的存在导致了回报会更倾向于离得近的奖励。<br>\n<img src=\"/img/24060302.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>假设现在一直向左走，从不同状态出发得到的回报用红色的字在上边注明了。需要注意的是如果从状态6开始，那么他的起始状态就是终端态，因此计算回报时只有一项，就是该终端态的奖励，也就是40.类似的，一直向右走的话，各状态作为起点的回报如图所示。当然如果在不同的初始状态选择不同的动作，那就可以得到第三个表格中的回报。<br>\n<img src=\"/img/24060303.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>决策学习算法的策略</strong></em><br>\n决策学习的目标是构建一个可以将<em>状态s</em>映射为<em>行动a</em>的Policy函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\pi(s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span>,该函数会告诉我们为了得到最大的回报，每一步应该怎么做。如对于之前的例子中的最后一行，policy函数作为不同状态的函数会得到相应的行动。<br>\n<img src=\"/img/24060304.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>看一下强化学习中的不同参数在不同应用中可以对应什么。<br>\n<img src=\"/img/24060305.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>这种强化学习应用程序的形式可以称为<em>马尔科夫决策过程Markov Decision Precess(MDP)</em>.从之前的例子中可以得知，MDP说明了未来只取决于当前的状态，而不取决于是怎么到当前状态的。MDP也可以用下面这种图来解释：Agent是我们要操作的东西，经过Policy函数后得到了动作a，做了a之后会发生一些变化，比如我们的位置。基于这些变化，我们可以看到当前的状态以及奖励。<br>\n<img src=\"/img/24060306.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"State-action-value-函数定义\">State-action value 函数定义</h2>\n<p>状态动作做价值函数也可以叫Q函数，它以当前的状态s和当前要采取的行动a作为参数。当在状态s做了a动作之后，到达了一个新的状态，在这个新的状态下有最大的回报的路径即最优策略。Q函数返回的是从最初的状态s到新的状态再走最优策略的总回报。如对于状态2，若首先向右走到达状态3，根据之前计算过的最优策略，从状态3开始的最优解是往左走，于是便一路向左，这条路径的回报是12.5;若往左走，则直接到达了终端状态，回报是50.这样就可以计算出所有状态的Q值。</p>\n<blockquote>\n<p>这里感觉比较奇怪，因为策略函数已经计算出了最大回报的路径是什么，为什么还要这个函数。比如在状态2的时候，明明知道了最优解是往左走，为什么还要计算一下往右一步，然后再走最优解。</p>\n</blockquote>\n<img src=\"/img/24060400.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<p>对比Q函数和策略函数，发现每个状态的策略函数的回报就是Q函数取不同动作回报的最大值，这也给策略函数的计算提供了一种方法。Q函数也叫Q*或者最优Q函数或状态动作价值函数。<br>\n<img src=\"/img/24060401.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"贝尔曼方程\">贝尔曼方程</h2>\n<p>贝尔曼方程可以用来得到Q函数。刚查了一下，贝尔曼方程又较动态规划方程，OK,fine.挺希望有一天术语能统一一点，机器学习好像挺多概念就是数学概念换个叫法。<br>\n<img src=\"/img/24060402.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>在看几个，注意的是若起始状态s是终端态，那么他不会采取行动，于是Q函数就只剩下第一项了。<br>\n<img src=\"/img/24060403.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>回报可以分为两部分，一部分是马上能得到的回报，另一部分就是走到下一个状态后能得到的最佳回报，这也是贝尔曼方程要说明的主要事情。<br>\n<img src=\"/img/24060404.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24060405.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"随机环境random-stochastic-environment\">随机环境random(stochastic) environment</h2>\n<p>实际工作中，机器人可能不会完全按照我们发出的指令执行。比如我们让他往右，但是他轮胎打滑了没有往右等，这就是随机环境。比如火星探测器的例子中，若初始状态在4号，现在你让他往左走，但是由于各种原因，比如风太大了，轮胎打滑了等等，最终导致了他有90%的概率往左走到3但是还有10%的概率往右走到5。考虑到这些随机的情况，就引出了<em>期望回报</em>。期望回报就是将一个设序列重复执行多次以计算他得到回报的平均值。所以，强化学习的目标到现在就变成了找到一个策略函数Policy()以得到最大的期望回报。同样，贝尔曼方程也要改进一下，加上期望。<br>\n<img src=\"/img/24060406.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24060407.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>连续状态空间</strong></em><br>\n火星他测器的例子中，探测器只在一些离散的位置，但实际应用中状态往往是连续的，并且一个物体的状态往往是多维的，比如x坐标，y坐标，x方向速度，y方向速度等。<br>\n<img src=\"/img/24060500.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"登月器\">登月器</h2>\n<img src=\"/img/24060501.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24060502.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<p>强化学习的主要任务是训练一个神经网络来逼近Q函数。登月器中，用于训练神经网络的输入可以由两部分组成，一个是登月器的状态，另一个是可以采取的行动，二者组合成一个向量作为输入。其中动作a有4个可能，什么都不做、向左点火、向右点火和向下点火来控制登月器的位置，以确保他能落在目标位置。将特征a经过one-hot编码得到4个二进制编码，在拼接上状态作为整体的输入向量。如当登月器在一个状态后，经过神经网络的计算，发现Q(s,main)最高，mian表示向下点火，那么登月器便会向下点火。<br>\n<img src=\"/img/24060503.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>那现在问题就是怎么样训练这个神经网络。我们可以通过贝尔曼方程得到一些训练集x和y，然后用监督学习来训练神经网络。为了得到训练集，我们可以让登月器随即采取行动，这样可以得到很多不同的元组(s,a,R(s),s’).根据s和a就可以得到输入x,根据R(s)和s’就可以得到Q(s,a)也就是y,于是就有了第一个数据集。其中贝尔曼方程的第一项就是R(s),而第二项需要的参数s’需要利用下一个元组的信息。在最初的时候，我们并不知道Q函数是什么，但是可以在最初的时候假设一个Q函数。<br>\n<img src=\"/img/24060504.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>完整的训练过程，这个算法叫做DQ(Deep Q-Network)N算法：<br>\n<img src=\"/img/24060505.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"算法改进\">算法改进</h2>\n<p><em><strong>改进神经网络架构</strong></em><br>\n之前的架构中，将动作a作为参数传给神经网络，于是对于同一个位置，神经网路一次只能计算对于该位置的一个动作。现在对输输入和输出做出改变，动作不作为输入，而在输出层中设置4个神经元，分别代表了不同动作的Q值，于是这样就可以一次计算出同一状态的4个不同动作的Q值。<br>\n<img src=\"/img/24060506.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>贪婪策略</strong></em><br>\n当神经网络正在学习的时候，以前的方式中，他在每个状态总是采取能获得最到回报的动作。但是由于最初的Q函数是随机的，他有可能随机到一种情况，导致某个动作永远会使Q函数很低。比如Q(s,main)总是比较低，main表示向下开火，于是最终学到的Q函数就永远不会向下开火。为了避免这种情况，我们可以不必每次都选择能使回报最大的动作，当然应该尽量选择这个，只不过应该给他个权重像0.95，剩下的0.05权重让模型选择一个随机的动作，这个选择随机动作的做法被称为“探索”。这个策略就是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>-greedy policy，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>=0.05.<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>-greedy policy常见的做法是以一个比较高的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>开始，逐步降低其值。比如登月器中，甚至可以将<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>初始化为1，然后逐渐减小到0.01.<br>\n<img src=\"/img/24060600.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>小批量和软更新</strong></em><br>\n小批量不但能提高强化学习的性能，也能加速监督学习，像提高一些神经网络的训练或者线性回归模型的训练速度。<br>\n在监督学习中，我们使用梯度下降算法来训练参数的时候，每次梯度下降都会遍历一边所有数据集，当数据集很大的时候，这会导致梯度下降的很慢。小批量做的是取大数据集的一个小子集，每次用这些小子集更新参数而不是遍历整个数据集，这样速度就会快不少。其中每次迭代使用的子集可以是不同的，可以将整个数据集划分为n个不同的子集，或者有一些交集的子集，然后用这些子集分别进行每一次迭代。<br>\n<img src=\"/img/24060601.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>普通的梯度下降中，每次迭代都会使代价函数减少。而小批量梯度下降时，由于每次使用的数据集只是一个局部的缘故，他可能在单次下降过程中效果不太好甚至有时会增加代价函数，但是该算法的总体趋势仍然是向着全局最优的地方。所以在有大量数据集的时候，往往更多地使用小批量梯度下降或者Adam算法而不是最普通的梯度下降，因为他们的速度更快且最终的效果也不错。同样的在登月器的例子中，让登月器先随机获取10000个数据样本以后，可以不全部使用这些样本，而是一次使用1000个样本这样。<br>\n<img src=\"/img/24060602.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>在登月器的算法中，最后我们将Q设置为Qnew,这里有可能发生的一个情况是新训练的Qnew可能性能还不如最开始的Q函数，<em>软更新</em>可以防止这样的事情发生。对于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>e</mi><mi>t</mi><mi>Q</mi><mo>=</mo><msub><mi>Q</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">Set Q = Q_{new}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">tQ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,其实就是将参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mtext>、</mtext><msub><mi>B</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">W_{new}、B_{new}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>分别赋给了旧的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mtext>、</mtext><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">W、B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>.其实我们可以使用<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mo>=</mo><mn>0.01</mn><msub><mi>W</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>+</mo><mn>0.99</mn><mi>W</mi><mtext>、</mtext><mi>B</mi><mo>=</mo><mn>0.01</mn><msub><mi>B</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>+</mo><mn>0.99</mn><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">W = 0.01W_{new} + 0.99W、B = 0.01B_{new} + 0.99B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\">0.01</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">0.99</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\">0.01</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">0.99</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>这样的更新方式。0.01和0.99是<em>超参数</em>，二者的和为1，他们控制了参数像新的参数靠拢的程度。如当只给新的参数0.01权重而给旧的参数0.99权重的时候，说明参数只是做了小幅度的更新，他还是更靠近旧的参数。这种做法可以让强化学习算法收敛的更可靠。</p>\n<h1>一些问题</h1>\n<p>关于K-means算法的第二步，选择样本的平均值作为新的质点的位置，那么此时每个样本与质点的差的平方的和平均值最小的数学证明。（当质点这么取值的时候实际上这个式子就变成方差了对吧）</p>\n<h2 id=\"协同过滤算法使新用户的评分是0\">协同过滤算法使新用户的评分是0</h2>\n<p>使用协同过滤算法训练模型：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext mathvariant=\"bold\">min</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msup><mi>w</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msup><mi>w</mi><mrow><mo stretchy=\"false\">(</mo><msub><mi>n</mi><mi>u</mi></msub><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><msub><mi>n</mi><mi>u</mi></msub><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><msub><mi>n</mi><mi>m</mi></msub><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mstyle></mtd></mtr></mtable><mspace width=\"2em\"/><mfrac><mn>1</mn><mn>2</mn></mfrac><munder><mo>∑</mo><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mi>r</mi><mo stretchy=\"false\">(</mo><mi>j</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn></mrow></munder><mo stretchy=\"false\">(</mo><msup><mi>w</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo separator=\"true\">⋅</mo><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>+</mo><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mfrac><mi>λ</mi><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>n</mi><mi>u</mi></msub></munderover><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mfrac><mi>λ</mi><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>n</mi><mi>m</mi></msub></munderover><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msubsup><mi>x</mi><mi>k</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\begin{matrix}\n \\textbf{min}\\\\\n w^{(1)},...,w^{(n_u)}\\\\\n b^{(1)},...,b^{(n_u)}\\\\\n x^{(1)},...,x^{(n_m)}\\\\\n\\end{matrix}\n \\qquad \\frac{1}{2} \\sum_{(i,j):r(j,j)=1}(w^{(j)}·x^{(i)}+b^{(j)}-y^{(i,j)})^2 + \\frac{\\lambda}{2} \\sum_{j=1}^{n_u}\\sum_{k=1}^{n}(w_k^{(j)})^2 + \\frac{\\lambda}{2} \\sum_{i=1}^{n_m}\\sum_{k=1}^{n}(x_k^{(i)})^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.944em;vertical-align:-2.222em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.722em;\"><span style=\"top:-4.882em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord textbf\">min</span></span></span></span><span style=\"top:-3.634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.386em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-1.138em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.222em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.05em;\"><span style=\"top:-1.809em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span><span class=\"mrel mtight\">:</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.516em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0213em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.188em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0763em;vertical-align:-1.4138em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6625em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3111em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4138em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8479em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3021em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9646em;vertical-align:-1.3021em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6625em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3111em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8479em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3021em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>我们的目的是使代价函数尽可能小。对于新用户，他为对任何电影做出评价，因此代价函数的第一项是0,在此基础上，若想使整体式子变小，明显w的取值是0.类似的，若还对b做了正则化，则b也为0,所以新用户在该模型上对任何影片的预测分数都为0,不便于推荐。<br>\n刚写上边这几行的时候又想到在监督学习中，这几项也都是平放项，要使该式子最小岂不是也应该让w为0吗？稍微一想就清楚了，在一般的监督学习中，w的值会影响到无正则化的代价函数，也就是式子的第一项，因此两者合作才能得到最小的代价函数。而协同过滤算法中的新用户无第一项，决定整个式子的只有正则化项，因此w才为0.</p>\n<h2 id=\"协同过滤算法不适应密集层\">协同过滤算法不适应密集层</h2>\n<p>videop122 min10左右，Andrew说协同过滤算法不能适应密集层那一段，没明白。他说了需要自己实现代价函数，之前不也是自己实现代价函数吗。可能是我记错了，以后看一下tensorflow密集层的代价函数相关部分是怎么做的，和协同过滤算法有什么区别。</p>\n<h2 id=\"协同过滤算法和内容过滤算法的区别\">协同过滤算法和内容过滤算法的区别</h2>\n<p>on Andrew’s slide:<br>\nCollaborative filtering:<br>\nRecommend items to you based on rating of users w·o gave similar rating as you.<br>\nContent-based filtering:<br>\nRecommeng items to you based on features of users and item to find good match.</p>\n<p>查找一些资料，发现协同过滤算法分为用户协同过滤和物品协同过滤。Andrew说的应该是用户协同过滤。但是实现方式中是一起训练w、b和x,没看出来找相似用户这个过程。</p>\n<h2 id=\"Q函数\">Q函数</h2>\n<p>Q函数的作用没太清楚，他能计算出策略函数，但他采取行动走的需要时最优解，这最优解如果不是通过策略函数找到的，那是怎么找到的。</p>\n","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":"<p>同一系列的<a href=\"https://b-white07.github.io/posts/acf03113.html\">监督学习</a>和<a href=\"https://b-white07.github.io/posts/1ca572.html\">神经网络</a>相关笔记点击查看</p>\n<h1>无监督学习</h1>\n<p>监督学习和无监督学习的对比在<a href=\"https://b-white07.github.io/posts/acf03113.html\">监督学习</a>开篇处已经介绍，此处不再赘述。</p>\n<h2 id=\"聚类算法Clustering\">聚类算法Clustering</h2>\n<p>聚类就是对于输入特征x,算法会根据一些特征自动将其归为几类。与监督学习的数据集不同，这些数据集是没有y标签的。<br>\n<img src=\"/img/24050800.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"K-means聚类算法\">K-means聚类算法</h2>\n<p>假设现在你需要算法寻找一个数据集中的两个集群，K-means算法做的第一件事是随机猜测这两个集群的中心在哪里，集群的中心称为<strong>集群质心</strong>，集群质心与输入特征x具有<strong>相同的维度</strong>。然后算法会遍历数据集中的每个数据，看一下他们与两个集群质心的差距，离哪个质心更近，就讲该数据归为哪一类。下图中❌和蓝叉就是算法最开始随机猜的两个值。<br>\n<img src=\"/img/24050801.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>然后算法会计算红色集群的平均值，然后将最初预测的红色质心移动到红色集群的平均值处。同样的方式处理蓝色质心。<br>\n然后在新的质心基础上，算法会重复第一步，遍历数据集中的每个节点，再次计算他们对于质心的位置，如果发现原来被划分为红色集群的数据现在离蓝色更近，那么将该数据划分到蓝色集群。<br>\n<img src=\"/img/24050802.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24050803.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>然后再次计算新的集群的平均值，然后移动质心。重复执行这两个步骤，最后会导致质心的位置不再有变化，此时K-means算法就收敛了。<br>\n<img src=\"/img/24050804.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>实现</strong></em><br>\n计算数据和质心的靠近程度其实就是计算两者的距离<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><msup><mi>x</mi><mi>i</mi></msup><mo>−</mo><msub><mi>μ</mi><mi>k</mi></msub><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">||x^i - \\mu _k||</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0747em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣∣</span></span></span></span>，也称为<strong>L2范数</strong>。在计算一个数据<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>与每一个质心<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>μ</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mu_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>的距离以后，选择使距离最小的k,将其设置为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>c</mi><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">c^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span>的值，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>c</mi><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">c^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span>记录了一个索引，该索引记录了当前数据与哪个质心离得最近。当计算距离的时候，其实计算其平方会方便一些，而且效果是一样的。然后计算不同集群平均值即可得到不同集群新的质心。<br>\n<img src=\"/img/24050805.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>有一个极端的情况：在分配集群的时候，没有任何一个数据属于一个质心，此时可以删掉这个质心，这也就会减少一个集群。如果不希望集群的数量减少，那么可以试一下重新随机一个质心位置，看看能不能将数据分配给他。<br>\n对于没有明显被划分为不同集群的数据集，K-means算法也可以较好的工作。比如衣服大小与人身高体重的关系，往往是一组连续的没有明显分组的数据，在这个数据集上使用K-means算法，依旧会得到比如k=3的3个集群，这三个集群的质心可以作为小、中、大号的代表。<br>\n<img src=\"/img/24050806.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>代价函数</strong></em><br>\nK-means算法的损失函数（失真函数distortion funciton）定义如下，他其实就是在找合适的质点，使得所有数据与其质点距离平方和的平均值最小。<br>\n<img src=\"/img/24050807.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n以之前的例子为例，此时的状态，该模型的代价就是每一个蓝色的数据与蓝色叉距离的平方与每一个红色数据与红叉的距离的平方的和的平均值。<br>\n<img src=\"/img/24050808.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n可以看到，该代价函数是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">C^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>μ</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mu_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>的函数，每个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>C</mi><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">C^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span>与<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">x^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span>是一一对应的，因为它代表了<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">x^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span>是属于哪个质心的；而<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>μ</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\mu_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>本身就是质心的位置，所以这个代价函数会不断调整数据属于哪个集群以及不同质点的位置。</p>\n<p>进一步来看一下K-means算法的每一步：<br>\n第一步是在将数据分配给不同的质心，此时质心是保持不动的。观察代价函数，若想让代价函数变小，很明显应该减少二者之间的距离，而K-means算法也正是这么做的，他将数据分配给了离自己近的质心。<br>\n第二步是数据已经分配好了，调整质心的位置。K-means算法做的是将新的质心位置取在集群的平均值的位置，事实上，这种做法会使所有样本的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><msup><mi>x</mi><mi>i</mi></msup><mo>−</mo><msubsup><mi>μ</mi><mi>c</mi><mi>i</mi></msubsup><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">||x^i-\\mu_c^i||</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0747em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0747em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-2.453em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">c</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣∣</span></span></span></span>和的平均值最小，也就是减少了代价函数。<br>\n也就是说K-means算法每一步都在降低他的代价函数，所以万一出现了代价函数升高的情况，意味着你的程序有Bug了。<br>\n<img src=\"/img/24050809.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>质心初值的随机选择</strong></em><br>\n之前说过K-means算法的第一步是随机选择一个质心，常见的做法是如果你需要k个质心，那么可以从数据集中随机选择k个数据作为初始的质心。<br>\n对于质心不同的初值，K-means算法在收敛后可能得到不同的聚类，如下图所示不同的初值得到了3个聚类。<br>\n<img src=\"/img/24050900.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n因此为了是算法得到一个不错的效果，通常需要多次选择随机的初值，然后分别计算这些模型的代价函数，然后选择代价函数最低的模型。<br>\n<img src=\"/img/24050901.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>质心（聚类）数量k的选择</strong></em><br>\n有一个选择k的方法是叫肘算法（Elbow method），不得不说名字太难听了，还不如以发明者的名字命名。该方法将代价函数J()作为K的函数，观察J()的变化。如果发现了一点处函数的变化幅度发生突变，那么就选择该点处的K值。如下图中，K=3之前J()都在快速下降，但是k=3之后J()下降速度明显变缓，那么此时就可以选择K=3.但是J()往往也会想右图那样，找不到这样的K值。此时也不能找使J()最小的K值，因为随着K的增大，J()总是在减小。所以这个方法感觉不太行。<br>\n<img src=\"/img/24050902.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>另外一种方法是权衡一下不同k值的效果，看看哪个更符合当前需求。比如在衣服尺码的数据集中，可以将k取为3，这样会得到三个聚类，这三个聚类可以分别代表小号，中号和大号。当然也可以让k=5，这样就得到了5个聚类，那么就可以分别代表超小、小、中、大、超大号。将衣服分为更多的类别，会增加制作成本，但是衣服会更贴合消费者的体型。所以在贴合消费者体型和制作成本之间，要做出一个权衡，以选择合适的k。<br>\n<img src=\"/img/24050903.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"异常检测Anomaly-detection\">异常检测Anomaly detection</h2>\n<p>异常检测就是根据已有的数据集，判断新的数据与已有数据的相似性，以此来检测新的数据是否有异常。<br>\n<img src=\"/img/24051200.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n异常检测最常见的方法是<strong>密度估计（density estimation）</strong>。该算法首先会建立一个关于特征x的概率模型<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(x)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span>，该模型的作用是检测当前特征的不同取值的概率。如下图最小的椭圆中的取值概率最高，向外慢慢降低。然后用该模型预测新数据，得到新数据的概率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>P</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mrow><mi>t</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">P(x_{test})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2806em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">t</span><span class=\"mord mathnormal mtight\">es</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>,如果得到的概率小于某个阈值，那么就认为该数据有异常。<br>\n<img src=\"/img/24051201.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>异常检测的应用很广泛，比如制造业中像检测引擎、欺诈检测、黑客攻击等。<br>\n<img src=\"/img/24051202.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>高斯正态分布</strong></em><br>\n为了应用异常检测，需要了解高斯正态分布。首先了解如何利用高斯分布实现<strong>单特征</strong>的异常检测。<br>\n高斯分布中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span>是期望，也就是这组数据的平均数；<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span>是标准差，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\sigma^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8141em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>是方差，描述了这组数据的分散程度。<br>\n<img src=\"/img/24051300.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>高斯曲线的方程为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt><mi>σ</mi></mrow></mfrac><msup><mi>e</mi><mfrac><mrow><mo>−</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo>−</mo><mi>μ</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac></msup></mrow><annotation encoding=\"application/x-tex\">p(x)=\\frac{1}{\\sqrt {2\\pi} \\sigma}e^{\\frac{-(x-\\mu)^2}{2 \\sigma^2}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8671em;vertical-align:-0.538em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.551em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord sqrt mtight\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9128em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mtight\" style=\"padding-left:0.833em;\"><span class=\"mord mtight\">2</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">π</span></span></span><span style=\"top:-2.8728em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail mtight\" style=\"min-width:0.853em;height:1.08em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1272em;\"><span></span></span></span></span></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.538em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3291em;\"><span style=\"top:-3.4534em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mopen nulldelimiter sizing reset-size3 size6\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.251em;\"><span style=\"top:-2.5062em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9384em;\"><span style=\"top:-2.9384em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.2255em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line mtight\" style=\"border-bottom-width:0.049em;\"></span></span><span style=\"top:-3.5021em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">x</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">μ</span><span class=\"mclose mtight\"><span class=\"mclose mtight\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0484em;\"><span style=\"top:-3.0484em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4938em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter sizing reset-size3 size6\"></span></span></span></span></span></span></span></span></span></span></span></span></span>,其曲线与x轴围成的面积恒为1，因此对于不同的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi><mtext>、</mtext><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu、\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">μ</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span>该图像有如下变化：<br>\n<img src=\"/img/24051301.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>根据数据集可以计算出<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi><mtext>、</mtext><mi>σ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu、\\sigma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">μ</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span></span></span></span>，然后就得到了相应的高斯分布曲线。在此基础上，对于一个新的输入x，可以计算他的p(x),如果概率较高，那就认为这个数据没什么异常；相反如果这个值较低，那么就认为这个数据可能出现了异常。这了的数据只能是单特征，即x是个数而不是向量。<br>\n<img src=\"/img/24051302.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>数据集x为向量时，可以依靠每个特征的p(x)来计算总的概率：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mo>=</mo><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">;</mo><msub><mi>μ</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msubsup><mi>σ</mi><mn>1</mn><mn>2</mn></msubsup><mo stretchy=\"false\">)</mo><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">;</mo><msub><mi>μ</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msubsup><mi>σ</mi><mn>2</mn><mn>2</mn></msubsup><mo stretchy=\"false\">)</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mo separator=\"true\">⋅</mo><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo separator=\"true\">;</mo><msub><mi>μ</mi><mi>n</mi></msub><mo separator=\"true\">,</mo><msubsup><mi>σ</mi><mi>n</mi><mn>2</mn></msubsup><mo stretchy=\"false\">)</mo><mo>=</mo><msubsup><mo>∏</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mi>p</mi><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mi>j</mi></msub><mo separator=\"true\">;</mo><msub><mi>μ</mi><mi>j</mi></msub><mo separator=\"true\">,</mo><msubsup><mi>σ</mi><mi>j</mi><mn>2</mn></msubsup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">p(\\vec{x}) = p(x_1;\\mu_1,\\sigma_1^2)p(x_2;\\mu_2,\\sigma_2^2)···p(x_n;\\mu_n,\\sigma_n^2) = \\prod_{j=1}^{n}p(x_j;\\mu_j,\\sigma_j^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0641em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.4519em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2481em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.4519em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2481em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">⋅⋅⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2499em;vertical-align:-0.4358em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8043em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">;</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">σ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-2.4413em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3948em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><br>\n<img src=\"/img/24051303.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>多特征的异常检测检测算法，n不是数据集的数量而是可能导致异常的特征：<br>\n<img src=\"/img/24051304.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24051305.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"异常检测系统的评估\">异常检测系统的评估</h2>\n<p><strong>实数评估</strong>可以用于评估异常检测系统。通过实数评估，可以方便的选择特征x或者阈值<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>之类的参数。<br>\n在无监督学习中，数据集是没有标签的，但是我们可以假设数据集有标签。如飞机发动机的数据集中，可以假设正常的发动机对应于y=0,异常的发动机对应于y=1.通常来讲异常发动机的数量是远小于正常发动机的数量的对吧。然后将数据集划分为三个部分，一部分用于训练模型，一部分用于调整参数，一部分用于评估模型。其中用来训练模型的数据集选用正常的发动机的数据，虽说是用正常的发动机训练，但实际上数据集中若参杂了一些异常的发动机也没关系。训练好模型以后，划分出一个交叉验证集和一个测试集，通过交叉验证集的结果来对模型进行微调，最后通过测试集来评估该模型的表现。这其实和之前的评估神经网络步骤很类似。<br>\n<img src=\"/img/24051400.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>由于在异常检测的应用中，异常的例子往往很少，所以有时也可以不用单独划分出一个测试集。当然这样对于该模型的泛化评估就会差一些。<br>\n<img src=\"/img/24051401.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>其实异常检测的数据集，正常的和异常的数量差别很大，如果给他们加上标签，那么这些数据集就是深度学习中，数据集偏斜很大的情况，在这种情况下，可以通过精确率、召回率、F1score这些参数来评估该模型。<br>\n<img src=\"/img/24051402.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"异常检测-VS-监督学习\">异常检测 VS 监督学习</h2>\n<p>上边提到了给无监督学习的数据集假设标签，那其实就变成了监督学习，那二者的区别有什么呢？当正面的数据集很少，负面数据集很多的时候，异常检测会比较合适；当正面和负面数据都很多的时候，监督学习会比较合适。<br>\n当正面数据很少的时候，虽然二者都可以使用，但是二者看待数据集的方式截然不同。对于异常检测，负面数据是正常的情况，也是多数情况。那对于一个新的数据是否正常的判断的依据是他和负面数据的不同的程度，<strong>他是找不同</strong>，他不指望通过几个异常类型就能囊括所有的异常。比如诈骗，类型可以说层出不穷，诈骗er们天天在研究新的诈骗类型，如果指望查看信息诈骗的特征与以往就诈骗特征的相似程度，那诈骗er们就没饭吃了，他们在时时刻刻创新啊！而对于监督学习，他做的是通过大量的相应标签的数据，将它归为正面数据。对于新的数据，他看的是新的数据与以往已有标签的数据的相同的程度，<strong>他是找相同</strong>，像垃圾邮件，手段就那么些，改改数字，发发钓鱼网站，所以找相同更容易奏效。<br>\n<img src=\"/img/24051403.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24051404.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"特征选择\">特征选择</h2>\n<p>异常检测中，提供的特征需要是满足高斯分布的。在使用特征之前，可以绘制一下不同特征的曲线，如果不满足高斯分布，那么可以将特征做一些变形使他满足高斯分布。然后用变形过后的特征训练模型，交叉验证和测试。<br>\n<img src=\"/img/24051500.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>有时，异常的数据经过p(x)后表现的和正常的数据差不多大，此时该模型对于异常的判断就不太理想，此时可以分析一下异常的数据，看看能否通过添加新的特征，该特征对于异常的数据和对于正常的数据有比较大的差异，这样就可以使该模型得到更准确的结果。<br>\n<img src=\"/img/24051501.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>比如检测数据中心的电脑是否有异常情况，通常会用内存使用率、每秒访问磁盘次数、CPU负载、网络流量等指标来检测一个计算机是否异常。在处理不同业务时，对不同部件的使用情况也许会出现多种合理的不同情况，比如CPU负载高或低都正常，网络流量高或低也都正常，但是若在你的业务下，CPU高负载而网络流量低负载或者CPU低负载而网络流量高负载的情况不太会出现，那么此时可以新建一个特征为CPU负载和网络流量的比值，这个新特征<strong>既不会影响正常的数据，又能检测出异常数据</strong>。<br>\n<img src=\"/img/24051502.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h1>推荐系统</h1>\n<p>推荐系统就是我想的那样，只是需要了解下图中的几个术语，其中问号表示该用户没有对该电影打分：<br>\n<img src=\"/img/24051700.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"使用基本线性回归\">使用基本线性回归</h2>\n<p>假设我们已经有了电影的特征，我们可以使用如下方式来预测用户对没看过的电影的打分，其中n表示特征的数量，w和b的上标表示是第几个用户的参数。这看起来很像线性回归：<br>\n<img src=\"/img/24051701.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>代价函数和线性回归模型也很类似，其中的正则化项，可以将分母的m去掉，m代表了用户评过分的电影的数量，是个常数，去掉它不影响参数w的取值：<br>\n<img src=\"/img/24051702.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>上述是在训练单个用户的参数，可以将代价函数稍作修改，将所有用户的参数一起训练：<br>\n<img src=\"/img/24051703.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"协同过滤算法collaborative-filter\">协同过滤算法collaborative filter</h2>\n<p>如果我们事先知道电影的特征x，则可以直接使用线性回归模型。如果我们事先不知道电影的特征，就无法使用线性回归。对于这种情况，<strong>假设</strong>我们现在已经有了每个用户的线性回归模型，即不同用户的<strong>w和b</strong>已知，我们又同时<strong>拥有不同用户</strong>对同一部电影的打分，而同一部电影的两个特征必然是一样的，因此我们可以根据不同用户的参数以及他们的打分情况来推测一下这部电影的不同特征的值：<br>\n<img src=\"/img/24051704.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>具体的实现其实就是将代价函数作为特征x的函数，同样的可以一个个训练x，也可以一次性训练所有电影的特征x：<br>\n<img src=\"/img/24051705.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>到此为止，我们分别在已知特征x的情况下训练了参数w和b，和已知参数w和b的情况下训练了电影特征x.<strong>协同过滤算法</strong>就是将二者结合起来，这样就得到了关于w、b、x的代价函数。注意到对于参数w的求和和对于特征x的求和虽然看起来有差别，但是实际上计算的项数都是一样的，他们的数量都是所有被用户打过分的电影的数量，只是解释起来的方式不太相同而已。<br>\n<img src=\"/img/24051706.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>同样用梯度下降算法确定参数：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mtable rowspacing=\"0.25em\" columnalign=\"right left right\" columnspacing=\"0em 1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>repeat until convergence:</mtext><mtext>  </mtext><mo stretchy=\"false\">{</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><msubsup><mi>w</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><msubsup><mi>w</mi><mi>i</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mi>w</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mtext>  </mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>=</mo><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mi>w</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><msubsup><mi>x</mi><mi>k</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>=</mo><msubsup><mi>x</mi><mi>k</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mi>w</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>x</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msubsup><mi>x</mi><mi>k</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"true\"><mrow><mrow></mrow><mo stretchy=\"false\">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding=\"application/x-tex\">\\begin{align*}\n&amp;\\text{repeat until convergence:} \\; \\lbrace \\\\\n&amp;  \\; \\; \\;w_i^{(j)} = w_i^{(j)} -  \\alpha \\frac{\\partial J(w,b,x)}{\\partial w_j}  \\; &amp; \\\\ \n&amp;  \\; \\; \\;  \\; \\;b^{(j)} = b^{(j)} -  \\alpha \\frac{\\partial J(w,b,x)}{\\partial b^{(j)}} \\\\\n&amp;  \\; \\; \\;  \\; \\;x_k^{(i)} = x_k^{(i)} -  \\alpha \\frac{\\partial J(w,b,x)}{\\partial x_k^{(i)}} \\\\\n&amp;\\rbrace\n\\end{align*}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:11.0932em;vertical-align:-5.2966em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-r\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.7966em;\"><span style=\"top:-8.3836em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-6.2966em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-3.5975em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:-1.1665em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span><span style=\"top:1.2096em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.2966em;\"><span></span></span></span></span></span><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.7966em;\"><span style=\"top:-8.3836em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mord text\"><span class=\"mord\">repeat until convergence:</span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mopen\">{</span></span></span><span style=\"top:-6.2966em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9721em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span></span><span style=\"top:-3.5975em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.296em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.814em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.704em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-1.1665em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.11em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.2748em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.7218em;\"><span class=\"pstrut\" style=\"height:3.0448em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2361em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:1.2096em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"><span class=\"mord\"></span><span class=\"mclose\">}</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:5.2966em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:1em;\"></span><span class=\"col-align-r\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:4.2966em;\"><span style=\"top:-6.2966em;\"><span class=\"pstrut\" style=\"height:3.427em;\"></span><span class=\"mord\"></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<h2 id=\"二进制标签\">二进制标签</h2>\n<p>相对于给电影打分，更多的推荐算法是二进制标签的，像喜欢或是不喜欢这样的。于是预测任务就从之前的预测分数变成了预测用户是否喜欢，进一步，这其实就是从线性回归变成了逻辑回归，代价函数也和逻辑回归的代价函数很类似：<br>\n<img src=\"/img/24051707.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24051708.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"均值归一化mean-normalization\">均值归一化mean normalization</h2>\n<p>之前的例子中，所有用户都已经评价过了一个或几个电影，那么对于新注册的用户，他没有对任何电影进行评分，因此对他执行协同过滤算法的话，会导致他对所有的电影的评分都是0.也就是无法完成给新用户推荐电影，很明显实际上不应该这样。<br>\n<img src=\"/img/24051800.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><strong>均值归一化</strong>可以解决这个问题。现在将用户对不同电影的打分组成一个矩阵A，A的每一行代表了不同用户对同一电影的打分。向量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span>的每一项表示表示用户对一个电影打分的平均值。用矩阵A减去<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span>得到矩阵B，然后用矩阵B来学习新的参数w、b、x。学到新模型后，为了使预测保持在合理的范围之内，如评分非负，最终的预测结果需要在模型的预测基础之上加上对应电影的平均分数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>μ</mi></mrow><annotation encoding=\"application/x-tex\">\\mu</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">μ</span></span></span></span>.比如预测新用户对于第一个电影的评分，学习到的参数w、b为0，于是模型的预测打分是0,然后加上<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>μ</mi><mn>1</mn></msub><mo>=</mo><mn>2.5</mn></mrow><annotation encoding=\"application/x-tex\">\\mu_1=2.5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">μ</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">2.5</span></span></span></span>,于是得到了最终的结果是2.5.这个结果比之前的0看起来更有说服力一些，他其实<strong>反映了其他用户对该电影的平均打分情况</strong>。<br>\n观察矩阵B的每一行，发现他们的均值为0，也就是上述算法其实将矩阵A的每一行都均值化为0.当有新用户注册时，想预测该用户对不同电影的评分用这种方法是不错的。但是还有另外一种情况，就是上映了一个新的电影，没有或者几乎没有用户对他进行过评分，这个时候想要预估用户对该电影的评分，可以将矩阵A的每一列均值化为0.<br>\n<img src=\"/img/24051801.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"tensorflow实现协同过滤\">tensorflow实现协同过滤</h2>\n<p>两图胜千言<br>\n<img src=\"/img/24051802.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24051803.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"寻找相关特征\">寻找相关特征</h2>\n<p>下面的方法可以找到和目标比较接近的一些东西，其实和代价函数很类似，只不过目标y换了一下而已：<br>\n<img src=\"/img/24051804.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n协同过滤算法的局限性，图片中的第二个方面side information没看明白，他的意思是获取这些信息比较难吗？<br>\n<img src=\"/img/24051805.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"内容过滤算法content-based-filtering\">内容过滤算法content-based filtering</h2>\n<p>内容过滤算法是根据用户特征和电影特征来推荐影片。用户和影片的特征可能是不同维度的，像用户有10个特征二影片有15个特征这样，所以向量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>x</mi><mi>u</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">x_u^{(j)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1614em;vertical-align:-0.1166em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1166em;\"><span></span></span></span></span></span></span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>x</mi><mi>m</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">x_m^{(i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1614em;vertical-align:-0.1166em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1166em;\"><span></span></span></span></span></span></span></span></span></span>的大小是可以不一样的。<br>\n<img src=\"/img/24052800.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>在协同过滤算法中，使用<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>w</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo separator=\"true\">⋅</mo><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>+</mo><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">w^{(j)}·x^{(i)}+b^{(j)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9713em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span>来预测用户对电影的评分。在内容过滤算法中，需要使用<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>v</mi><mi>u</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">v_u^{(j)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1614em;vertical-align:-0.1166em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1166em;\"><span></span></span></span></span></span></span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mi>v</mi><mi>m</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">v_m^{(i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1614em;vertical-align:-0.1166em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.5834em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1166em;\"><span></span></span></span></span></span></span></span></span></span>，他们分别是通过<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>w</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">w^{(j)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span>和<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">x^{(i)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span>计算而来，代表了用户j和电影i的特征的向量。而<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">b^{(j)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span>项可以舍弃，这不会有什么影响。然后两个v向量的点积用来估计用户j对电影i的评分。虽然v是由x计算而来，而x的维度可以不同，但是v的维度必须相同。<br>\n<img src=\"/img/24052801.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>计算<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>u</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>and<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></strong></em><br>\n可以分别使用两个神经网络来计算<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>u</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>and<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,然后用<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>u</mi></msub><mo separator=\"true\">⋅</mo><msub><mi>v</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_u·v_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5945em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>来预测用户对电影的评分。或者若想要得到一个二元分类的结果，将<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>u</mi></msub><mo separator=\"true\">⋅</mo><msub><mi>v</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_u·v_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5945em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>作为参数传递给g()即可。注意到用户网络和电影网络输入层中的神经元数量不同，这代表了用户和电影的特征可以不同，但是他们的输出层有相同的神经元数量，这代表了他们最后的u的维度是相同的，便可以进行点积运算。<br>\n<img src=\"/img/24052802.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>也可以同时构建两个神经网络，然后为整个神经网络定义一个代价函数，这样可以一次性计算所有的参数。若要想找与电影i相似的电影k，只需要计算<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi mathvariant=\"normal\">∣</mi><msubsup><mi>v</mi><mi>m</mi><mi>k</mi></msubsup><mo>−</mo><msubsup><mi>v</mi><mi>m</mi><mi>i</mi></msubsup><mi mathvariant=\"normal\">∣</mi><msup><mi mathvariant=\"normal\">∣</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">||v_m^k - v_m^i ||^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0991em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣∣</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8491em;\"><span style=\"top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0747em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-2.453em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.247em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>即可。<br>\n<img src=\"/img/24052803.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"从大型目录中推荐\">从大型目录中推荐</h2>\n<p>大型目录指的代推荐的东西有很多，比如当一个用户访问不同网站时，该网站可能会推荐电影，推荐广告，推荐商品，推荐歌曲等等。这些代被推荐的东西有很多，如电影网站中有上万个电影、购物网站有上百万个商品等，如果每个用户来到这个网站，该网站就用上边提到的神经网络计算一次，那这个做法不太好，响应慢成本还很高。<br>\n为了解决这个问题，可以使用**检索（Retrieval）和排序（Ranking）**这两个方法。检索要做的有两个事情：首先选择出一些合理的stuff作为候选项；然后将这些候选项进一步筛选，比如重复的项扔掉，买过的项也扔掉，得到一个列表。排序要做的就是将检索好的列表用模型进行排序，比如将检索好的电影根据模型最后的预测评分由高至低排序。由于排序的列表是经过检索的，因此不会像最开始那样把所有的stuff丢给模型计算，这就大大降低了运算量。想想给你推荐的电影或者商品，100个算不少了吧，相比该网站所有的stuff上百万个，极大的降低了运算量。而且，<em>网站已有的stuff的对应<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>m</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>是可以提前计算的</em>，所以当有用户访问网站时，只需要计算该用户对应的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>v</mi><mi>u</mi></msub></mrow><annotation encoding=\"application/x-tex\">v_u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>即可，这又进一步的降低了运算量。<br>\n<img src=\"/img/24052804.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24052805.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>可以看出，检索其实就是做了一次广度的覆盖，而排序的目的是为了更精准的推送。那现在要思考的问题是，在第一步检索的过程中，筛选出多少stuff比较合适。容易想到，检索的stuff越多，那么推荐的效果就会越好，但是相应的速度也会降低。因此需要在性能和速度之间做出权衡。一个有效的方法是进行<em>离线实验</em>，看一下<br>\n<img src=\"/img/24052806.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"Tensorflow实现内容过滤算法\">Tensorflow实现内容过滤算法</h2>\n<p>见jupyterLab</p>\n<h2 id=\"Principal-Component-Analysis\">Principal Component Analysis</h2>\n<p><em><strong>将数据可视化</strong></em><br>\n一个汽车又长和宽两个特征，但是汽车的宽度变化范围其实差别不大，而汽车的长度变化范围较大，此时为了见数据可视化，可以忽略变化幅度小的特征像这里的汽车宽度。<br>\n<img src=\"/img/24053100.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>再比如若两个特征为汽车的长和高，大小不同的车的这两个参数会有较大的差异，就是说这两个特征的变化幅度都挺大的，无法直接忽略任何一个，此时可以创建一个新的特征来描述这两个特征。比如新建一个z轴表示车的尺寸，这里的z轴不是新建了一个维度，还是在二维空间内新建的，他和x、y在同一平面。车的尺寸越大，相应的长度和高度就越高，因此可以用z这一个特征来粗略的估计x和y.<br>\n<img src=\"/img/24053101.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>下图中的数据有3个特征，我们可以在三维坐标系中描绘出这些数据。但是若将三个特征减少到两个特征，我们就可以在二位坐标系中描绘出这些数据，会更方便一些对吧。<br>\n<img src=\"/img/24053102.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>如果要描述一个国家，那一个国家的特征可太多了，如GDP，人口数量，占地面积，男女比例等等。假设一个国家有50个特征，我们一定是无法将有50个特征的国家可视化的。PCA算法可以将这大量特征减少到2、3个，这样我们就可以在坐标系中描绘出不同国家了。如经过PCA算法后，将这50个特征减少到了2个，这两个特征大致相当于GDP和人均GDP，这样我们就可以将一个国家在坐标系中可视化。<br>\n<img src=\"/img/24053103.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24053104.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>PCA算法</strong></em><br>\n在使用PCA算法之前，需要先将特征进行放缩，让他们的变化范围大致相同。然后将放缩过后的特征归一化为0均值，就是把每个特征减去平均值。<br>\n<img src=\"/img/24060200.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>接下来选择一个新的坐标轴来代替原来的两个坐标轴，比如这里选择坐标轴z，其实和之前的x1坐标轴一样。选择z作为新的坐标轴后，将原来的五个数据映射到z轴上，我们可以知道他们的变化幅度很大，这也是一种比较有效的信息。<br>\n<img src=\"/img/24060201.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>如果将z轴选成这样，将数据映射到z轴后，他们的变化幅度不如上一个z轴那样明显，所以这个新的坐标轴选的就不如上一个。<br>\n<img src=\"/img/24060202.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>如果将z轴选为下面这样，那此时数据在z轴上的映射会得到最大的变化范围，此时的z轴就被称为<em>主成分</em>：当将数据映射到其上时，会得到最大的方差。<br>\n<img src=\"/img/24060203.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>有了主成分之后，想要将二维的数据映射到主成分上，要做的就是将原数据向量和与主成分方向一致的单位向量做点积，就会得到其在主成分上的投影。想这里原数据向量是(2,3),假设找到的主成分是与x1夹角pi/4,从原点出发的指向第一象限的射线，那这个单位向量的坐标大概是(0.71,0.71),然后二者做内积，于是便计算出了x在主成分上的投影是3.55.<br>\n<img src=\"/img/24060204.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>找到了主成分之后，如果还想要更多的主成分，那么只需要让这些主成分互相垂直(perpendicular).如要找第二个主成分，只需要和第一个主成分垂直即可，此时还在二维平面。若还想再找一个主成分，就需要与前两个主成分都垂直，也就延展到了三维空间。<br>\n<img src=\"/img/24060205.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>只有两个特征的时候，PCA看起来和线性回归很类似，但是大多数时候数据集的特征很多，这个时候PCA和线性回归看起来就有很大不同了。实际上这两者本身就是两个事情，线性回归是监督学习中的事情，他有y标签，他想找的是一条和数据集拟合程度好的曲线，目的是尽量靠近y.而PCA没有y标签，他对待所有的特征都是平等的，他想找的是一条能尽量保留特征差异的曲线，这样将数据可视化的时候能看得更清晰一些。<br>\n<img src=\"/img/24060206.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>特别的，若数据集是这样，即使仅有两个特征也能看出来二者的不同。<br>\n<img src=\"/img/24060207.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>反过来，若给出映射后的数据，可以通过<em>PCA重建</em>来近似还原出原来的数据。如给定的z=3.55,与单位向量相乘后得到了(2.52,2.52),这和原始数据(2,3)相差不大。<br>\n<img src=\"/img/24060208.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>PCA实现</strong></em><br>\n可以使用scikit-learn包来实现PCA算法。使用前若数据不同特征的变化范围太大了，需要预处理，将不同特征放缩到一个合适的范围，这有助于找到合适的主成分。然后就可以使用sl包来完成其他事情。其中的fit函数会自动完成特征的归一化为均值0.<br>\n<img src=\"/img/24060209.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>参数n_components=1表示只想要1个主成分；explained_variance_ratio_输出0.992表示经过PCA后的主成分，也就是新的坐标轴，保留了原始数据99.2%的变化率，看起来很不错。<br>\n<img src=\"/img/24060210.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>若将二维的数据映射到二维的数据，就是说选两个主成分，那会出现这样的结果。其中explained_variance_ratio_有两个输出，0.992和0.008,分别代表了在不同的主成分上保留的原始数据的差距的比例，二者之和为1,就是说能完全解释原数据。<br>\n<img src=\"/img/24060211.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>关于PCA的一些早期应用，现在的主要应用还是将数据可视化：<br>\n<img src=\"/img/24060212.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h1>强化学习</h1>\n<p>假设现在有一个无人机，将无人机的位置，方向和速度等信息称为状态。强化学习做的就是对于给定的状态s，找到一个函数将其映射为a，a是怎么操作摇杆让他保持想要的状态，像让它待在固定位置不同这样。虽然我们也可以使用监督学习来做这个事情，这不但需要对于无人机状态x的大量观测，同时需要比较专业的人来说明对于一个x应该怎么操作摇杆，也就是y.但这是很难做到的，因为这种操作无人机的顺序和力度很难精确说明，比如向左倾斜多一点还是少一点，这个一点儿怎么衡量；又或者是给无人机多少动力，这些都决定了x如何映射到y，这无疑是很困难的。正因如此，很多对于机器人的控制的应用中，监督学习的效果并不理想，而要使用强化学习。<br>\n强化学习之所以强大的一个原因是你只需要说明做什么，而不需要说明怎么做。这就需要奖励函数，如果飞机飞得好，那可以将某个值+1，飞得不好则—1，如果飞的坠毁了，-10000这样。<br>\n<img src=\"/img/24060300.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>火星探测器模拟</strong></em><br>\n一个简化的火星探测的例子：探测器的初始状态为4,现在状态1和状态6都是值得探测的地方，但是状态1更有价值一些，因此可以将状态1的奖励设置的更高一些。探测器每次向左或向右移动，每次移动到新的状态都会得到奖励。如过探测器一直向左走，走到3的时候，得到0奖励，走到2的时候，得到0奖励，走到1的时候，得到100奖励；同样它也可以一直往右走；又或者左走走右走走。假设他走到1或6的时候，他就不会继续做其他事情，那状态1和状态6就是<em>终端态</em>。当他每一次行动的时候，都有4个参数：(状态，动作，奖励，下一个状态)，这几个参数是强化学的的关键信息。<br>\n<img src=\"/img/24060301.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"回报\">回报</h2>\n<p>通过之前的例子可以知道，不同的动作序列可能得到的奖励是不同的，通过强化学习的回报可以捕获不同序列的奖励。回报捕捉到的通常是能快速得到的奖励。像你身边现在就有10块钱，但是在山的那边有20块钱，回报会捕捉身边的这10块钱。计算回报公示如下图所示，第一项是初始状态的奖励，然后依次相加直到终端态。其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>γ</mi></mrow><annotation encoding=\"application/x-tex\">\\gamma</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05556em;\">γ</span></span></span></span>是折扣因子，他是小于1的，通常取很接近1 的值如0.99等。正是折扣因子的存在导致了回报会更倾向于离得近的奖励。<br>\n<img src=\"/img/24060302.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>假设现在一直向左走，从不同状态出发得到的回报用红色的字在上边注明了。需要注意的是如果从状态6开始，那么他的起始状态就是终端态，因此计算回报时只有一项，就是该终端态的奖励，也就是40.类似的，一直向右走的话，各状态作为起点的回报如图所示。当然如果在不同的初始状态选择不同的动作，那就可以得到第三个表格中的回报。<br>\n<img src=\"/img/24060303.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>决策学习算法的策略</strong></em><br>\n决策学习的目标是构建一个可以将<em>状态s</em>映射为<em>行动a</em>的Policy函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>π</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\pi(s)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">π</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">)</span></span></span></span>,该函数会告诉我们为了得到最大的回报，每一步应该怎么做。如对于之前的例子中的最后一行，policy函数作为不同状态的函数会得到相应的行动。<br>\n<img src=\"/img/24060304.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>看一下强化学习中的不同参数在不同应用中可以对应什么。<br>\n<img src=\"/img/24060305.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>这种强化学习应用程序的形式可以称为<em>马尔科夫决策过程Markov Decision Precess(MDP)</em>.从之前的例子中可以得知，MDP说明了未来只取决于当前的状态，而不取决于是怎么到当前状态的。MDP也可以用下面这种图来解释：Agent是我们要操作的东西，经过Policy函数后得到了动作a，做了a之后会发生一些变化，比如我们的位置。基于这些变化，我们可以看到当前的状态以及奖励。<br>\n<img src=\"/img/24060306.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"State-action-value-函数定义\">State-action value 函数定义</h2>\n<p>状态动作做价值函数也可以叫Q函数，它以当前的状态s和当前要采取的行动a作为参数。当在状态s做了a动作之后，到达了一个新的状态，在这个新的状态下有最大的回报的路径即最优策略。Q函数返回的是从最初的状态s到新的状态再走最优策略的总回报。如对于状态2，若首先向右走到达状态3，根据之前计算过的最优策略，从状态3开始的最优解是往左走，于是便一路向左，这条路径的回报是12.5;若往左走，则直接到达了终端状态，回报是50.这样就可以计算出所有状态的Q值。</p>\n<blockquote>\n<p>这里感觉比较奇怪，因为策略函数已经计算出了最大回报的路径是什么，为什么还要这个函数。比如在状态2的时候，明明知道了最优解是往左走，为什么还要计算一下往右一步，然后再走最优解。</p>\n</blockquote>\n<img src=\"/img/24060400.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<p>对比Q函数和策略函数，发现每个状态的策略函数的回报就是Q函数取不同动作回报的最大值，这也给策略函数的计算提供了一种方法。Q函数也叫Q*或者最优Q函数或状态动作价值函数。<br>\n<img src=\"/img/24060401.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"贝尔曼方程\">贝尔曼方程</h2>\n<p>贝尔曼方程可以用来得到Q函数。刚查了一下，贝尔曼方程又较动态规划方程，OK,fine.挺希望有一天术语能统一一点，机器学习好像挺多概念就是数学概念换个叫法。<br>\n<img src=\"/img/24060402.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>在看几个，注意的是若起始状态s是终端态，那么他不会采取行动，于是Q函数就只剩下第一项了。<br>\n<img src=\"/img/24060403.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>回报可以分为两部分，一部分是马上能得到的回报，另一部分就是走到下一个状态后能得到的最佳回报，这也是贝尔曼方程要说明的主要事情。<br>\n<img src=\"/img/24060404.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24060405.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"随机环境random-stochastic-environment\">随机环境random(stochastic) environment</h2>\n<p>实际工作中，机器人可能不会完全按照我们发出的指令执行。比如我们让他往右，但是他轮胎打滑了没有往右等，这就是随机环境。比如火星探测器的例子中，若初始状态在4号，现在你让他往左走，但是由于各种原因，比如风太大了，轮胎打滑了等等，最终导致了他有90%的概率往左走到3但是还有10%的概率往右走到5。考虑到这些随机的情况，就引出了<em>期望回报</em>。期望回报就是将一个设序列重复执行多次以计算他得到回报的平均值。所以，强化学习的目标到现在就变成了找到一个策略函数Policy()以得到最大的期望回报。同样，贝尔曼方程也要改进一下，加上期望。<br>\n<img src=\"/img/24060406.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n<img src=\"/img/24060407.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>连续状态空间</strong></em><br>\n火星他测器的例子中，探测器只在一些离散的位置，但实际应用中状态往往是连续的，并且一个物体的状态往往是多维的，比如x坐标，y坐标，x方向速度，y方向速度等。<br>\n<img src=\"/img/24060500.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"登月器\">登月器</h2>\n<img src=\"/img/24060501.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<img src=\"/img/24060502.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n<p>强化学习的主要任务是训练一个神经网络来逼近Q函数。登月器中，用于训练神经网络的输入可以由两部分组成，一个是登月器的状态，另一个是可以采取的行动，二者组合成一个向量作为输入。其中动作a有4个可能，什么都不做、向左点火、向右点火和向下点火来控制登月器的位置，以确保他能落在目标位置。将特征a经过one-hot编码得到4个二进制编码，在拼接上状态作为整体的输入向量。如当登月器在一个状态后，经过神经网络的计算，发现Q(s,main)最高，mian表示向下点火，那么登月器便会向下点火。<br>\n<img src=\"/img/24060503.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>那现在问题就是怎么样训练这个神经网络。我们可以通过贝尔曼方程得到一些训练集x和y，然后用监督学习来训练神经网络。为了得到训练集，我们可以让登月器随即采取行动，这样可以得到很多不同的元组(s,a,R(s),s’).根据s和a就可以得到输入x,根据R(s)和s’就可以得到Q(s,a)也就是y,于是就有了第一个数据集。其中贝尔曼方程的第一项就是R(s),而第二项需要的参数s’需要利用下一个元组的信息。在最初的时候，我们并不知道Q函数是什么，但是可以在最初的时候假设一个Q函数。<br>\n<img src=\"/img/24060504.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>完整的训练过程，这个算法叫做DQ(Deep Q-Network)N算法：<br>\n<img src=\"/img/24060505.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h2 id=\"算法改进\">算法改进</h2>\n<p><em><strong>改进神经网络架构</strong></em><br>\n之前的架构中，将动作a作为参数传给神经网络，于是对于同一个位置，神经网路一次只能计算对于该位置的一个动作。现在对输输入和输出做出改变，动作不作为输入，而在输出层中设置4个神经元，分别代表了不同动作的Q值，于是这样就可以一次计算出同一状态的4个不同动作的Q值。<br>\n<img src=\"/img/24060506.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>贪婪策略</strong></em><br>\n当神经网络正在学习的时候，以前的方式中，他在每个状态总是采取能获得最到回报的动作。但是由于最初的Q函数是随机的，他有可能随机到一种情况，导致某个动作永远会使Q函数很低。比如Q(s,main)总是比较低，main表示向下开火，于是最终学到的Q函数就永远不会向下开火。为了避免这种情况，我们可以不必每次都选择能使回报最大的动作，当然应该尽量选择这个，只不过应该给他个权重像0.95，剩下的0.05权重让模型选择一个随机的动作，这个选择随机动作的做法被称为“探索”。这个策略就是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>-greedy policy，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>=0.05.<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>-greedy policy常见的做法是以一个比较高的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>开始，逐步降低其值。比如登月器中，甚至可以将<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>ε</mi></mrow><annotation encoding=\"application/x-tex\">\\varepsilon</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">ε</span></span></span></span>初始化为1，然后逐渐减小到0.01.<br>\n<img src=\"/img/24060600.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p><em><strong>小批量和软更新</strong></em><br>\n小批量不但能提高强化学习的性能，也能加速监督学习，像提高一些神经网络的训练或者线性回归模型的训练速度。<br>\n在监督学习中，我们使用梯度下降算法来训练参数的时候，每次梯度下降都会遍历一边所有数据集，当数据集很大的时候，这会导致梯度下降的很慢。小批量做的是取大数据集的一个小子集，每次用这些小子集更新参数而不是遍历整个数据集，这样速度就会快不少。其中每次迭代使用的子集可以是不同的，可以将整个数据集划分为n个不同的子集，或者有一些交集的子集，然后用这些子集分别进行每一次迭代。<br>\n<img src=\"/img/24060601.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>普通的梯度下降中，每次迭代都会使代价函数减少。而小批量梯度下降时，由于每次使用的数据集只是一个局部的缘故，他可能在单次下降过程中效果不太好甚至有时会增加代价函数，但是该算法的总体趋势仍然是向着全局最优的地方。所以在有大量数据集的时候，往往更多地使用小批量梯度下降或者Adam算法而不是最普通的梯度下降，因为他们的速度更快且最终的效果也不错。同样的在登月器的例子中，让登月器先随机获取10000个数据样本以后，可以不全部使用这些样本，而是一次使用1000个样本这样。<br>\n<img src=\"/img/24060602.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<p>在登月器的算法中，最后我们将Q设置为Qnew,这里有可能发生的一个情况是新训练的Qnew可能性能还不如最开始的Q函数，<em>软更新</em>可以防止这样的事情发生。对于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>e</mi><mi>t</mi><mi>Q</mi><mo>=</mo><msub><mi>Q</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">Set Q = Q_{new}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">tQ</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">Q</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,其实就是将参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>W</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mtext>、</mtext><msub><mi>B</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">W_{new}、B_{new}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>分别赋给了旧的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mtext>、</mtext><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">W、B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>.其实我们可以使用<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>W</mi><mo>=</mo><mn>0.01</mn><msub><mi>W</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>+</mo><mn>0.99</mn><mi>W</mi><mtext>、</mtext><mi>B</mi><mo>=</mo><mn>0.01</mn><msub><mi>B</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>+</mo><mn>0.99</mn><mi>B</mi></mrow><annotation encoding=\"application/x-tex\">W = 0.01W_{new} + 0.99W、B = 0.01B_{new} + 0.99B</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\">0.01</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">0.99</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\">0.01</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord\">0.99</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span></span></span></span>这样的更新方式。0.01和0.99是<em>超参数</em>，二者的和为1，他们控制了参数像新的参数靠拢的程度。如当只给新的参数0.01权重而给旧的参数0.99权重的时候，说明参数只是做了小幅度的更新，他还是更靠近旧的参数。这种做法可以让强化学习算法收敛的更可靠。</p>\n<h1>一些问题</h1>\n<p>关于K-means算法的第二步，选择样本的平均值作为新的质点的位置，那么此时每个样本与质点的差的平方的和平均值最小的数学证明。（当质点这么取值的时候实际上这个式子就变成方差了对吧）</p>\n<h2 id=\"协同过滤算法使新用户的评分是0\">协同过滤算法使新用户的评分是0</h2>\n<p>使用协同过滤算法训练模型：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mtext mathvariant=\"bold\">min</mtext></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msup><mi>w</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msup><mi>w</mi><mrow><mo stretchy=\"false\">(</mo><msub><mi>n</mi><mi>u</mi></msub><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><msub><mi>n</mi><mi>u</mi></msub><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msup><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><msub><mi>n</mi><mi>m</mi></msub><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mstyle></mtd></mtr></mtable><mspace width=\"2em\"/><mfrac><mn>1</mn><mn>2</mn></mfrac><munder><mo>∑</mo><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>:</mo><mi>r</mi><mo stretchy=\"false\">(</mo><mi>j</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn></mrow></munder><mo stretchy=\"false\">(</mo><msup><mi>w</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo separator=\"true\">⋅</mo><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>+</mo><msup><mi>b</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mfrac><mi>λ</mi><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>n</mi><mi>u</mi></msub></munderover><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy=\"false\">(</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>+</mo><mfrac><mi>λ</mi><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>n</mi><mi>m</mi></msub></munderover><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy=\"false\">(</mo><msubsup><mi>x</mi><mi>k</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msubsup><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\begin{matrix}\n \\textbf{min}\\\\\n w^{(1)},...,w^{(n_u)}\\\\\n b^{(1)},...,b^{(n_u)}\\\\\n x^{(1)},...,x^{(n_m)}\\\\\n\\end{matrix}\n \\qquad \\frac{1}{2} \\sum_{(i,j):r(j,j)=1}(w^{(j)}·x^{(i)}+b^{(j)}-y^{(i,j)})^2 + \\frac{\\lambda}{2} \\sum_{j=1}^{n_u}\\sum_{k=1}^{n}(w_k^{(j)})^2 + \\frac{\\lambda}{2} \\sum_{i=1}^{n_m}\\sum_{k=1}^{n}(x_k^{(i)})^2\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:4.944em;vertical-align:-2.222em;\"></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.722em;\"><span style=\"top:-4.882em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord textbf\">min</span></span></span></span><span style=\"top:-3.634em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.386em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-1.138em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.222em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.05em;\"><span style=\"top:-1.809em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span><span class=\"mrel mtight\">:</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.516em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0213em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.188em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0763em;vertical-align:-1.4138em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6625em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3111em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">u</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.4138em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8479em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3021em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9646em;vertical-align:-1.3021em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">λ</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6625em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3111em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1645em;\"><span style=\"top:-2.357em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8479em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3021em;\"><span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.3987em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3013em;\"><span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8641em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span></span></p>\n<p>我们的目的是使代价函数尽可能小。对于新用户，他为对任何电影做出评价，因此代价函数的第一项是0,在此基础上，若想使整体式子变小，明显w的取值是0.类似的，若还对b做了正则化，则b也为0,所以新用户在该模型上对任何影片的预测分数都为0,不便于推荐。<br>\n刚写上边这几行的时候又想到在监督学习中，这几项也都是平放项，要使该式子最小岂不是也应该让w为0吗？稍微一想就清楚了，在一般的监督学习中，w的值会影响到无正则化的代价函数，也就是式子的第一项，因此两者合作才能得到最小的代价函数。而协同过滤算法中的新用户无第一项，决定整个式子的只有正则化项，因此w才为0.</p>\n<h2 id=\"协同过滤算法不适应密集层\">协同过滤算法不适应密集层</h2>\n<p>videop122 min10左右，Andrew说协同过滤算法不能适应密集层那一段，没明白。他说了需要自己实现代价函数，之前不也是自己实现代价函数吗。可能是我记错了，以后看一下tensorflow密集层的代价函数相关部分是怎么做的，和协同过滤算法有什么区别。</p>\n<h2 id=\"协同过滤算法和内容过滤算法的区别\">协同过滤算法和内容过滤算法的区别</h2>\n<p>on Andrew’s slide:<br>\nCollaborative filtering:<br>\nRecommend items to you based on rating of users w·o gave similar rating as you.<br>\nContent-based filtering:<br>\nRecommeng items to you based on features of users and item to find good match.</p>\n<p>查找一些资料，发现协同过滤算法分为用户协同过滤和物品协同过滤。Andrew说的应该是用户协同过滤。但是实现方式中是一起训练w、b和x,没看出来找相似用户这个过程。</p>\n<h2 id=\"Q函数\">Q函数</h2>\n<p>Q函数的作用没太清楚，他能计算出策略函数，但他采取行动走的需要时最优解，这最优解如果不是通过策略函数找到的，那是怎么找到的。</p>\n"},{"title":"neural networks","description":"something about neural networks","abbrlink":"1ca572","date":"2024-01-29T13:41:06.000Z","_content":"\n同一系列的[监督学习](https://b-white07.github.io/posts/acf03113.html)和[无监督学习](https://b-white07.github.io/posts/9915f4c8.html)相关笔记点击查看。\n\n# 神经网络\n为了进行更复杂的预测，我们可以使用*神经网络*（又称多层感知机multilayer perceptron）。如图所示为一简单的神经网络，该神经网络有4层，其中layer1-3是隐藏层，layer4是输出层，最左边的input也可以算作layer0作为输入层，但一般说层数时不将其算在内。每层中的圆是一个*神经元*，这些神经元承担了神经网络的计算任务。神经元中可以使用不同的算法进行计算，这里假设每个神经元使用了逻辑回归模型$g(z) = \\frac{1}{1+e^{-z}},$其中$z=\\vec{w}  \\cdot  \\vec{x}+b$.当然，同一层中的不同神经元有不同的参数$\\vec{w}、b$.\n为了区别同一层中的不同神经元的参数，可以用下表表示该参数属于哪个神经元，如右侧放的的layer3中，有三个神经元，不同神经元参数的下标分别是1、2和3，表示他们分别是神经元1、2和3的参数；为了区别不同层神经元的参数，可以用上标表示该参数属于哪个layer，比如图中放大的layer3，其实可以给每个神经元的参数加上上标[3],就像$\\vec{a}^{[3]}$这样，表示他们都是layer3的参数，只不过图中未标出。\n<img src=\"/img/neuralNetwork.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n通过该图也可以大概了解神经网络的计算过程：将特征$\\vec{x}$输入给layer1，经过计算后layer1得到结果$\\vec{a}^{[1]}$（每一层输出的计算结果称为activations）,将它作为layer2的输入，以此类推，最终的output层会通过上一层的输入，计算出最终的结果，该结果是一个标量，根据它我们就可以做出相应的预测，这种方式称为向前传播。\n>个人思考：不同层中每个神经元参数的数量应该与上一层输出向量的维数有关。假设输入$\\vec{x}$是4纬向量，为了layer1中的每个神经元能够正常计算，$\\vec{w}$明显应该也是4维的；再如layer3中每个神经元参数$\\vec{w}$的维度，应该是layer2输出的activation的维度，layer2中有5个神经元，显然输出的是5维向量，那$\\vec{w}^{[3]}_i$应该都是5维的。\n\n如图所示为一人脸识别的应用，将一张图片分解为1000*1000个像素点，将这一百万个像素点作为输入特征，输入到一个有3个隐藏层的神经网络中，层层计算后，输出层会输出一个概率，来判断这个人是否匹配的概率。\n<img src=\"/img/face1.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n如果进一步看一下每一层的输出是什么，可以发现：第一层的输出是一个个细小的边缘，第二层的输出是范一些的小整体部分，像是耳朵眼睛什么的，第三层的输出范更大一些了，大概能看到一张脸。但是我们并没有告诉这个神经网络每一层应该做什么，他好像自己知道自己应该做什么一样。\n<img src=\"/img/face2.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n# 使用tensorflow搭建神经网络\n## 训练模型\n### step1创建模型\n```python\n# 1使用Sequential创建神经网络\nimport tensorflow as tf \nfrom tensorflow.keras import Sequential \nfrom tensorflow.keras.layers import Dense\nmodel = Sequential([\n  Dense(units=25, activation='sigmoid'),\n  Dense(units=15, activation='sigmoid'),\n  Dense(units=1, activation='sigmoid')\n                  ])\n```\n这里调用了`Sequential()`函数，创建了一个三层神经网络并自动完成了向前传播。对于每一层中的所有神经元，都使用了sigmoid作为激活函数。\n### step2编译模型\n```python\n# 2编译模型并指定二元交叉熵损失函数\nfrom tensorflow.keras.losses import BinaryCrossentropy\nmodel.compile(loss=BinaryCrossentropy ())\n```\n二元交叉熵函数实际上就是course1中，逻辑回归模型使用的代价函数，它是sigmoid函数常用的损失函数：\n$$loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)}) = -y^{(i)} \\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right)$$\n### step3训练模型\n```python\n# 3调用fit函数，使用step2中的损失函数拟合step1中的模型，epochs指定梯度下降运行次数\nmodel.fit(X, y, epochs=100)\n```\n这里调用的`fit()`函数实现了反向传播，它使得计算偏导数更加高效。\n### step4利用模型预测\n```python\n# 4利用模型进行预测\nmodel.predice(x_new)\n```\n\n## 为什么需要激活函数以及如何选择\n激活函数是每一层中的神经元用于计算的函数，常见的激活函数有三种：线性函数、sigmoid函数和ReLU函数。\n下面对这几个函数简单介绍，其中$z=wx+b$\n- 线性函数\n\n最简单的，当所有隐藏层都使用线性函数$g(z)=z$作为激活函数：\n1. 输出层也使用线性函数作为激活函数时，输出$a_1=w_1x+b_1$将作为下一层的输入，因此下一层的输出为$a_2=w_2a_1+b_2=w_2(w_1x+b_1)+b_2=w_2w_1x+w_2b_1+b_2=wx+b$.就是说构建了这么复杂的神经网络，得到的效果和线性回归模型一样，这显然是没有必要的；\n2. 输出层使用sigmoid激活函数，同样能够证明，该神经网络也只能做到逻辑回归模型能做到的事情而已。\n\n基于上述两点，可以说当隐藏层使用线性函数作为激活函数时，该神经网络没有激活函数，因此需要选择其他合适的激活函数。\n\n- sigmoid激活函数\n\n$g(z)=\\frac{1}{1+e^{-z}}$,只能得到0和1之间的数值，因此常用于二元分类问题。\n\n- 整流线性函数ReLU\n\n$g(z)=max(0,z)$,可以看出，该函数能得到大于等于0的值，因此可以用于多元分类。\n<img src=\"/img/2404141.png\" style=\"zoom:50%;\" >\n除此之外，可以看到sigmoid函数与ReLU函数的另一个区别：sigmoid函数在z较小和较大时，函数图像较为平坦，也就是说自变量即使有较大的变化，函数值变化依然很小，这就导致了代价函数对于参数w的偏导数很小，因此w每次更新的就会很慢，也就是梯度下降的很慢。相比之下，ReLU函数只在z<0处平坦，另一边没有平坦的地方，因此梯度下降的会快一些。\n综上，对于隐藏层和输出层的激活函数的选择可以参考以下方案：\n隐藏层：使用ReLU较多，原因：1函数简单，计算更快; 2.只有左边是平坦的，而sigmoid两边都是平坦的，梯度下降遇到平坦的时候运行的很慢。\n输出层：根据输出的结果选，二元分类可以选sigmoid，输出有正有负可以选线性激活，输出非负可以选ReLU；\n\n如\n```python\nfrom tensorflow.keras.layers import Dense\nmodel = Sequential([\n  Dense(units=25, activation='relu'),\n  Dense(units=15, activation='relu'),\n  Dense(units=1, activation='sigmoid')\n                  ])\n```\n\n## 多分类和多标签\n### 多分类\n二元分类y只有两个结果，多元分类y仍是离散值，只不过有多种结果。在多分类问题中，常使用softmax回归模型。\n假设输出值y有N个离散值（像数字识别0-9，y就有10个不同的离散值），softmax回归模型可以定义如下：\n$$z_j=\\vec{w_j}·\\vec{x}+b_j \\;\\;\\; j=1,2,...,N \\\\\na_j=\\frac{e^{z_j}}{\\sum_{k=1}^{N}e^{z_k}}=P(y=j|\\vec{x})$$\n特别的，当N=2时：$a_j=\\frac{e^{z_1}}{e^{z_1}+e^{z_2}}=\\frac{1}{1+e^{-(z_1-z_2)}}=\\frac{1}{1+e^{-z}}$,于是softmax就变成了sogmoid（自己想的，不知道对不对，应该对吧）.所以softmax是sogmoid的一般化。\n如y有4个输出值，则\n$$z_1=\\vec{w_1}·\\vec{x}+b_1 \\qquad\\qquad\na_1=\\frac{e^{z_1}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}}=P(y=1|\\vec{x})\\\\\nz_2=\\vec{w_2}·\\vec{x}+b_2 \\qquad\\qquad\na_2=\\frac{e^{z_2}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}}=P(y=2|\\vec{x})\\\\\nz_3=\\vec{w_3}·\\vec{x}+b_3 \\qquad\\qquad\na_3=\\frac{e^{z_3}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}}=P(y=3|\\vec{x})\\\\\nz_4=\\vec{w_4}·\\vec{x}+b_4 \\qquad\\qquad\na_4=\\frac{e^{z_4}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}}=P(y=4|\\vec{x})\\\\\n\\qquad\\qquad \\\\\nin \\quad which: a1 + a2 + a3 + a4 = 1$$\n\nsoftmax的损失函数\n$$loss(a1,...,a_N,y) = \\left\\{\\begin{matrix}\n -\\log a_1, & if \\quad y=1\\\\\n -\\log a_2, & if \\quad  y=2\\\\\n \\vdots \\\\\n  -\\log a_N, & if \\quad  y=N\n\\end{matrix}\\right.$$\n\n其实和二元逻辑回归很类似，如果将二元回归中y=1的概率记为$a_1$，那么y=0的概率$a_2=1-a_1$则二元逻辑回归损失函数就变成了：\n$$loss = -y \\log a_1- \\left( 1 - y\\right) \\log \\left( 1 - a_1\\right)$$\n即\n$$loss = \\left\\{\\begin{matrix}\n -\\log a_1, & if \\quad y=1\\\\\n -\\log a_2, & if \\quad  y=0\\\\\n\\end{matrix}\\right.$$\n\n将softmax函数作为输出层，则输出层有10个单元，不同于sigmoid作为输出层函数，只有一个神经元。而且线性激活函数、ReLU激活函数、sigmoid激活函数作为输出层时，每个输出结果$a_j$只与$z_j$有关，而softmax的每个$a_j$与所有的$z_j$都有关。\n\ntensorflow实现\n```python\nimport tensorflow as tf \nfrom tensorflow.keras import Sequential \nfrom tensorflow.keras.layers import Dense\nmodel = Sequential ([\n  Dense(units=25, activation='relu'),\n  Dense(units=15, activation='relu'),\n  Dense(units=10, activation='softmax')\n                    ])\n\nfrom tensorflow.keras.losses import SparseCategoricalCrossentropy\nmodel.compile(loss=SparseCategoricalCrossentropy())\n\nmodel. fit(X,Y,epochs=100)\n```\n上边的代码可以运行softmax但是不推荐，下边的代码实现的softmax神经网络可以减少舍入误差。\n改进后：将输出层的激活函数换成linear,同时改变compile中SparseCategoricalCrossentrop的参数。\n```python\nimport tensorflow as tf\nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Dense\nmodel = Sequential([\n  Dense(units=25, activation='relu'),\n  Dense(units=15, activation='relu'),\n  Dense(units=10, activation='linear') \n                  ])\n\nfrom tensorflow.keras.losses import SparseCategoricalCrossentropy\nmodel.compile(...,loss=SparseCategoricalCrossentrop(from_logits=True))\n\nmodel.fit(X,Y,epochs=100)\n```\n\n参数from_logits默认为False,那么对应的输出层此时激活函数为softmax，此时输出层的结果是经过了softmax处理的，最后的概率$a$,然后将$a$作为中间量传递给损失函数，这就导致了误差的产生。而若将参数设置为True,那么对应的此时输出层的激活函数为linear,他所计算的是$z=wx+b$的$z$，而不是最后的概率$a$.此时tensorflow做的是将整个softmax函数作为参数传递给损失函数，于是损失函数就变成了\n$$loss(a1,...,a_N,y) = \\left\\{\\begin{matrix}\n -\\log \\frac{e^{z_1}}{\\sum_{k=1}^{N}e^{z_k}}, & if \\quad y=1\\\\\n \\vdots \\\\\n  -\\log \\frac{e^{z_j}}{\\sum_{k=1}^{N}e^{z_k}}, & if \\quad  y=N\n\\end{matrix}\\right.$$\n也就没有了中间变量$a$带来的误差。然后对于上边的式子，tensorflow会重新排列其顺序，使误差更小（重新排列会避免一些很大或很小的$z$值，从而避免一些舍入，因此精度也会提高）。\n参考：[keras.losses中from_logits的作用](https://blog.csdn.net/muyuu/article/details/122762442)\n\n>关于舍入误差\n<img src=\"/img/2404151.png\" style=\"zoom:50%\">\n可以看出，使用不同的形式计算同一个值会出现不同的结果，原因是精度问题。由于存储字长的限制，很多小数是无法精确在计算机内部表示的，所以如果存在中间变量，那么存到这个中间变量中的结果是经过舍入的。如b中的1+1/10000和1-1/10000,这两部分是经过舍入后的结果，因此最终结果会有一定偏差。\n\n### 多标签\n多分类中，以识别数字为例，输出y是一个标量，对于一个输入x，他要做的事判断x是什么。而多标签问题中，输出y是一个向量，对于一个输入x，他想表达的是x的一些属性，比如：\n<img src=\"/img/2404152.png\" style=\"zoom:50%\">\n对于同一张图片，我们想要知道该图片中是否有行人、汽车和公交。可以将这三个视为该图片的属性。可以看出来，判断每个属性其实就是一个二元分类问题，我们可以根据属性个数构建对应个数的神经网络，但这很繁琐，我们完全可以构建一个神经网络，只不过让输出层有3个输出就可以了。由于每个属性都是二元分类，因此输出层的每个神经元使用sigmoid就可以了。\n\n## 代价函数高级优化方法\n梯度下降算法中，选择合适的学习率$\\alpha$很关键，太大太小都不好。Adam算法可以在梯度下降的过程中自动调整$\\alpha$的大小：$\\alpha$小了让它大一些；$\\alpha$大了则让他变小。因此他比梯度下降算法快很多。除此之外，梯度下降算法中，所有的参数共用一个$\\alpha$，但是Adam算法中，每个参数有自己的$\\alpha$.即\n$$\nw_1 = w_1 -  \\alpha_1 \\frac{\\partial J(\\vec{w},b)}{\\partial w_1} \\\\ \n\\vdots \\\\\nw_{10} = w_{10} -  \\alpha_{10} \\frac{\\partial J(\\vec{w},b)}{\\partial w_{10}} \\\\ \nb = b -  \\alpha_{11} \\frac{\\partial J(\\vec{w},b)}{\\partial b} \\\\\n$$\n<img src=\"/img/2404136.png\" style=\"zoom:40%\">\n\n```python\n# model\nmodel = Sequential([\ntI.keras.layers.Dense(units=25, activation='sigmoid'),\ntf.keras.layers.Dense(units=15, activation='sigmoid'),\ntf.keras.layers.Dense(units=10, activation='linear')\n])\n# compile 需要给一个初始的学习率\nmodel.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=1e-3),\nloss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True))\n# fit\nmodel.fit(X,Y,epochs=100)\n```\n\n## 其他网络层类型\n密集层类型Dense：之前代码中，我们使用Dense函数构建的每一层的类型是密集层，密集层中每个神经元都使用了input**全部的**特征。\n卷积层类型Convolutional：卷积层中的每个神经元仅仅使用input的**一部分**特征。这种做法更快、需要的训练数据更少而且不太容易过拟合。但是输入窗口的大小需要合理选择。\n<img src=\"/img/24041310.png\" style=\"zoom:50%\">\n\n\n# 优化模型\n## 模型评估\n在训练模型的时候，我们会通过带有正则化项的损失函数来训练参数，但是在评估模型性能的时候，往往通过没有正则化项的损失函数来评估模型的性能。\n我们可以将数据集分为两部分，一部分用作训练，一部分用作测试，比例可以是7：3或者8:2等。在评估模型的过程中需要做三个事情：\n1.损失函数，带正则化项\n2.计算test error:Jtest，用测试样本计算J，不带正则化项。Jtest用于判断该模型表现如何\n3.计算train error:Jtrain，用训练样本计算J，不带正则化项。Jtrain衡量了该模型在训练集上表现如何\n\n对于分类问题，Jtest和Jtrain的定义有另一种更为常见的方式：不用逻辑回归的损失函数来计算二者，而分别用二者的错误分类分数来衡量。如Jtest是测试集中将0判断为1，将1判断为0的分数；Jtrain是训练集中将0判断为1，将1判断为0的分数。\n\n## 模型选择\n在一个问题中，有时我们不确定需要什么样子的模型，比如是用1次的线性模型还是更为高次的方程呢？此时我们可以构建多个模型，然后用训练集训练这些模型，训练好以后用测试集来评估这些模型的性能，选择一个Jtest最低的模型。此时Jtest其实做了两件事情：他通过评估每个模型的Jtest(第一件事)来选择了一个性能最好的模型（第二件事）。但是此时说Jtest起到了评估模型的作用其实有点儿不合适，此时Jtest对模型的评估往往比实际误差更小，因为Jtest参与了模型选择的工作，用它来评估自己选择出来的模型损失当然比较小。所以应该把Jtest仅仅作为模型选择的方式，而不应该用它继续做模型评估。\n那对于这种情况，就需要新的数据集对已经选择出来的模型评估，所以上述将整个数据集划分为2部分已经不够用了，我们可以将整个数据集划分为三部分：训练集、交叉验证集（AKA验证集AKA开发集AKA dev集）和测试集（比例可以为0.6、0.2、0.2.），并用这三部分分别计算Jtrain、Jcv和Jtest.其中Jtrain用来训练模型，Jcv用来选择模型，到此为止模型已经选择完成了，然后再用Jtest用来评估泛化误差。由于Jtest并未参与模型选择之前的一切工作，因此用它来评估泛化误差会更为准确。\n这种方法也可以用来选择神经网络架构：有几层？每层几个神经元？等。\n\n>再次理解Jtest和Jcv都是20%的样本，为什么Jtest能更准确的得到误差？\n因为用Jtrain训练好模型以后，我们使用Jcv来选择了一个损失最低的模型，就是说我们选择的模型是对应于Jcv这几个样本下的最好模型。至此模型就选择好了。\n选择好以后再用Jtest来测试最终选择的模型的好坏，是因为Jtest的这几个样本全程没有参与，因此得到的模型的泛化损失更准确。\n\n## 正则化、偏差、方差\n高偏差的表现：Jtrain很高，如果模型的bias高，那么仅仅通过增加训练集，无法使模型得到优化。\n<img src=\"/img/24042403.png\" style=\"zoom:50%\">\n高方差的表现：Jcv远高于Jtrain，如果模型的variance高，那么可以通过仅仅增加训练集来优化模型。\n<img src=\"/img/24042404.png\" style=\"zoom:50%\">\n模型不错的表现：Jtrain低且Jcv没有远高于Jtrain.\n通过下图所示的*学习曲线*可以较直观看出模型的偏差和方差（绘制学习曲线不一定用到整个训练集，可以取训练集的子集做一个预判）。\n<img src=\"/img/24042402.png\" style=\"zoom:50%\">\n\n要注意，有时候Jtrain较高并不一定意味着模型不好，如语音识别，有时语音中有噪音，这导致了即使人工识别也会有误差，因此可以允许Jtrain稍大，此时需要与人工识别的误差做比较而不是仅仅关注Jtrain的表现，这其实将人工识别的准确性作为了评估性能的**基准**。\n<img src=\"/img/24042401.png\" style=\"zoom:50%\">\n\n正则化参数 $\\lambda$对bias和variance的影响：$\\lambda$ 过大，会导致w很小，导致f(x)趋向于b；$\\lambda$ 过小，导致w很大，则相当于没有正则化。\n<img src=\"/img/24042801.png\" style=\"zoom:50%\">\n所以要为模型选择合适的$\\lambda$：选择$\\lambda$的方法和前面选择模型的方法很类似，也需要借助于Jcv.\n<img src=\"/img/24042802.png\" style=\"zoom:50%\">\n偏差和方差作为$\\lambda$的函数有如下特性：\n<img src=\"/img/24042803.png\" style=\"zoom:50%\">\n\n几个解决高偏差和高方差的方法：\n1.神经网络可以解决high bias和high variance的均衡（tradeoff）问题\n只要训练集不是很大，大型神经网络都是low bias的。\n<img src=\"/img/24042406.png\" style=\"zoom:50%\">\n大型神经网络会比小的慢，但是如果正则化得当，其表现只会比小的更好。\n<img src=\"/img/24042407.png\" style=\"zoom:50%\">\n<img src=\"/img/24042408.png\" style=\"zoom:50%\">\n\n2.可以参考如下的几种方式\n<img src=\"/img/24042405.png\" style=\"zoom:50%\">\n\n## 机器学习开发的迭代\n第一次构建好一个机器学习的架构以后，往往该模型性能有待提高，可以通过如下方式循环提高模型的性能\n<img src=\"/img/24042501.png\" style=\"zoom:50%\">\n\n其中**误差分析**是一种手动分析模型的方法：假设你的模型用于判断一个邮件是否为垃圾邮件，该模型误判断了100封邮件，此时为了进一步针对性地提高模型性能，你需要手动查看这100封邮件，看看该模型误判的这些邮件都是什么类型的。比如其中40封是医药相关的、7封是故意拼写错误的（故意拼写错误有时可以避免被当作垃圾邮件）、35封是钓鱼邮件等等。显然该模型对于医药相关邮件和钓鱼邮件的判断准确度不够，因此可以针对这两类邮件选择相应的方法来提高模型的准确性，像收集更多的数据等等。\n<img src=\"/img/24042502.png\" style=\"zoom:50%\">\n\n增加数据的方法：\n1.针对性的添加数据集，如上边的例子中，你当然可以在数据集中添加各种类型的垃圾邮件，但是如果针对性的添加模型表现不好的类型的数据，如添加医药相关的垃圾邮件和钓鱼邮件的数据，会更有性价比。\n2.数据增强（由于对于图像和音频处理时）：通过修改已有的数据集来创建新的数据集。\n如在图像识别中，训练集中已有一个A的图像，那么我们可以将该图像旋转、放大、缩小等，这实际上就差生了新的训练集（通过原来的x产生了新的x），但是y仍然没有改变（A还是A）。\n<img src=\"/img/24042503.png\" style=\"zoom:50%\">\n\n除此之外，还可以将图像放置于网格中，然后扭曲该网格图来获取更多的训练集，这种做法可以提高程序的健壮性。\n<img src=\"/img/24042504.png\" style=\"zoom:50%\">\n\n类似的，在语音识别中，可以通过给语音添加背景噪声的方法或者用稍微差一些的设备录音已获得新的训练集。\n<img src=\"/img/24042505.png\" style=\"zoom:50%\">\n\n3.数据合成：人工创造新的训练集而不是将已有的数据集修改为新的。\n如下图的OCR应用中，左图为在真实照片中识别到的数据，右图是人工合成的数据。右图的数据是通过在文本编辑器中，用不同的字体打字，然后截屏，再通过调整对比度等等得到的，这样就得到了可以用于ORC训练的数据集\n<img src=\"/img/24042506.png\" style=\"zoom:50%\">\n\n4.迁移学习(transfer learning)：使用不同任务的数据来训练模型。\n如有模型一用于识别图片中的猫狗等1000个类别，而你想搭建一个用于识别数字的模型二，你可以将模型一的输出层修改为自己需要的，比如数字识别中，输出层只需要10个units.于是只需要将模型一的输出层的1000个units改为10个units就得到了模型二。接下来有两种做法可以选择：第一种是保持模型二复制来的隐藏层参数不变，仅训练输出层的参数；另一种做法是将复制过来的所有隐藏层参数作为初始值，训练模型二的全部层的参数。在本例中，对模型一的训练称为*监督预训练(Supervised pretraining)*，对模型二的训练称为*微调(Fine tuning)*.\n<img src=\"/img/24042507.png\" style=\"zoom:50%\">\n\n这么做是因为可能你用于模型二训练的数据集不够多，而用于训练模型一的数据集充足。而且迁移学习的一个好处是你也许不用亲自训练模型一，可以直接copy别人的。\n迁移学习之所以有效是因为在图像识别模型中，第一个隐藏层总是识别边，第二个识别角，第三个识别范围更大一些的基本形状，这对识别任何图片都是有帮助的。因此若想有效的迁移学习，需要保证用于预训练的模型与用于微调的模型要有**相同类型的输入**。如你的任务是计算机视觉相关，那么预训练的模型的输入图片x需要与你的输入图片x有相同的维度。同样的，你的任务是语音识别，那预训练的模型也得是用语音数据训练的。\n<img src=\"/img/24042508.png\" style=\"zoom:50%\">\n\n机器学习项目的完整周期可以用下图表示：\n<img src=\"/img/24043001.png\" style=\"zoom:50%\">\n关于部署：\n<img src=\"/img/24043002.png\" style=\"zoom:50%\">\n其中MLOps指的是构建，部署和维护机器学习系统，他也是机器学习的一个领域。\n\n## 倾斜数据集的误差指标、精确率与召回率\n倾斜数据集指的是数据集中的正例样本和负例样本差别非常大，远远不是55开，此时若使用准确度作为误差指标，结果往往不好。比如如果现在有一个病人的数据集，在该数据集中，仅有0.5%的患者患有一种罕见病，那么如果你的模型判断一个病人是否有这种罕见病的逻辑是`y=0`(一直预测病人没得这个病),那该模型的准确率也会达到99.5%,一个看起来不错的表现，但实际上这个模型并不行对吧。此时就需要其他的误差指标来衡量该模型的性能。\n一对常用的指标是**精确率**和**召回率**。为了理解这两个概念，需要引入**混淆矩阵**。\n<img src=\"/img/24043003.png\" style=\"zoom:50%\">\n上图中的2*2矩阵就是混淆矩阵（以2*2为例，可以是n*n的，主对角线是预测对的，其余都是预测错的）。可以看出，精确率其实就是模型预测患病的病人中，多少人是真正患病的；召回率就是在所有真正患病病人中，该模型找到了多少。因此我们要追求这两个指标都高的模型。若一个模型仅仅用`y=0`作为预测，那么TP=0，进一步的精确率和召回率均为0，所以该模型并不是一个好模型，是个小垃圾。\n\nTrading off precision and recall:\n在之前的例子中，我们通常选0.5作为门槛，但是如果想更强调精确度的话，可以将threhold提高；若想强调召回率，可以将threhold降低。观察精确度和召回率的公式：若将threhold提高，那其实预测为1的数量就会变低，因此TP就会变低，那precision的分子分母都会变小，不好判断。但从另一个角度，若提高threhold，说明该模型只在有较高把握的情况下才会做出y=1的判断，因此precision会提高；而实际上的y=1是不会变化的，因此recall会变低。下图反应了precision和recall对于threhold的关系：\n<img src=\"/img/24043004.png\" style=\"zoom:50%\">\n\n如果想要自动均衡精确度和召回率，可以使用另一种误差指标**F1 score**,实际上就是precision和recall的调和平均值，该值更强调相对较小的数（若一个数很小，他在分母上就会变的很大，所以整体也会偏小，接近小的值）。这样就不需在二者之间做出均衡只看F1 score就可以了。\n<img src=\"/img/24043005.png\" style=\"zoom:50%\">\n\n\n# 决策树模型\n下图为一个数据集，其输入特征x都是二元的，输出y也是二元的：\n<img src=\"/img/24050600.png\" style=\"zoom:50%\">\n\n如下图所示为几个不同的决策树，其中的椭圆节点称为**决策节点(decision nodes)**,下边的矩形节点就是叶子结点(leaf nodes)。这些决策树可能是同一数据集训练出来的不同模型，决策树学习算法就是从这些模型中选择一个较好的。\n<img src=\"/img/24050601.png\" style=\"zoom:50%\">\n\n## 建立决策树的关键问题\n首先，从输入的特征中选择一个特征作为决策树的根节点。比如此处将耳朵形状作为根节点；\n<img src=\"/img/24050602.png\" style=\"zoom:50%\">\n\n然后，关注一个子树并确定该子树的根节点；\n<img src=\"/img/24050603.png\" style=\"zoom:50%\">\n\n接着，重复上边的操作将数据集划分为合适的子集，并将这些子集作为叶子结点；\n最后，回到step2并选择另外一个子树，重复上面的动作。\n<img src=\"/img/24050604.png\" style=\"zoom:50%\">\n\n这其中有两个关键的问题：决策节点的选择和叶节点什么时候该出现。\n在选择决策节点的时候，尽量选择一些可以将数据集划分为两个高纯度的子集：如本例中，可以在耳朵形状、脸型、是否有胡须中选择一个作为根 节点，他们的效果如下图所示。\n<img src=\"/img/24050605.png\" style=\"zoom:50%\">\n但是如果有一个特征是DNA，那么我们可以用DNA百分之百将整个数据集分为猫和非猫两个子集，所以DNA这个特征就可以作为一个很不错的决策节点。\n而对于什么时候该出现叶节点了，通常有四个参考标准：第一是数据集已经完全划分为目标子集了，比如当前的所有子集都是要么全是猫，要么全部是猫；第二是如果继续向下分裂或导致超过决策树的最大高度。决策树的高度是有限制的，做出限制的原因有两个：其一是不会变的太大而笨重，其二是小树不容易过拟合。很多时候其实也是希望树高尽可能小，像二叉排序树这种的，树高往往代表的查找效率；第三是纯度分数的提高低于某个阈值；第四是某个节点的样本数量小于某个阈值。\n<img src=\"/img/24050606.png\" style=\"zoom:50%\">\n\n## 熵(entropy)和信息增益(information gain)\n一个数据集若全是猫，则该数据集很纯；一个数据集若全不是猫，则该数据集同样很纯；如果一个数据集有猫有其他的，则就可以用**熵**来衡量该数据集的纯度，熵越高，则数据集越不纯。\n若将数据集中猫的比例记为$p_1$，则不是猫的比例$p_0=1-p_1$,则$p_1$的熵可以定义为$H(p_1)=-p_1log_2(p1)-p_0log_2(p_0)$,其中取2为底是因为当$p_1=p_0=1/2$时（二元分类二者相等只能为0.5），$H()$可以为$1$.这样的意义看起来更明确方便一些。同时注意到熵的定义和逻辑回归模型的损失函数挺像的。\n<img src=\"/img/24050607.png\" style=\"zoom:50%\">\n\n有了熵的帮助后，就可以更好的选择决策节点：应该选择使熵尽可能小的特征作为决策节点。\n现在分别计算以不同特征为决策节点，得到的决策树的两个分支的$H(p_1)$,由于每个树有两个熵，为了便于选择，求出两个熵的加权平均熵，选择最低的即可。\n<img src=\"/img/24050608.png\" style=\"zoom:50%\">\n\n为了遵循决策树的惯例，上边的计算还没做完，需要进一步计算信息增益，但这并不会影响结果。决策树学习中，熵的减少称为**信息增益(information gain)**，他衡量了由于分裂而导致的树的熵的减少的量。\n最初始的根节点中有5只猫和5只其他，那么$p_1=0.5,H(p_1)=1$，这是没有分裂时树的熵，用这个值减去树分裂后的加权平均熵即可得到信息增益，信息增益最大的决策树就是我们想要的。\n<img src=\"/img/24050609.png\" style=\"zoom:50%\">\n\n此外，信息增益还可以帮助我们判断事都要继续分裂还是将当前节点作为叶子结点。若信息增益太小了，那表示即使分裂也不会使熵减少的太多，但是分裂导致的树高增加会导致过拟合，因此此时可以停止分裂，将当前数据集作为叶子结点。\n下面给出了信息增益的严格定义：\n<img src=\"/img/24050610.png\" style=\"zoom:50%\">\n\n## 建立决策树的步骤\n<img src=\"/img/24050611.png\" style=\"zoom:50%\">\n可以看出其实构建决策树是一个迭代的过程。\n\n## one-hot编码\n上边的数据集中，每个特征的取值只有两种情况。下边的数据集中，耳朵形状的取值有3个，若采用之前的方法将其作为决策节点，则可以构建出一个有三个子树的决策树：\n<img src=\"/img/24050612.png\" style=\"zoom:50%\">\n若将数据集稍作更改，其实可以将数据集变成和之前的数据集一样，每个特征只有两个取值：\n<img src=\"/img/24050613.png\" style=\"zoom:50%\">\n如果一个特征有k种取值，那么通过**one-hot编码**可以将该特征转换为k个2进制特征。同样的，若将Face shape的两种取值和Whiskers的两种取值分别记做0和1，那么该数据集就可以用来训练神经网络。\n\n## 有连续值特征的决策树\n若一个特征是有连续值的而不是离散值，我们可以为该连续特征选择一个阈值，以该阈值作为决策节点划分子树。\n<img src=\"/img/24050614.png\" style=\"zoom:50%\">\n选择阈值时，需要多尝试几次，计算一个最高的信息增益，用它来分割连续值的特征。\n<img src=\"/img/24050615.png\" style=\"zoom:50%\">\n\n## 回归树\n决策树可以预测离散的值，将其推广就可以得到可以解决回归问题（即预测连续值）的**回归树**。\n比如此时想要预测一个动物的体重，假设此时已经有一个回归树，该回归树的叶子结点分别保存了不同的子数据集。在做出决策的时候，如果该样本落入了其中的一个节点，那么回归树会计算该节点中的所有数据的体重平均值，并预测此次样本的体重为该平均值。\n<img src=\"/img/24050701.png\" style=\"zoom:50%\">\n\n回归树在选择划分节点的时候，不是以信息增益作为标准的，而是以**子集的方差**作为标准。计算好以不同特征划分的树的子集的平均加权方差后，选择最低的值作为划分特征。同样的，再平均加权方差的基础上，再算一下方差减少，选择最大的方差减少，这在选择结果上和选择最低的平均加权方差的特征是一样的。\n<img src=\"/img/24050702.png\" style=\"zoom:50%\">\n\n## 决策树集合\n单个决策树对数据的微小变化很敏感。比如一个数据集中原本的根节点是耳朵形状，但是把数据集中的一个样本换一下，就可能导致根节点变为了胡须，递归下去就会得到两个完全不一样的决策树。为了解决这个问题，可以使用**树集合**，也就是建立多个决策树。\n训练好决策树集合后，对于新样本的预测，可以将该样本再所有树上都预测一遍，然后选择最多的预测结果作为最终的预测结果，如下图中2棵树认为它是猫，1棵认为它不是猫，那么最终的结果就是它是猫。 \n<img src=\"/img/24050703.png\" style=\"zoom:50%\">\n\n### 替换采样\n使用替换采样可以构建一个和原始数据集不同的数据集，这是构建树集合的关键一步。比如原数据集有10个动物，我们每次从这10个动物中随机选一个，然后将其放回，再随机选。这样选10次以后我们就会得到一个和原数据集不同的数据集，当然这个新数据集会有重复的数据，这无所谓。\n<img src=\"/img/24050704.png\" style=\"zoom:50%\">\n\n### 随机森林算法\n有了替换采样后，我们可以得到不同的数据集，进而可以构建出B个决策树。其中B的取值可以为64-228中的任何值。更大的取值虽然不会对模型的性能有损害，但是在超过某个临界点的时候，他的性能提升已经不明显了但是速度却下降了，性价比低，所以也不建议太大。这种又特定实例树组成的集合有时也称为袋装决策树。\n<img src=\"/img/24050705.png\" style=\"zoom:50%\">\n\n尽管已经构建了B个不同的树，但是在所有的B棵树中，也会遇到相同的根节点以及根节点附近的子树的根节点相同的情况。为了解决这个情况，可以进一步将数据集随机化。具体的做法是：每想选择一个特征作为决策节点的时候，若原数据集有n个特征，就随机选择其中k个子特征。每个节点选择的k个子特征都是随机选择，不一样的，不是说只选择一次，然后每个决策节点都用这k个。当n比较大时，k往往取n的平方根。这就是**随机森林算法**。\n<img src=\"/img/24050706.png\" style=\"zoom:50%\">\n\n由于数据集选择的随机性，随机森林算法在构建树的时候就已经考虑到了很多微小的变化，因此整个模型再经过随机的数据集训练后，对一些小变化会有更好的健壮性。\n\n\n### 增强决策树\n随机森林算法在构建新数据集上进一步增加了随机性，**增强决策树**则是在构建新数据集上更有针对性。对于之前构建的决策树分类失败的样本，增强决策树在选择新的数据集时给予这些样本更高的被选择到权重，这样就一步步加强了该模型原本的缺点。\n<img src=\"/img/24050707.png\" style=\"zoom:50%\">\n可以看到，第一棵树的数据集使用了替换采样，然后用原数据集测试这棵树，会发现几个分类错误的数据，那么接下来选择样本的时候，这些判断错误的数据将会有更大的概率被选中。具体大多少，为什么更大以后有时间深入研究一下吧。这样当构建了前B-1棵树后，第B棵树就有很多的前边错误分类的样本来参考。\nSGBoost tree就是一种很强的**增强决策树**\n<img src=\"/img/24050708.png\" style=\"zoom:50%\">\n\n## 决策树VS神经网络\n决策树一次只能训练一个，神经网络一次可以训练很多；\n单个决策树成本低于决策树集合；\n结构化数据如放假预测中，特征x可以存放在电子表格中。非结构化数据如图像声音文本等，不太方便存在表格中。\n等等。\n<img src=\"/img/24050708.png\" style=\"zoom:50%\">\n\n \n# 遇到的问题\n## 为什么神经网络的每一层能自动知道自己需要做什么？\n梯度下降，week1/TensorFlow/C2_W1_Lab02_CoffeeRoasting_TF.ipynb中最后部分提到了。\n\n## 为什么通过反向传播计算导数更高效？\n查阅了相关资料加上自己的一点儿思考，对于代价函数$J(\\vec{w},b)$,现在有3种方法求导：\n1. 利用导数定义求导数（以对$w_j$求导为例）：\n$$\n\\frac{\\partial J(w_j,b)}{\\partial w_j}=\\frac{J(w_j+\\varepsilon ,b)-J(w_j,b)}{\\varepsilon }\n$$\n若有n个w，则需要计算n次$J(w_j+\\varepsilon ,b)$.\n\n2. 反向传播求导，其实就是链式法则：\n\n反向传播需要借助计算图\n<img src=\"/img/2404137.png\" alt=\"computingGraph\" style=\"zoom:50%\">\n如图所示中间部分就是一个计算图。在第一种方法中，计算每个参数的导数的时候都需要将计算图中的4个框都走一遍，假设有N个框，P个参数，那么总次数就为NP次。\n而若利用计算图求导，在第一次从左至右计算出$J()$之后，就不需要重复计算了，只需要从右至左选择一条路径利用链式法则求偏导数即可求出每一个参数的导数，而这个过程中需要的计算数值，已经在第一次的从左至右计算中得到了。如J对d的导数为d，在正向传播中已经把d=2传递给了J对应的框中。\n$$\n\\left\\{\\begin{matrix}\n \\frac{\\partial J}{\\partial w_1} = \\frac{\\partial J}{\\partial d}\\frac{\\partial d}{\\partial a}\\frac{\\partial a}{\\partial c}\\frac{\\partial c}{\\partial w_1}\\\\ \n\\frac{\\partial J}{\\partial w_2} = \\frac{\\partial J}{\\partial d}\\frac{\\partial d}{\\partial a}\\frac{\\partial a}{\\partial c}\\frac{\\partial c}{\\partial w_2}\\\\ \n\\vdots \\\\\n\\frac{\\partial J}{\\partial b} = \\frac{\\partial J}{\\partial d}\\frac{\\partial d}{\\partial a}\\frac{\\partial a}{\\partial b}\\\\\n\\end{matrix}\\right.\n$$\n其中$\\frac{\\partial J}{\\partial a} = \\frac{\\partial J}{\\partial d}\\frac{\\partial d}{\\partial a}$这一项只计算一次即可，而这一项可以直接用于计算j对w和b的偏导数，因此总共需要计算N+P次。\n<img src=\"/img/2404138.png\" style=\"zoom:50%\">\n\n3. 利用公式求导计算\n\n其实最开始思考为什么反向传播快的时候，我第一反应是跟用求导公式比，但查资料的时候没发现有人用公式求导，疑惑了很久，这难道不应该是最先想到的办法吗？后来发现用公式计算应该就是反向传播\n以计算w的偏导数为例：\n$$\\quad\\quad w=w-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}}$$\n```python\nimport numpy as np\n# 前向传播\nz = np.dot(W, x) + b\ny = 1 / (1 + np.exp(-z))\n \n# 计算损失\nloss = -(y_ * np.log(y) + (1 - y_) * np.log(1 - y))\n \n# 反向传播\ndy = (y - y_)\ndw = np.dot(x, dy)\ndb = np.sum(dy)\n \n# 更新权重和偏差\nW -= learning_rate * dw\nb -= learning_rate * db\n```\n\n参考：\n[反向传播的直观理解](https://blog.csdn.net/qq_24568487/article/details/80782867/)\n[如何用计算图计算逻辑回归的偏导数](https://blog.csdn.net/weixin_42043935/article/details/128719354)\n\n\n## 为什么不同型的矩阵相加没报错？\n在JupyterLab的C2_W1_Assignment.ipynb(9)中，实现一个简单函数过程中，虽然能运行，但中间有个小细节有个疑问：\n```python\ndef my_dense_v(A_in, W, b, g):\n    \"\"\"\n    Computes dense layer\n    Args:\n      A_in (ndarray (m,n)) : Data, m examples, n features each\n      W    (ndarray (n,j)) : Weight matrix, n features per unit, j units\n      b    (ndarray (j,1)) : bias vector, j units  \n      g    activation function (e.g. sigmoid, relu..)\n    Returns\n      A_out (ndarray (m,j)) : m examples, j units\n    \"\"\"\n### START CODE HERE ### \n    Z = np.matmul(A_in,W) + b # A_in乘M是m*j，为什么能和j行的b相加\n    A_out = g(Z)\n### END CODE HERE ### \n    return(A_out)\n```\n\n查阅资料后发现NumPy可以通过广播(broadcasting)来扩展不同型的矩阵，使得两个矩阵可以进行逐元素运算如矩阵相加。他的操作过程是从两个矩阵的最后一个维度开始，向前比较两个矩阵的维度（即从右向左），如果比较的两个维度相等或者其中一个是1，那么这两个矩阵的维度是相容的，可以扩展他们使得二者可以运算，规则是低维向高维扩展。\n<table border=\"0\">\n  <tr>\n    <td style=\"border: none;\"><img src=\"/img/2404131.PNG\" style=\"zoom:70%;\" /></td>\n    <td style=\"border: none;\"><img src=\"/img/2404132.gif\" style=\"zoom:70%;\" /></td>\n  </tr>\n</table>\n\n## 矩阵相乘问题\n在选择激活函数的小节提到的使用线性函数作为激活函数没有做用推倒的公式是用标量推导的，但是应该能推广到矩阵，暂时留着，以后有空推导一下怎么推广以及矩阵乘的意义。","source":"_posts/ML-Andrew-Ng-1.md","raw":"---\ntitle: neural networks\ntags:\n  - AI\n  - machine learning\ncategories: Machine Learning\ndescription: something about neural networks\nabbrlink: 1ca572\ndate: 2024-01-29 21:41:06\n\n---\n\n同一系列的[监督学习](https://b-white07.github.io/posts/acf03113.html)和[无监督学习](https://b-white07.github.io/posts/9915f4c8.html)相关笔记点击查看。\n\n# 神经网络\n为了进行更复杂的预测，我们可以使用*神经网络*（又称多层感知机multilayer perceptron）。如图所示为一简单的神经网络，该神经网络有4层，其中layer1-3是隐藏层，layer4是输出层，最左边的input也可以算作layer0作为输入层，但一般说层数时不将其算在内。每层中的圆是一个*神经元*，这些神经元承担了神经网络的计算任务。神经元中可以使用不同的算法进行计算，这里假设每个神经元使用了逻辑回归模型$g(z) = \\frac{1}{1+e^{-z}},$其中$z=\\vec{w}  \\cdot  \\vec{x}+b$.当然，同一层中的不同神经元有不同的参数$\\vec{w}、b$.\n为了区别同一层中的不同神经元的参数，可以用下表表示该参数属于哪个神经元，如右侧放的的layer3中，有三个神经元，不同神经元参数的下标分别是1、2和3，表示他们分别是神经元1、2和3的参数；为了区别不同层神经元的参数，可以用上标表示该参数属于哪个layer，比如图中放大的layer3，其实可以给每个神经元的参数加上上标[3],就像$\\vec{a}^{[3]}$这样，表示他们都是layer3的参数，只不过图中未标出。\n<img src=\"/img/neuralNetwork.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n通过该图也可以大概了解神经网络的计算过程：将特征$\\vec{x}$输入给layer1，经过计算后layer1得到结果$\\vec{a}^{[1]}$（每一层输出的计算结果称为activations）,将它作为layer2的输入，以此类推，最终的output层会通过上一层的输入，计算出最终的结果，该结果是一个标量，根据它我们就可以做出相应的预测，这种方式称为向前传播。\n>个人思考：不同层中每个神经元参数的数量应该与上一层输出向量的维数有关。假设输入$\\vec{x}$是4纬向量，为了layer1中的每个神经元能够正常计算，$\\vec{w}$明显应该也是4维的；再如layer3中每个神经元参数$\\vec{w}$的维度，应该是layer2输出的activation的维度，layer2中有5个神经元，显然输出的是5维向量，那$\\vec{w}^{[3]}_i$应该都是5维的。\n\n如图所示为一人脸识别的应用，将一张图片分解为1000*1000个像素点，将这一百万个像素点作为输入特征，输入到一个有3个隐藏层的神经网络中，层层计算后，输出层会输出一个概率，来判断这个人是否匹配的概率。\n<img src=\"/img/face1.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n如果进一步看一下每一层的输出是什么，可以发现：第一层的输出是一个个细小的边缘，第二层的输出是范一些的小整体部分，像是耳朵眼睛什么的，第三层的输出范更大一些了，大概能看到一张脸。但是我们并没有告诉这个神经网络每一层应该做什么，他好像自己知道自己应该做什么一样。\n<img src=\"/img/face2.png\" alt=\"costfunvs\" style=\"zoom:50%;\" />\n\n# 使用tensorflow搭建神经网络\n## 训练模型\n### step1创建模型\n```python\n# 1使用Sequential创建神经网络\nimport tensorflow as tf \nfrom tensorflow.keras import Sequential \nfrom tensorflow.keras.layers import Dense\nmodel = Sequential([\n  Dense(units=25, activation='sigmoid'),\n  Dense(units=15, activation='sigmoid'),\n  Dense(units=1, activation='sigmoid')\n                  ])\n```\n这里调用了`Sequential()`函数，创建了一个三层神经网络并自动完成了向前传播。对于每一层中的所有神经元，都使用了sigmoid作为激活函数。\n### step2编译模型\n```python\n# 2编译模型并指定二元交叉熵损失函数\nfrom tensorflow.keras.losses import BinaryCrossentropy\nmodel.compile(loss=BinaryCrossentropy ())\n```\n二元交叉熵函数实际上就是course1中，逻辑回归模型使用的代价函数，它是sigmoid函数常用的损失函数：\n$$loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)}) = -y^{(i)} \\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right)$$\n### step3训练模型\n```python\n# 3调用fit函数，使用step2中的损失函数拟合step1中的模型，epochs指定梯度下降运行次数\nmodel.fit(X, y, epochs=100)\n```\n这里调用的`fit()`函数实现了反向传播，它使得计算偏导数更加高效。\n### step4利用模型预测\n```python\n# 4利用模型进行预测\nmodel.predice(x_new)\n```\n\n## 为什么需要激活函数以及如何选择\n激活函数是每一层中的神经元用于计算的函数，常见的激活函数有三种：线性函数、sigmoid函数和ReLU函数。\n下面对这几个函数简单介绍，其中$z=wx+b$\n- 线性函数\n\n最简单的，当所有隐藏层都使用线性函数$g(z)=z$作为激活函数：\n1. 输出层也使用线性函数作为激活函数时，输出$a_1=w_1x+b_1$将作为下一层的输入，因此下一层的输出为$a_2=w_2a_1+b_2=w_2(w_1x+b_1)+b_2=w_2w_1x+w_2b_1+b_2=wx+b$.就是说构建了这么复杂的神经网络，得到的效果和线性回归模型一样，这显然是没有必要的；\n2. 输出层使用sigmoid激活函数，同样能够证明，该神经网络也只能做到逻辑回归模型能做到的事情而已。\n\n基于上述两点，可以说当隐藏层使用线性函数作为激活函数时，该神经网络没有激活函数，因此需要选择其他合适的激活函数。\n\n- sigmoid激活函数\n\n$g(z)=\\frac{1}{1+e^{-z}}$,只能得到0和1之间的数值，因此常用于二元分类问题。\n\n- 整流线性函数ReLU\n\n$g(z)=max(0,z)$,可以看出，该函数能得到大于等于0的值，因此可以用于多元分类。\n<img src=\"/img/2404141.png\" style=\"zoom:50%;\" >\n除此之外，可以看到sigmoid函数与ReLU函数的另一个区别：sigmoid函数在z较小和较大时，函数图像较为平坦，也就是说自变量即使有较大的变化，函数值变化依然很小，这就导致了代价函数对于参数w的偏导数很小，因此w每次更新的就会很慢，也就是梯度下降的很慢。相比之下，ReLU函数只在z<0处平坦，另一边没有平坦的地方，因此梯度下降的会快一些。\n综上，对于隐藏层和输出层的激活函数的选择可以参考以下方案：\n隐藏层：使用ReLU较多，原因：1函数简单，计算更快; 2.只有左边是平坦的，而sigmoid两边都是平坦的，梯度下降遇到平坦的时候运行的很慢。\n输出层：根据输出的结果选，二元分类可以选sigmoid，输出有正有负可以选线性激活，输出非负可以选ReLU；\n\n如\n```python\nfrom tensorflow.keras.layers import Dense\nmodel = Sequential([\n  Dense(units=25, activation='relu'),\n  Dense(units=15, activation='relu'),\n  Dense(units=1, activation='sigmoid')\n                  ])\n```\n\n## 多分类和多标签\n### 多分类\n二元分类y只有两个结果，多元分类y仍是离散值，只不过有多种结果。在多分类问题中，常使用softmax回归模型。\n假设输出值y有N个离散值（像数字识别0-9，y就有10个不同的离散值），softmax回归模型可以定义如下：\n$$z_j=\\vec{w_j}·\\vec{x}+b_j \\;\\;\\; j=1,2,...,N \\\\\na_j=\\frac{e^{z_j}}{\\sum_{k=1}^{N}e^{z_k}}=P(y=j|\\vec{x})$$\n特别的，当N=2时：$a_j=\\frac{e^{z_1}}{e^{z_1}+e^{z_2}}=\\frac{1}{1+e^{-(z_1-z_2)}}=\\frac{1}{1+e^{-z}}$,于是softmax就变成了sogmoid（自己想的，不知道对不对，应该对吧）.所以softmax是sogmoid的一般化。\n如y有4个输出值，则\n$$z_1=\\vec{w_1}·\\vec{x}+b_1 \\qquad\\qquad\na_1=\\frac{e^{z_1}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}}=P(y=1|\\vec{x})\\\\\nz_2=\\vec{w_2}·\\vec{x}+b_2 \\qquad\\qquad\na_2=\\frac{e^{z_2}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}}=P(y=2|\\vec{x})\\\\\nz_3=\\vec{w_3}·\\vec{x}+b_3 \\qquad\\qquad\na_3=\\frac{e^{z_3}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}}=P(y=3|\\vec{x})\\\\\nz_4=\\vec{w_4}·\\vec{x}+b_4 \\qquad\\qquad\na_4=\\frac{e^{z_4}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}}=P(y=4|\\vec{x})\\\\\n\\qquad\\qquad \\\\\nin \\quad which: a1 + a2 + a3 + a4 = 1$$\n\nsoftmax的损失函数\n$$loss(a1,...,a_N,y) = \\left\\{\\begin{matrix}\n -\\log a_1, & if \\quad y=1\\\\\n -\\log a_2, & if \\quad  y=2\\\\\n \\vdots \\\\\n  -\\log a_N, & if \\quad  y=N\n\\end{matrix}\\right.$$\n\n其实和二元逻辑回归很类似，如果将二元回归中y=1的概率记为$a_1$，那么y=0的概率$a_2=1-a_1$则二元逻辑回归损失函数就变成了：\n$$loss = -y \\log a_1- \\left( 1 - y\\right) \\log \\left( 1 - a_1\\right)$$\n即\n$$loss = \\left\\{\\begin{matrix}\n -\\log a_1, & if \\quad y=1\\\\\n -\\log a_2, & if \\quad  y=0\\\\\n\\end{matrix}\\right.$$\n\n将softmax函数作为输出层，则输出层有10个单元，不同于sigmoid作为输出层函数，只有一个神经元。而且线性激活函数、ReLU激活函数、sigmoid激活函数作为输出层时，每个输出结果$a_j$只与$z_j$有关，而softmax的每个$a_j$与所有的$z_j$都有关。\n\ntensorflow实现\n```python\nimport tensorflow as tf \nfrom tensorflow.keras import Sequential \nfrom tensorflow.keras.layers import Dense\nmodel = Sequential ([\n  Dense(units=25, activation='relu'),\n  Dense(units=15, activation='relu'),\n  Dense(units=10, activation='softmax')\n                    ])\n\nfrom tensorflow.keras.losses import SparseCategoricalCrossentropy\nmodel.compile(loss=SparseCategoricalCrossentropy())\n\nmodel. fit(X,Y,epochs=100)\n```\n上边的代码可以运行softmax但是不推荐，下边的代码实现的softmax神经网络可以减少舍入误差。\n改进后：将输出层的激活函数换成linear,同时改变compile中SparseCategoricalCrossentrop的参数。\n```python\nimport tensorflow as tf\nfrom tensorflow.keras import Sequential\nfrom tensorflow.keras.layers import Dense\nmodel = Sequential([\n  Dense(units=25, activation='relu'),\n  Dense(units=15, activation='relu'),\n  Dense(units=10, activation='linear') \n                  ])\n\nfrom tensorflow.keras.losses import SparseCategoricalCrossentropy\nmodel.compile(...,loss=SparseCategoricalCrossentrop(from_logits=True))\n\nmodel.fit(X,Y,epochs=100)\n```\n\n参数from_logits默认为False,那么对应的输出层此时激活函数为softmax，此时输出层的结果是经过了softmax处理的，最后的概率$a$,然后将$a$作为中间量传递给损失函数，这就导致了误差的产生。而若将参数设置为True,那么对应的此时输出层的激活函数为linear,他所计算的是$z=wx+b$的$z$，而不是最后的概率$a$.此时tensorflow做的是将整个softmax函数作为参数传递给损失函数，于是损失函数就变成了\n$$loss(a1,...,a_N,y) = \\left\\{\\begin{matrix}\n -\\log \\frac{e^{z_1}}{\\sum_{k=1}^{N}e^{z_k}}, & if \\quad y=1\\\\\n \\vdots \\\\\n  -\\log \\frac{e^{z_j}}{\\sum_{k=1}^{N}e^{z_k}}, & if \\quad  y=N\n\\end{matrix}\\right.$$\n也就没有了中间变量$a$带来的误差。然后对于上边的式子，tensorflow会重新排列其顺序，使误差更小（重新排列会避免一些很大或很小的$z$值，从而避免一些舍入，因此精度也会提高）。\n参考：[keras.losses中from_logits的作用](https://blog.csdn.net/muyuu/article/details/122762442)\n\n>关于舍入误差\n<img src=\"/img/2404151.png\" style=\"zoom:50%\">\n可以看出，使用不同的形式计算同一个值会出现不同的结果，原因是精度问题。由于存储字长的限制，很多小数是无法精确在计算机内部表示的，所以如果存在中间变量，那么存到这个中间变量中的结果是经过舍入的。如b中的1+1/10000和1-1/10000,这两部分是经过舍入后的结果，因此最终结果会有一定偏差。\n\n### 多标签\n多分类中，以识别数字为例，输出y是一个标量，对于一个输入x，他要做的事判断x是什么。而多标签问题中，输出y是一个向量，对于一个输入x，他想表达的是x的一些属性，比如：\n<img src=\"/img/2404152.png\" style=\"zoom:50%\">\n对于同一张图片，我们想要知道该图片中是否有行人、汽车和公交。可以将这三个视为该图片的属性。可以看出来，判断每个属性其实就是一个二元分类问题，我们可以根据属性个数构建对应个数的神经网络，但这很繁琐，我们完全可以构建一个神经网络，只不过让输出层有3个输出就可以了。由于每个属性都是二元分类，因此输出层的每个神经元使用sigmoid就可以了。\n\n## 代价函数高级优化方法\n梯度下降算法中，选择合适的学习率$\\alpha$很关键，太大太小都不好。Adam算法可以在梯度下降的过程中自动调整$\\alpha$的大小：$\\alpha$小了让它大一些；$\\alpha$大了则让他变小。因此他比梯度下降算法快很多。除此之外，梯度下降算法中，所有的参数共用一个$\\alpha$，但是Adam算法中，每个参数有自己的$\\alpha$.即\n$$\nw_1 = w_1 -  \\alpha_1 \\frac{\\partial J(\\vec{w},b)}{\\partial w_1} \\\\ \n\\vdots \\\\\nw_{10} = w_{10} -  \\alpha_{10} \\frac{\\partial J(\\vec{w},b)}{\\partial w_{10}} \\\\ \nb = b -  \\alpha_{11} \\frac{\\partial J(\\vec{w},b)}{\\partial b} \\\\\n$$\n<img src=\"/img/2404136.png\" style=\"zoom:40%\">\n\n```python\n# model\nmodel = Sequential([\ntI.keras.layers.Dense(units=25, activation='sigmoid'),\ntf.keras.layers.Dense(units=15, activation='sigmoid'),\ntf.keras.layers.Dense(units=10, activation='linear')\n])\n# compile 需要给一个初始的学习率\nmodel.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=1e-3),\nloss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True))\n# fit\nmodel.fit(X,Y,epochs=100)\n```\n\n## 其他网络层类型\n密集层类型Dense：之前代码中，我们使用Dense函数构建的每一层的类型是密集层，密集层中每个神经元都使用了input**全部的**特征。\n卷积层类型Convolutional：卷积层中的每个神经元仅仅使用input的**一部分**特征。这种做法更快、需要的训练数据更少而且不太容易过拟合。但是输入窗口的大小需要合理选择。\n<img src=\"/img/24041310.png\" style=\"zoom:50%\">\n\n\n# 优化模型\n## 模型评估\n在训练模型的时候，我们会通过带有正则化项的损失函数来训练参数，但是在评估模型性能的时候，往往通过没有正则化项的损失函数来评估模型的性能。\n我们可以将数据集分为两部分，一部分用作训练，一部分用作测试，比例可以是7：3或者8:2等。在评估模型的过程中需要做三个事情：\n1.损失函数，带正则化项\n2.计算test error:Jtest，用测试样本计算J，不带正则化项。Jtest用于判断该模型表现如何\n3.计算train error:Jtrain，用训练样本计算J，不带正则化项。Jtrain衡量了该模型在训练集上表现如何\n\n对于分类问题，Jtest和Jtrain的定义有另一种更为常见的方式：不用逻辑回归的损失函数来计算二者，而分别用二者的错误分类分数来衡量。如Jtest是测试集中将0判断为1，将1判断为0的分数；Jtrain是训练集中将0判断为1，将1判断为0的分数。\n\n## 模型选择\n在一个问题中，有时我们不确定需要什么样子的模型，比如是用1次的线性模型还是更为高次的方程呢？此时我们可以构建多个模型，然后用训练集训练这些模型，训练好以后用测试集来评估这些模型的性能，选择一个Jtest最低的模型。此时Jtest其实做了两件事情：他通过评估每个模型的Jtest(第一件事)来选择了一个性能最好的模型（第二件事）。但是此时说Jtest起到了评估模型的作用其实有点儿不合适，此时Jtest对模型的评估往往比实际误差更小，因为Jtest参与了模型选择的工作，用它来评估自己选择出来的模型损失当然比较小。所以应该把Jtest仅仅作为模型选择的方式，而不应该用它继续做模型评估。\n那对于这种情况，就需要新的数据集对已经选择出来的模型评估，所以上述将整个数据集划分为2部分已经不够用了，我们可以将整个数据集划分为三部分：训练集、交叉验证集（AKA验证集AKA开发集AKA dev集）和测试集（比例可以为0.6、0.2、0.2.），并用这三部分分别计算Jtrain、Jcv和Jtest.其中Jtrain用来训练模型，Jcv用来选择模型，到此为止模型已经选择完成了，然后再用Jtest用来评估泛化误差。由于Jtest并未参与模型选择之前的一切工作，因此用它来评估泛化误差会更为准确。\n这种方法也可以用来选择神经网络架构：有几层？每层几个神经元？等。\n\n>再次理解Jtest和Jcv都是20%的样本，为什么Jtest能更准确的得到误差？\n因为用Jtrain训练好模型以后，我们使用Jcv来选择了一个损失最低的模型，就是说我们选择的模型是对应于Jcv这几个样本下的最好模型。至此模型就选择好了。\n选择好以后再用Jtest来测试最终选择的模型的好坏，是因为Jtest的这几个样本全程没有参与，因此得到的模型的泛化损失更准确。\n\n## 正则化、偏差、方差\n高偏差的表现：Jtrain很高，如果模型的bias高，那么仅仅通过增加训练集，无法使模型得到优化。\n<img src=\"/img/24042403.png\" style=\"zoom:50%\">\n高方差的表现：Jcv远高于Jtrain，如果模型的variance高，那么可以通过仅仅增加训练集来优化模型。\n<img src=\"/img/24042404.png\" style=\"zoom:50%\">\n模型不错的表现：Jtrain低且Jcv没有远高于Jtrain.\n通过下图所示的*学习曲线*可以较直观看出模型的偏差和方差（绘制学习曲线不一定用到整个训练集，可以取训练集的子集做一个预判）。\n<img src=\"/img/24042402.png\" style=\"zoom:50%\">\n\n要注意，有时候Jtrain较高并不一定意味着模型不好，如语音识别，有时语音中有噪音，这导致了即使人工识别也会有误差，因此可以允许Jtrain稍大，此时需要与人工识别的误差做比较而不是仅仅关注Jtrain的表现，这其实将人工识别的准确性作为了评估性能的**基准**。\n<img src=\"/img/24042401.png\" style=\"zoom:50%\">\n\n正则化参数 $\\lambda$对bias和variance的影响：$\\lambda$ 过大，会导致w很小，导致f(x)趋向于b；$\\lambda$ 过小，导致w很大，则相当于没有正则化。\n<img src=\"/img/24042801.png\" style=\"zoom:50%\">\n所以要为模型选择合适的$\\lambda$：选择$\\lambda$的方法和前面选择模型的方法很类似，也需要借助于Jcv.\n<img src=\"/img/24042802.png\" style=\"zoom:50%\">\n偏差和方差作为$\\lambda$的函数有如下特性：\n<img src=\"/img/24042803.png\" style=\"zoom:50%\">\n\n几个解决高偏差和高方差的方法：\n1.神经网络可以解决high bias和high variance的均衡（tradeoff）问题\n只要训练集不是很大，大型神经网络都是low bias的。\n<img src=\"/img/24042406.png\" style=\"zoom:50%\">\n大型神经网络会比小的慢，但是如果正则化得当，其表现只会比小的更好。\n<img src=\"/img/24042407.png\" style=\"zoom:50%\">\n<img src=\"/img/24042408.png\" style=\"zoom:50%\">\n\n2.可以参考如下的几种方式\n<img src=\"/img/24042405.png\" style=\"zoom:50%\">\n\n## 机器学习开发的迭代\n第一次构建好一个机器学习的架构以后，往往该模型性能有待提高，可以通过如下方式循环提高模型的性能\n<img src=\"/img/24042501.png\" style=\"zoom:50%\">\n\n其中**误差分析**是一种手动分析模型的方法：假设你的模型用于判断一个邮件是否为垃圾邮件，该模型误判断了100封邮件，此时为了进一步针对性地提高模型性能，你需要手动查看这100封邮件，看看该模型误判的这些邮件都是什么类型的。比如其中40封是医药相关的、7封是故意拼写错误的（故意拼写错误有时可以避免被当作垃圾邮件）、35封是钓鱼邮件等等。显然该模型对于医药相关邮件和钓鱼邮件的判断准确度不够，因此可以针对这两类邮件选择相应的方法来提高模型的准确性，像收集更多的数据等等。\n<img src=\"/img/24042502.png\" style=\"zoom:50%\">\n\n增加数据的方法：\n1.针对性的添加数据集，如上边的例子中，你当然可以在数据集中添加各种类型的垃圾邮件，但是如果针对性的添加模型表现不好的类型的数据，如添加医药相关的垃圾邮件和钓鱼邮件的数据，会更有性价比。\n2.数据增强（由于对于图像和音频处理时）：通过修改已有的数据集来创建新的数据集。\n如在图像识别中，训练集中已有一个A的图像，那么我们可以将该图像旋转、放大、缩小等，这实际上就差生了新的训练集（通过原来的x产生了新的x），但是y仍然没有改变（A还是A）。\n<img src=\"/img/24042503.png\" style=\"zoom:50%\">\n\n除此之外，还可以将图像放置于网格中，然后扭曲该网格图来获取更多的训练集，这种做法可以提高程序的健壮性。\n<img src=\"/img/24042504.png\" style=\"zoom:50%\">\n\n类似的，在语音识别中，可以通过给语音添加背景噪声的方法或者用稍微差一些的设备录音已获得新的训练集。\n<img src=\"/img/24042505.png\" style=\"zoom:50%\">\n\n3.数据合成：人工创造新的训练集而不是将已有的数据集修改为新的。\n如下图的OCR应用中，左图为在真实照片中识别到的数据，右图是人工合成的数据。右图的数据是通过在文本编辑器中，用不同的字体打字，然后截屏，再通过调整对比度等等得到的，这样就得到了可以用于ORC训练的数据集\n<img src=\"/img/24042506.png\" style=\"zoom:50%\">\n\n4.迁移学习(transfer learning)：使用不同任务的数据来训练模型。\n如有模型一用于识别图片中的猫狗等1000个类别，而你想搭建一个用于识别数字的模型二，你可以将模型一的输出层修改为自己需要的，比如数字识别中，输出层只需要10个units.于是只需要将模型一的输出层的1000个units改为10个units就得到了模型二。接下来有两种做法可以选择：第一种是保持模型二复制来的隐藏层参数不变，仅训练输出层的参数；另一种做法是将复制过来的所有隐藏层参数作为初始值，训练模型二的全部层的参数。在本例中，对模型一的训练称为*监督预训练(Supervised pretraining)*，对模型二的训练称为*微调(Fine tuning)*.\n<img src=\"/img/24042507.png\" style=\"zoom:50%\">\n\n这么做是因为可能你用于模型二训练的数据集不够多，而用于训练模型一的数据集充足。而且迁移学习的一个好处是你也许不用亲自训练模型一，可以直接copy别人的。\n迁移学习之所以有效是因为在图像识别模型中，第一个隐藏层总是识别边，第二个识别角，第三个识别范围更大一些的基本形状，这对识别任何图片都是有帮助的。因此若想有效的迁移学习，需要保证用于预训练的模型与用于微调的模型要有**相同类型的输入**。如你的任务是计算机视觉相关，那么预训练的模型的输入图片x需要与你的输入图片x有相同的维度。同样的，你的任务是语音识别，那预训练的模型也得是用语音数据训练的。\n<img src=\"/img/24042508.png\" style=\"zoom:50%\">\n\n机器学习项目的完整周期可以用下图表示：\n<img src=\"/img/24043001.png\" style=\"zoom:50%\">\n关于部署：\n<img src=\"/img/24043002.png\" style=\"zoom:50%\">\n其中MLOps指的是构建，部署和维护机器学习系统，他也是机器学习的一个领域。\n\n## 倾斜数据集的误差指标、精确率与召回率\n倾斜数据集指的是数据集中的正例样本和负例样本差别非常大，远远不是55开，此时若使用准确度作为误差指标，结果往往不好。比如如果现在有一个病人的数据集，在该数据集中，仅有0.5%的患者患有一种罕见病，那么如果你的模型判断一个病人是否有这种罕见病的逻辑是`y=0`(一直预测病人没得这个病),那该模型的准确率也会达到99.5%,一个看起来不错的表现，但实际上这个模型并不行对吧。此时就需要其他的误差指标来衡量该模型的性能。\n一对常用的指标是**精确率**和**召回率**。为了理解这两个概念，需要引入**混淆矩阵**。\n<img src=\"/img/24043003.png\" style=\"zoom:50%\">\n上图中的2*2矩阵就是混淆矩阵（以2*2为例，可以是n*n的，主对角线是预测对的，其余都是预测错的）。可以看出，精确率其实就是模型预测患病的病人中，多少人是真正患病的；召回率就是在所有真正患病病人中，该模型找到了多少。因此我们要追求这两个指标都高的模型。若一个模型仅仅用`y=0`作为预测，那么TP=0，进一步的精确率和召回率均为0，所以该模型并不是一个好模型，是个小垃圾。\n\nTrading off precision and recall:\n在之前的例子中，我们通常选0.5作为门槛，但是如果想更强调精确度的话，可以将threhold提高；若想强调召回率，可以将threhold降低。观察精确度和召回率的公式：若将threhold提高，那其实预测为1的数量就会变低，因此TP就会变低，那precision的分子分母都会变小，不好判断。但从另一个角度，若提高threhold，说明该模型只在有较高把握的情况下才会做出y=1的判断，因此precision会提高；而实际上的y=1是不会变化的，因此recall会变低。下图反应了precision和recall对于threhold的关系：\n<img src=\"/img/24043004.png\" style=\"zoom:50%\">\n\n如果想要自动均衡精确度和召回率，可以使用另一种误差指标**F1 score**,实际上就是precision和recall的调和平均值，该值更强调相对较小的数（若一个数很小，他在分母上就会变的很大，所以整体也会偏小，接近小的值）。这样就不需在二者之间做出均衡只看F1 score就可以了。\n<img src=\"/img/24043005.png\" style=\"zoom:50%\">\n\n\n# 决策树模型\n下图为一个数据集，其输入特征x都是二元的，输出y也是二元的：\n<img src=\"/img/24050600.png\" style=\"zoom:50%\">\n\n如下图所示为几个不同的决策树，其中的椭圆节点称为**决策节点(decision nodes)**,下边的矩形节点就是叶子结点(leaf nodes)。这些决策树可能是同一数据集训练出来的不同模型，决策树学习算法就是从这些模型中选择一个较好的。\n<img src=\"/img/24050601.png\" style=\"zoom:50%\">\n\n## 建立决策树的关键问题\n首先，从输入的特征中选择一个特征作为决策树的根节点。比如此处将耳朵形状作为根节点；\n<img src=\"/img/24050602.png\" style=\"zoom:50%\">\n\n然后，关注一个子树并确定该子树的根节点；\n<img src=\"/img/24050603.png\" style=\"zoom:50%\">\n\n接着，重复上边的操作将数据集划分为合适的子集，并将这些子集作为叶子结点；\n最后，回到step2并选择另外一个子树，重复上面的动作。\n<img src=\"/img/24050604.png\" style=\"zoom:50%\">\n\n这其中有两个关键的问题：决策节点的选择和叶节点什么时候该出现。\n在选择决策节点的时候，尽量选择一些可以将数据集划分为两个高纯度的子集：如本例中，可以在耳朵形状、脸型、是否有胡须中选择一个作为根 节点，他们的效果如下图所示。\n<img src=\"/img/24050605.png\" style=\"zoom:50%\">\n但是如果有一个特征是DNA，那么我们可以用DNA百分之百将整个数据集分为猫和非猫两个子集，所以DNA这个特征就可以作为一个很不错的决策节点。\n而对于什么时候该出现叶节点了，通常有四个参考标准：第一是数据集已经完全划分为目标子集了，比如当前的所有子集都是要么全是猫，要么全部是猫；第二是如果继续向下分裂或导致超过决策树的最大高度。决策树的高度是有限制的，做出限制的原因有两个：其一是不会变的太大而笨重，其二是小树不容易过拟合。很多时候其实也是希望树高尽可能小，像二叉排序树这种的，树高往往代表的查找效率；第三是纯度分数的提高低于某个阈值；第四是某个节点的样本数量小于某个阈值。\n<img src=\"/img/24050606.png\" style=\"zoom:50%\">\n\n## 熵(entropy)和信息增益(information gain)\n一个数据集若全是猫，则该数据集很纯；一个数据集若全不是猫，则该数据集同样很纯；如果一个数据集有猫有其他的，则就可以用**熵**来衡量该数据集的纯度，熵越高，则数据集越不纯。\n若将数据集中猫的比例记为$p_1$，则不是猫的比例$p_0=1-p_1$,则$p_1$的熵可以定义为$H(p_1)=-p_1log_2(p1)-p_0log_2(p_0)$,其中取2为底是因为当$p_1=p_0=1/2$时（二元分类二者相等只能为0.5），$H()$可以为$1$.这样的意义看起来更明确方便一些。同时注意到熵的定义和逻辑回归模型的损失函数挺像的。\n<img src=\"/img/24050607.png\" style=\"zoom:50%\">\n\n有了熵的帮助后，就可以更好的选择决策节点：应该选择使熵尽可能小的特征作为决策节点。\n现在分别计算以不同特征为决策节点，得到的决策树的两个分支的$H(p_1)$,由于每个树有两个熵，为了便于选择，求出两个熵的加权平均熵，选择最低的即可。\n<img src=\"/img/24050608.png\" style=\"zoom:50%\">\n\n为了遵循决策树的惯例，上边的计算还没做完，需要进一步计算信息增益，但这并不会影响结果。决策树学习中，熵的减少称为**信息增益(information gain)**，他衡量了由于分裂而导致的树的熵的减少的量。\n最初始的根节点中有5只猫和5只其他，那么$p_1=0.5,H(p_1)=1$，这是没有分裂时树的熵，用这个值减去树分裂后的加权平均熵即可得到信息增益，信息增益最大的决策树就是我们想要的。\n<img src=\"/img/24050609.png\" style=\"zoom:50%\">\n\n此外，信息增益还可以帮助我们判断事都要继续分裂还是将当前节点作为叶子结点。若信息增益太小了，那表示即使分裂也不会使熵减少的太多，但是分裂导致的树高增加会导致过拟合，因此此时可以停止分裂，将当前数据集作为叶子结点。\n下面给出了信息增益的严格定义：\n<img src=\"/img/24050610.png\" style=\"zoom:50%\">\n\n## 建立决策树的步骤\n<img src=\"/img/24050611.png\" style=\"zoom:50%\">\n可以看出其实构建决策树是一个迭代的过程。\n\n## one-hot编码\n上边的数据集中，每个特征的取值只有两种情况。下边的数据集中，耳朵形状的取值有3个，若采用之前的方法将其作为决策节点，则可以构建出一个有三个子树的决策树：\n<img src=\"/img/24050612.png\" style=\"zoom:50%\">\n若将数据集稍作更改，其实可以将数据集变成和之前的数据集一样，每个特征只有两个取值：\n<img src=\"/img/24050613.png\" style=\"zoom:50%\">\n如果一个特征有k种取值，那么通过**one-hot编码**可以将该特征转换为k个2进制特征。同样的，若将Face shape的两种取值和Whiskers的两种取值分别记做0和1，那么该数据集就可以用来训练神经网络。\n\n## 有连续值特征的决策树\n若一个特征是有连续值的而不是离散值，我们可以为该连续特征选择一个阈值，以该阈值作为决策节点划分子树。\n<img src=\"/img/24050614.png\" style=\"zoom:50%\">\n选择阈值时，需要多尝试几次，计算一个最高的信息增益，用它来分割连续值的特征。\n<img src=\"/img/24050615.png\" style=\"zoom:50%\">\n\n## 回归树\n决策树可以预测离散的值，将其推广就可以得到可以解决回归问题（即预测连续值）的**回归树**。\n比如此时想要预测一个动物的体重，假设此时已经有一个回归树，该回归树的叶子结点分别保存了不同的子数据集。在做出决策的时候，如果该样本落入了其中的一个节点，那么回归树会计算该节点中的所有数据的体重平均值，并预测此次样本的体重为该平均值。\n<img src=\"/img/24050701.png\" style=\"zoom:50%\">\n\n回归树在选择划分节点的时候，不是以信息增益作为标准的，而是以**子集的方差**作为标准。计算好以不同特征划分的树的子集的平均加权方差后，选择最低的值作为划分特征。同样的，再平均加权方差的基础上，再算一下方差减少，选择最大的方差减少，这在选择结果上和选择最低的平均加权方差的特征是一样的。\n<img src=\"/img/24050702.png\" style=\"zoom:50%\">\n\n## 决策树集合\n单个决策树对数据的微小变化很敏感。比如一个数据集中原本的根节点是耳朵形状，但是把数据集中的一个样本换一下，就可能导致根节点变为了胡须，递归下去就会得到两个完全不一样的决策树。为了解决这个问题，可以使用**树集合**，也就是建立多个决策树。\n训练好决策树集合后，对于新样本的预测，可以将该样本再所有树上都预测一遍，然后选择最多的预测结果作为最终的预测结果，如下图中2棵树认为它是猫，1棵认为它不是猫，那么最终的结果就是它是猫。 \n<img src=\"/img/24050703.png\" style=\"zoom:50%\">\n\n### 替换采样\n使用替换采样可以构建一个和原始数据集不同的数据集，这是构建树集合的关键一步。比如原数据集有10个动物，我们每次从这10个动物中随机选一个，然后将其放回，再随机选。这样选10次以后我们就会得到一个和原数据集不同的数据集，当然这个新数据集会有重复的数据，这无所谓。\n<img src=\"/img/24050704.png\" style=\"zoom:50%\">\n\n### 随机森林算法\n有了替换采样后，我们可以得到不同的数据集，进而可以构建出B个决策树。其中B的取值可以为64-228中的任何值。更大的取值虽然不会对模型的性能有损害，但是在超过某个临界点的时候，他的性能提升已经不明显了但是速度却下降了，性价比低，所以也不建议太大。这种又特定实例树组成的集合有时也称为袋装决策树。\n<img src=\"/img/24050705.png\" style=\"zoom:50%\">\n\n尽管已经构建了B个不同的树，但是在所有的B棵树中，也会遇到相同的根节点以及根节点附近的子树的根节点相同的情况。为了解决这个情况，可以进一步将数据集随机化。具体的做法是：每想选择一个特征作为决策节点的时候，若原数据集有n个特征，就随机选择其中k个子特征。每个节点选择的k个子特征都是随机选择，不一样的，不是说只选择一次，然后每个决策节点都用这k个。当n比较大时，k往往取n的平方根。这就是**随机森林算法**。\n<img src=\"/img/24050706.png\" style=\"zoom:50%\">\n\n由于数据集选择的随机性，随机森林算法在构建树的时候就已经考虑到了很多微小的变化，因此整个模型再经过随机的数据集训练后，对一些小变化会有更好的健壮性。\n\n\n### 增强决策树\n随机森林算法在构建新数据集上进一步增加了随机性，**增强决策树**则是在构建新数据集上更有针对性。对于之前构建的决策树分类失败的样本，增强决策树在选择新的数据集时给予这些样本更高的被选择到权重，这样就一步步加强了该模型原本的缺点。\n<img src=\"/img/24050707.png\" style=\"zoom:50%\">\n可以看到，第一棵树的数据集使用了替换采样，然后用原数据集测试这棵树，会发现几个分类错误的数据，那么接下来选择样本的时候，这些判断错误的数据将会有更大的概率被选中。具体大多少，为什么更大以后有时间深入研究一下吧。这样当构建了前B-1棵树后，第B棵树就有很多的前边错误分类的样本来参考。\nSGBoost tree就是一种很强的**增强决策树**\n<img src=\"/img/24050708.png\" style=\"zoom:50%\">\n\n## 决策树VS神经网络\n决策树一次只能训练一个，神经网络一次可以训练很多；\n单个决策树成本低于决策树集合；\n结构化数据如放假预测中，特征x可以存放在电子表格中。非结构化数据如图像声音文本等，不太方便存在表格中。\n等等。\n<img src=\"/img/24050708.png\" style=\"zoom:50%\">\n\n \n# 遇到的问题\n## 为什么神经网络的每一层能自动知道自己需要做什么？\n梯度下降，week1/TensorFlow/C2_W1_Lab02_CoffeeRoasting_TF.ipynb中最后部分提到了。\n\n## 为什么通过反向传播计算导数更高效？\n查阅了相关资料加上自己的一点儿思考，对于代价函数$J(\\vec{w},b)$,现在有3种方法求导：\n1. 利用导数定义求导数（以对$w_j$求导为例）：\n$$\n\\frac{\\partial J(w_j,b)}{\\partial w_j}=\\frac{J(w_j+\\varepsilon ,b)-J(w_j,b)}{\\varepsilon }\n$$\n若有n个w，则需要计算n次$J(w_j+\\varepsilon ,b)$.\n\n2. 反向传播求导，其实就是链式法则：\n\n反向传播需要借助计算图\n<img src=\"/img/2404137.png\" alt=\"computingGraph\" style=\"zoom:50%\">\n如图所示中间部分就是一个计算图。在第一种方法中，计算每个参数的导数的时候都需要将计算图中的4个框都走一遍，假设有N个框，P个参数，那么总次数就为NP次。\n而若利用计算图求导，在第一次从左至右计算出$J()$之后，就不需要重复计算了，只需要从右至左选择一条路径利用链式法则求偏导数即可求出每一个参数的导数，而这个过程中需要的计算数值，已经在第一次的从左至右计算中得到了。如J对d的导数为d，在正向传播中已经把d=2传递给了J对应的框中。\n$$\n\\left\\{\\begin{matrix}\n \\frac{\\partial J}{\\partial w_1} = \\frac{\\partial J}{\\partial d}\\frac{\\partial d}{\\partial a}\\frac{\\partial a}{\\partial c}\\frac{\\partial c}{\\partial w_1}\\\\ \n\\frac{\\partial J}{\\partial w_2} = \\frac{\\partial J}{\\partial d}\\frac{\\partial d}{\\partial a}\\frac{\\partial a}{\\partial c}\\frac{\\partial c}{\\partial w_2}\\\\ \n\\vdots \\\\\n\\frac{\\partial J}{\\partial b} = \\frac{\\partial J}{\\partial d}\\frac{\\partial d}{\\partial a}\\frac{\\partial a}{\\partial b}\\\\\n\\end{matrix}\\right.\n$$\n其中$\\frac{\\partial J}{\\partial a} = \\frac{\\partial J}{\\partial d}\\frac{\\partial d}{\\partial a}$这一项只计算一次即可，而这一项可以直接用于计算j对w和b的偏导数，因此总共需要计算N+P次。\n<img src=\"/img/2404138.png\" style=\"zoom:50%\">\n\n3. 利用公式求导计算\n\n其实最开始思考为什么反向传播快的时候，我第一反应是跟用求导公式比，但查资料的时候没发现有人用公式求导，疑惑了很久，这难道不应该是最先想到的办法吗？后来发现用公式计算应该就是反向传播\n以计算w的偏导数为例：\n$$\\quad\\quad w=w-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}}$$\n```python\nimport numpy as np\n# 前向传播\nz = np.dot(W, x) + b\ny = 1 / (1 + np.exp(-z))\n \n# 计算损失\nloss = -(y_ * np.log(y) + (1 - y_) * np.log(1 - y))\n \n# 反向传播\ndy = (y - y_)\ndw = np.dot(x, dy)\ndb = np.sum(dy)\n \n# 更新权重和偏差\nW -= learning_rate * dw\nb -= learning_rate * db\n```\n\n参考：\n[反向传播的直观理解](https://blog.csdn.net/qq_24568487/article/details/80782867/)\n[如何用计算图计算逻辑回归的偏导数](https://blog.csdn.net/weixin_42043935/article/details/128719354)\n\n\n## 为什么不同型的矩阵相加没报错？\n在JupyterLab的C2_W1_Assignment.ipynb(9)中，实现一个简单函数过程中，虽然能运行，但中间有个小细节有个疑问：\n```python\ndef my_dense_v(A_in, W, b, g):\n    \"\"\"\n    Computes dense layer\n    Args:\n      A_in (ndarray (m,n)) : Data, m examples, n features each\n      W    (ndarray (n,j)) : Weight matrix, n features per unit, j units\n      b    (ndarray (j,1)) : bias vector, j units  \n      g    activation function (e.g. sigmoid, relu..)\n    Returns\n      A_out (ndarray (m,j)) : m examples, j units\n    \"\"\"\n### START CODE HERE ### \n    Z = np.matmul(A_in,W) + b # A_in乘M是m*j，为什么能和j行的b相加\n    A_out = g(Z)\n### END CODE HERE ### \n    return(A_out)\n```\n\n查阅资料后发现NumPy可以通过广播(broadcasting)来扩展不同型的矩阵，使得两个矩阵可以进行逐元素运算如矩阵相加。他的操作过程是从两个矩阵的最后一个维度开始，向前比较两个矩阵的维度（即从右向左），如果比较的两个维度相等或者其中一个是1，那么这两个矩阵的维度是相容的，可以扩展他们使得二者可以运算，规则是低维向高维扩展。\n<table border=\"0\">\n  <tr>\n    <td style=\"border: none;\"><img src=\"/img/2404131.PNG\" style=\"zoom:70%;\" /></td>\n    <td style=\"border: none;\"><img src=\"/img/2404132.gif\" style=\"zoom:70%;\" /></td>\n  </tr>\n</table>\n\n## 矩阵相乘问题\n在选择激活函数的小节提到的使用线性函数作为激活函数没有做用推倒的公式是用标量推导的，但是应该能推广到矩阵，暂时留着，以后有空推导一下怎么推广以及矩阵乘的意义。","slug":"ML-Andrew-Ng-1","published":1,"updated":"2024-05-07T14:06:56.296Z","comments":1,"layout":"post","photos":[],"_id":"cm55g3gb3002ibiub740jbsf8","content":"<p>同一系列的<a href=\"https://b-white07.github.io/posts/acf03113.html\">监督学习</a>和<a href=\"https://b-white07.github.io/posts/9915f4c8.html\">无监督学习</a>相关笔记点击查看。</p>\n<h1>神经网络</h1>\n<p>为了进行更复杂的预测，我们可以使用<em>神经网络</em>（又称多层感知机multilayer perceptron）。如图所示为一简单的神经网络，该神经网络有4层，其中layer1-3是隐藏层，layer4是输出层，最左边的input也可以算作layer0作为输入层，但一般说层数时不将其算在内。每层中的圆是一个<em>神经元</em>，这些神经元承担了神经网络的计算任务。神经元中可以使用不同的算法进行计算，这里假设每个神经元使用了逻辑回归模型<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">g(z) = \\frac{1}{1+e^{-z}},</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2484em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7027em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span></span></span></span>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">z=\\vec{w}  \\cdot  \\vec{x}+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7973em;vertical-align:-0.0833em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>.当然，同一层中的不同神经元有不同的参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{w}、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>.<br>\n为了区别同一层中的不同神经元的参数，可以用下表表示该参数属于哪个神经元，如右侧放的的layer3中，有三个神经元，不同神经元参数的下标分别是1、2和3，表示他们分别是神经元1、2和3的参数；为了区别不同层神经元的参数，可以用上标表示该参数属于哪个layer，比如图中放大的layer3，其实可以给每个神经元的参数加上上标[3],就像<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mover accent=\"true\"><mi>a</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">[</mo><mn>3</mn><mo stretchy=\"false\">]</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\vec{a}^{[3]}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">a</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">[</span><span class=\"mord mtight\">3</span><span class=\"mclose mtight\">]</span></span></span></span></span></span></span></span></span></span></span></span>这样，表示他们都是layer3的参数，只不过图中未标出。<br>\n<img src=\"/img/neuralNetwork.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n通过该图也可以大概了解神经网络的计算过程：将特征<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>输入给layer1，经过计算后layer1得到结果<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mover accent=\"true\"><mi>a</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">[</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\vec{a}^{[1]}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">a</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">[</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">]</span></span></span></span></span></span></span></span></span></span></span></span>（每一层输出的计算结果称为activations）,将它作为layer2的输入，以此类推，最终的output层会通过上一层的输入，计算出最终的结果，该结果是一个标量，根据它我们就可以做出相应的预测，这种方式称为向前传播。</p>\n<blockquote>\n<p>个人思考：不同层中每个神经元参数的数量应该与上一层输出向量的维数有关。假设输入<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>是4纬向量，为了layer1中的每个神经元能够正常计算，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>明显应该也是4维的；再如layer3中每个神经元参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>的维度，应该是layer2输出的activation的维度，layer2中有5个神经元，显然输出的是5维向量，那<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mi>i</mi><mrow><mo stretchy=\"false\">[</mo><mn>3</mn><mo stretchy=\"false\">]</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">\\vec{w}^{[3]}_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3217em;vertical-align:-0.2769em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">[</span><span class=\"mord mtight\">3</span><span class=\"mclose mtight\">]</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span></span></span></span>应该都是5维的。</p>\n</blockquote>\n<p>如图所示为一人脸识别的应用，将一张图片分解为1000*1000个像素点，将这一百万个像素点作为输入特征，输入到一个有3个隐藏层的神经网络中，层层计算后，输出层会输出一个概率，来判断这个人是否匹配的概率。<br>\n<img src=\"/img/face1.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n如果进一步看一下每一层的输出是什么，可以发现：第一层的输出是一个个细小的边缘，第二层的输出是范一些的小整体部分，像是耳朵眼睛什么的，第三层的输出范更大一些了，大概能看到一张脸。但是我们并没有告诉这个神经网络每一层应该做什么，他好像自己知道自己应该做什么一样。<br>\n<img src=\"/img/face2.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h1>使用tensorflow搭建神经网络</h1>\n<h2 id=\"训练模型\">训练模型</h2>\n<h3 id=\"step1创建模型\">step1创建模型</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1使用Sequential创建神经网络</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf </span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras <span class=\"keyword\">import</span> Sequential </span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.layers <span class=\"keyword\">import</span> Dense</span><br><span class=\"line\">model = Sequential([</span><br><span class=\"line\">  Dense(units=<span class=\"number\">25</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>),</span><br><span class=\"line\">  Dense(units=<span class=\"number\">15</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>),</span><br><span class=\"line\">  Dense(units=<span class=\"number\">1</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>)</span><br><span class=\"line\">                  ])</span><br></pre></td></tr></table></figure>\n<p>这里调用了<code>Sequential()</code>函数，创建了一个三层神经网络并自动完成了向前传播。对于每一层中的所有神经元，都使用了sigmoid作为激活函数。</p>\n<h3 id=\"step2编译模型\">step2编译模型</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 2编译模型并指定二元交叉熵损失函数</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.losses <span class=\"keyword\">import</span> BinaryCrossentropy</span><br><span class=\"line\">model.<span class=\"built_in\">compile</span>(loss=BinaryCrossentropy ())</span><br></pre></td></tr></table></figure>\n<p>二元交叉熵函数实际上就是course1中，逻辑回归模型使用的代价函数，它是sigmoid函数常用的损失函数：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo>−</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)}) = -y^{(i)} \\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2291em;vertical-align:-0.2911em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span></span></span></span></span></p>\n<h3 id=\"step3训练模型\">step3训练模型</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 3调用fit函数，使用step2中的损失函数拟合step1中的模型，epochs指定梯度下降运行次数</span></span><br><span class=\"line\">model.fit(X, y, epochs=<span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure>\n<p>这里调用的<code>fit()</code>函数实现了反向传播，它使得计算偏导数更加高效。</p>\n<h3 id=\"step4利用模型预测\">step4利用模型预测</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 4利用模型进行预测</span></span><br><span class=\"line\">model.predice(x_new)</span><br></pre></td></tr></table></figure>\n<h2 id=\"为什么需要激活函数以及如何选择\">为什么需要激活函数以及如何选择</h2>\n<p>激活函数是每一层中的神经元用于计算的函数，常见的激活函数有三种：线性函数、sigmoid函数和ReLU函数。<br>\n下面对这几个函数简单介绍，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><mi>w</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">z=wx+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span></p>\n<ul>\n<li>线性函数</li>\n</ul>\n<p>最简单的，当所有隐藏层都使用线性函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">g(z)=z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span>作为激活函数：</p>\n<ol>\n<li>输出层也使用线性函数作为激活函数时，输出<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">a_1=w_1x+b_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>将作为下一层的输入，因此下一层的输出为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>2</mn></msub><mo>=</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><mo>=</mo><msub><mi>w</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><mo>=</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>b</mi><mn>1</mn></msub><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><mo>=</mo><mi>w</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">a_2=w_2a_1+b_2=w_2(w_1x+b_1)+b_2=w_2w_1x+w_2b_1+b_2=wx+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>.就是说构建了这么复杂的神经网络，得到的效果和线性回归模型一样，这显然是没有必要的；</li>\n<li>输出层使用sigmoid激活函数，同样能够证明，该神经网络也只能做到逻辑回归模型能做到的事情而已。</li>\n</ol>\n<p>基于上述两点，可以说当隐藏层使用线性函数作为激活函数时，该神经网络没有激活函数，因此需要选择其他合适的激活函数。</p>\n<ul>\n<li>sigmoid激活函数</li>\n</ul>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">g(z)=\\frac{1}{1+e^{-z}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2484em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7027em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>,只能得到0和1之间的数值，因此常用于二元分类问题。</p>\n<ul>\n<li>整流线性函数ReLU</li>\n</ul>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">g(z)=max(0,z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">ma</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span></span></span></span>,可以看出，该函数能得到大于等于0的值，因此可以用于多元分类。<br>\n<img src=\"/img/2404141.png\" style=\"zoom:50%;\" ><br>\n除此之外，可以看到sigmoid函数与ReLU函数的另一个区别：sigmoid函数在z较小和较大时，函数图像较为平坦，也就是说自变量即使有较大的变化，函数值变化依然很小，这就导致了代价函数对于参数w的偏导数很小，因此w每次更新的就会很慢，也就是梯度下降的很慢。相比之下，ReLU函数只在z&lt;0处平坦，另一边没有平坦的地方，因此梯度下降的会快一些。<br>\n综上，对于隐藏层和输出层的激活函数的选择可以参考以下方案：<br>\n隐藏层：使用ReLU较多，原因：1函数简单，计算更快; 2.只有左边是平坦的，而sigmoid两边都是平坦的，梯度下降遇到平坦的时候运行的很慢。<br>\n输出层：根据输出的结果选，二元分类可以选sigmoid，输出有正有负可以选线性激活，输出非负可以选ReLU；</p>\n<p>如</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.layers <span class=\"keyword\">import</span> Dense</span><br><span class=\"line\">model = Sequential([</span><br><span class=\"line\">  Dense(units=<span class=\"number\">25</span>, activation=<span class=\"string\">&#x27;relu&#x27;</span>),</span><br><span class=\"line\">  Dense(units=<span class=\"number\">15</span>, activation=<span class=\"string\">&#x27;relu&#x27;</span>),</span><br><span class=\"line\">  Dense(units=<span class=\"number\">1</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>)</span><br><span class=\"line\">                  ])</span><br></pre></td></tr></table></figure>\n<h2 id=\"多分类和多标签\">多分类和多标签</h2>\n<h3 id=\"多分类\">多分类</h3>\n<p>二元分类y只有两个结果，多元分类y仍是离散值，只不过有多种结果。在多分类问题中，常使用softmax回归模型。<br>\n假设输出值y有N个离散值（像数字识别0-9，y就有10个不同的离散值），softmax回归模型可以定义如下：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>z</mi><mi>j</mi></msub><mo>=</mo><mover accent=\"true\"><msub><mi>w</mi><mi>j</mi></msub><mo>⃗</mo></mover><mo separator=\"true\">⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><msub><mi>b</mi><mi>j</mi></msub><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mi>j</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mi>N</mi><mspace linebreak=\"newline\"></mspace><msub><mi>a</mi><mi>j</mi></msub><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mi>j</mi></msub></msup><mrow><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msup><mi>e</mi><msub><mi>z</mi><mi>k</mi></msub></msup></mrow></mfrac><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo>=</mo><mi>j</mi><mi mathvariant=\"normal\">∣</mi><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">z_j=\\vec{w_j}·\\vec{x}+b_j \\;\\;\\; j=1,2,...,N \\\\\na_j=\\frac{e^{z_j}}{\\sum_{k=1}^{N}e^{z_k}}=P(y=j|\\vec{x})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2861em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9805em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.5123em;vertical-align:-1.1709em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3414em;\"><span style=\"top:-2.1288em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9812em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3488em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1512em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2819em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1709em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord\">∣</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>特别的，当N=2时：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mn>1</mn></msub></msup><mrow><msup><mi>e</mi><msub><mi>z</mi><mn>1</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>2</mn></msub></msup></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mn>1</mn></msub><mo>−</mo><msub><mi>z</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">a_j=\\frac{e^{z_1}}{e^{z_1}+e^{z_2}}=\\frac{1}{1+e^{-(z_1-z_2)}}=\\frac{1}{1+e^{-z}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3143em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.911em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6293em;\"><span style=\"top:-2.8218em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2996em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6293em;\"><span style=\"top:-2.8218em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2996em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385em;\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2996em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3137em;vertical-align:-0.4686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.5898em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8575em;\"><span style=\"top:-2.8575em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5357em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2996em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2996em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2484em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7027em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>,于是softmax就变成了sogmoid（自己想的，不知道对不对，应该对吧）.所以softmax是sogmoid的一般化。<br>\n如y有4个输出值，则</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub><mo>=</mo><mover accent=\"true\"><msub><mi>w</mi><mn>1</mn></msub><mo>⃗</mo></mover><mo separator=\"true\">⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mspace width=\"2em\"/><mspace width=\"2em\"/><msub><mi>a</mi><mn>1</mn></msub><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mn>1</mn></msub></msup><mrow><msup><mi>e</mi><msub><mi>z</mi><mn>1</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>2</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>3</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>4</mn></msub></msup></mrow></mfrac><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo>=</mo><mn>1</mn><mi mathvariant=\"normal\">∣</mi><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><msub><mi>z</mi><mn>2</mn></msub><mo>=</mo><mover accent=\"true\"><msub><mi>w</mi><mn>2</mn></msub><mo>⃗</mo></mover><mo separator=\"true\">⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><mspace width=\"2em\"/><mspace width=\"2em\"/><msub><mi>a</mi><mn>2</mn></msub><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mn>2</mn></msub></msup><mrow><msup><mi>e</mi><msub><mi>z</mi><mn>1</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>2</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>3</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>4</mn></msub></msup></mrow></mfrac><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo>=</mo><mn>2</mn><mi mathvariant=\"normal\">∣</mi><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><msub><mi>z</mi><mn>3</mn></msub><mo>=</mo><mover accent=\"true\"><msub><mi>w</mi><mn>3</mn></msub><mo>⃗</mo></mover><mo separator=\"true\">⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><msub><mi>b</mi><mn>3</mn></msub><mspace width=\"2em\"/><mspace width=\"2em\"/><msub><mi>a</mi><mn>3</mn></msub><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mn>3</mn></msub></msup><mrow><msup><mi>e</mi><msub><mi>z</mi><mn>1</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>2</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>3</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>4</mn></msub></msup></mrow></mfrac><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo>=</mo><mn>3</mn><mi mathvariant=\"normal\">∣</mi><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><msub><mi>z</mi><mn>4</mn></msub><mo>=</mo><mover accent=\"true\"><msub><mi>w</mi><mn>4</mn></msub><mo>⃗</mo></mover><mo separator=\"true\">⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><msub><mi>b</mi><mn>4</mn></msub><mspace width=\"2em\"/><mspace width=\"2em\"/><msub><mi>a</mi><mn>4</mn></msub><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mn>4</mn></msub></msup><mrow><msup><mi>e</mi><msub><mi>z</mi><mn>1</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>2</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>3</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>4</mn></msub></msup></mrow></mfrac><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo>=</mo><mn>4</mn><mi mathvariant=\"normal\">∣</mi><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mspace width=\"2em\"/><mspace width=\"2em\"/><mspace linebreak=\"newline\"></mspace><mi>i</mi><mi>n</mi><mspace width=\"1em\"/><mi>w</mi><mi>h</mi><mi>i</mi><mi>c</mi><mi>h</mi><mo>:</mo><mi>a</mi><mn>1</mn><mo>+</mo><mi>a</mi><mn>2</mn><mo>+</mo><mi>a</mi><mn>3</mn><mo>+</mo><mi>a</mi><mn>4</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">z_1=\\vec{w_1}·\\vec{x}+b_1 \\qquad\\qquad\na_1=\\frac{e^{z_1}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}}=P(y=1|\\vec{x})\\\\\nz_2=\\vec{w_2}·\\vec{x}+b_2 \\qquad\\qquad\na_2=\\frac{e^{z_2}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}}=P(y=2|\\vec{x})\\\\\nz_3=\\vec{w_3}·\\vec{x}+b_3 \\qquad\\qquad\na_3=\\frac{e^{z_3}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}}=P(y=3|\\vec{x})\\\\\nz_4=\\vec{w_4}·\\vec{x}+b_4 \\qquad\\qquad\na_4=\\frac{e^{z_4}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}}=P(y=4|\\vec{x})\\\\\n\\qquad\\qquad \\\\\nin \\quad which: a1 + a2 + a3 + a4 = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.864em;vertical-align:-0.15em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1107em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3414em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1∣</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.864em;vertical-align:-0.15em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1107em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3414em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2∣</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.864em;vertical-align:-0.15em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1107em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3414em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3∣</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.864em;vertical-align:-0.15em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1107em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3414em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">4∣</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">in</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">hi</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span></p>\n<p>softmax的损失函数</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mn>1</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>N</mi></msub><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>a</mi><mi>N</mi></msub><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mi>N</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">loss(a1,...,a_N,y) = \\left\\{\\begin{matrix}\n -\\log a_1, &amp; if \\quad y=1\\\\\n -\\log a_2, &amp; if \\quad  y=2\\\\\n \\vdots \\\\\n  -\\log a_N, &amp; if \\quad  y=N\n\\end{matrix}\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:5.46em;vertical-align:-2.48em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.95em;\"><span style=\"top:-1.6em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-1.592em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.916em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='0.916em' style='width:0.8889em' viewBox='0 0 888.89 916' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V916 H384z M384 0 H504 V916 H384z'/></svg></span></span><span style=\"top:-3.15em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.292em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.916em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='0.916em' style='width:0.8889em' viewBox='0 0 888.89 916' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V916 H384z M384 0 H504 V916 H384z'/></svg></span></span><span style=\"top:-5.2em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.45em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.98em;\"><span style=\"top:-5.8275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-4.6275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-2.7675em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span><span style=\"top:-1.5675em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.48em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.98em;\"><span style=\"top:-5.14em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.94em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">2</span></span></span><span style=\"top:-0.88em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.48em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>其实和二元逻辑回归很类似，如果将二元回归中y=1的概率记为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">a_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，那么y=0的概率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>2</mn></msub><mo>=</mo><mn>1</mn><mo>−</mo><msub><mi>a</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">a_2=1-a_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>则二元逻辑回归损失函数就变成了：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo>=</mo><mo>−</mo><mi>y</mi><mi>log</mi><mo>⁡</mo><msub><mi>a</mi><mn>1</mn></msub><mo>−</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo fence=\"true\">)</mo></mrow><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>a</mi><mn>1</mn></msub><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">loss = -y \\log a_1- \\left( 1 - y\\right) \\log \\left( 1 - a_1\\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span></span></p>\n<p>即</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">loss = \\left\\{\\begin{matrix}\n -\\log a_1, &amp; if \\quad y=1\\\\\n -\\log a_2, &amp; if \\quad  y=0\\\\\n\\end{matrix}\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4em;vertical-align:-0.95em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>将softmax函数作为输出层，则输出层有10个单元，不同于sigmoid作为输出层函数，只有一个神经元。而且线性激活函数、ReLU激活函数、sigmoid激活函数作为输出层时，每个输出结果<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>只与<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">z_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>有关，而softmax的每个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>与所有的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">z_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>都有关。</p>\n<p>tensorflow实现</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf </span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras <span class=\"keyword\">import</span> Sequential </span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.layers <span class=\"keyword\">import</span> Dense</span><br><span class=\"line\">model = Sequential ([</span><br><span class=\"line\">  Dense(units=<span class=\"number\">25</span>, activation=<span class=\"string\">&#x27;relu&#x27;</span>),</span><br><span class=\"line\">  Dense(units=<span class=\"number\">15</span>, activation=<span class=\"string\">&#x27;relu&#x27;</span>),</span><br><span class=\"line\">  Dense(units=<span class=\"number\">10</span>, activation=<span class=\"string\">&#x27;softmax&#x27;</span>)</span><br><span class=\"line\">                    ])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.losses <span class=\"keyword\">import</span> SparseCategoricalCrossentropy</span><br><span class=\"line\">model.<span class=\"built_in\">compile</span>(loss=SparseCategoricalCrossentropy())</span><br><span class=\"line\"></span><br><span class=\"line\">model. fit(X,Y,epochs=<span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure>\n<p>上边的代码可以运行softmax但是不推荐，下边的代码实现的softmax神经网络可以减少舍入误差。<br>\n改进后：将输出层的激活函数换成linear,同时改变compile中SparseCategoricalCrossentrop的参数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras <span class=\"keyword\">import</span> Sequential</span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.layers <span class=\"keyword\">import</span> Dense</span><br><span class=\"line\">model = Sequential([</span><br><span class=\"line\">  Dense(units=<span class=\"number\">25</span>, activation=<span class=\"string\">&#x27;relu&#x27;</span>),</span><br><span class=\"line\">  Dense(units=<span class=\"number\">15</span>, activation=<span class=\"string\">&#x27;relu&#x27;</span>),</span><br><span class=\"line\">  Dense(units=<span class=\"number\">10</span>, activation=<span class=\"string\">&#x27;linear&#x27;</span>) </span><br><span class=\"line\">                  ])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.losses <span class=\"keyword\">import</span> SparseCategoricalCrossentropy</span><br><span class=\"line\">model.<span class=\"built_in\">compile</span>(...,loss=SparseCategoricalCrossentrop(from_logits=<span class=\"literal\">True</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">model.fit(X,Y,epochs=<span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure>\n<p>参数from_logits默认为False,那么对应的输出层此时激活函数为softmax，此时输出层的结果是经过了softmax处理的，最后的概率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>,然后将<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>作为中间量传递给损失函数，这就导致了误差的产生。而若将参数设置为True,那么对应的此时输出层的激活函数为linear,他所计算的是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><mi>w</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">z=wx+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span>，而不是最后的概率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>.此时tensorflow做的是将整个softmax函数作为参数传递给损失函数，于是损失函数就变成了</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mn>1</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>N</mi></msub><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mn>1</mn></msub></msup><mrow><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msup><mi>e</mi><msub><mi>z</mi><mi>k</mi></msub></msup></mrow></mfrac><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mi>j</mi></msub></msup><mrow><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msup><mi>e</mi><msub><mi>z</mi><mi>k</mi></msub></msup></mrow></mfrac><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mi>N</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">loss(a1,...,a_N,y) = \\left\\{\\begin{matrix}\n -\\log \\frac{e^{z_1}}{\\sum_{k=1}^{N}e^{z_k}}, &amp; if \\quad y=1\\\\\n \\vdots \\\\\n  -\\log \\frac{e^{z_j}}{\\sum_{k=1}^{N}e^{z_k}}, &amp; if \\quad  y=N\n\\end{matrix}\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:5.0196em;vertical-align:-2.2598em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-1.9em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-1.892em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.616em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='0.616em' style='width:0.8889em' viewBox='0 0 888.89 616' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V616 H384z M384 0 H504 V616 H384z'/></svg></span></span><span style=\"top:-3.15em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.292em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.616em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='0.616em' style='width:0.8889em' viewBox='0 0 888.89 616' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V616 H384z M384 0 H504 V616 H384z'/></svg></span></span><span style=\"top:-4.9em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7598em;\"><span style=\"top:-5.5363em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.911em;\"><span style=\"top:-2.5703em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mop op-symbol small-op mtight\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8852em;\"><span style=\"top:-2.1786em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-2.8971em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3214em;\"><span></span></span></span></span></span></span><span class=\"mspace mtight\" style=\"margin-right:0.1952em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.665em;\"><span style=\"top:-2.8575em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6944em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3496em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385em;\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2996em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6547em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-3.3817em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span><span style=\"top:-2.0824em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9393em;\"><span style=\"top:-2.5703em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mop op-symbol small-op mtight\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8852em;\"><span style=\"top:-2.1786em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-2.8971em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3214em;\"><span></span></span></span></span></span></span><span class=\"mspace mtight\" style=\"margin-right:0.1952em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.665em;\"><span style=\"top:-2.8575em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6944em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3496em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.779em;\"><span style=\"top:-2.9714em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6595em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5092em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6547em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.2598em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7598em;\"><span style=\"top:-4.8488em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-1.3949em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.2598em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>也就没有了中间变量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>带来的误差。然后对于上边的式子，tensorflow会重新排列其顺序，使误差更小（重新排列会避免一些很大或很小的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span>值，从而避免一些舍入，因此精度也会提高）。<br>\n参考：<a href=\"https://blog.csdn.net/muyuu/article/details/122762442\">keras.losses中from_logits的作用</a></p>\n<blockquote>\n<p>关于舍入误差<br>\n<img src=\"/img/2404151.png\" style=\"zoom:50%\"><br>\n可以看出，使用不同的形式计算同一个值会出现不同的结果，原因是精度问题。由于存储字长的限制，很多小数是无法精确在计算机内部表示的，所以如果存在中间变量，那么存到这个中间变量中的结果是经过舍入的。如b中的1+1/10000和1-1/10000,这两部分是经过舍入后的结果，因此最终结果会有一定偏差。</p>\n</blockquote>\n<h3 id=\"多标签\">多标签</h3>\n<p>多分类中，以识别数字为例，输出y是一个标量，对于一个输入x，他要做的事判断x是什么。而多标签问题中，输出y是一个向量，对于一个输入x，他想表达的是x的一些属性，比如：<br>\n<img src=\"/img/2404152.png\" style=\"zoom:50%\"><br>\n对于同一张图片，我们想要知道该图片中是否有行人、汽车和公交。可以将这三个视为该图片的属性。可以看出来，判断每个属性其实就是一个二元分类问题，我们可以根据属性个数构建对应个数的神经网络，但这很繁琐，我们完全可以构建一个神经网络，只不过让输出层有3个输出就可以了。由于每个属性都是二元分类，因此输出层的每个神经元使用sigmoid就可以了。</p>\n<h2 id=\"代价函数高级优化方法\">代价函数高级优化方法</h2>\n<p>梯度下降算法中，选择合适的学习率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>很关键，太大太小都不好。Adam算法可以在梯度下降的过程中自动调整<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>的大小：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>小了让它大一些；<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>大了则让他变小。因此他比梯度下降算法快很多。除此之外，梯度下降算法中，所有的参数共用一个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>，但是Adam算法中，每个参数有自己的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>.即</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mo>−</mo><msub><mi>α</mi><mn>1</mn></msub><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mn>1</mn></msub></mrow></mfrac><mspace linebreak=\"newline\"></mspace><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi><mspace linebreak=\"newline\"></mspace><msub><mi>w</mi><mn>10</mn></msub><mo>=</mo><msub><mi>w</mi><mn>10</mn></msub><mo>−</mo><msub><mi>α</mi><mn>10</mn></msub><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mn>10</mn></msub></mrow></mfrac><mspace linebreak=\"newline\"></mspace><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><msub><mi>α</mi><mn>11</mn></msub><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac><mspace linebreak=\"newline\"></mspace></mrow><annotation encoding=\"application/x-tex\">w_1 = w_1 -  \\alpha_1 \\frac{\\partial J(\\vec{w},b)}{\\partial w_1} \\\\ \n\\vdots \\\\\nw_{10} = w_{10} -  \\alpha_{10} \\frac{\\partial J(\\vec{w},b)}{\\partial w_{10}} \\\\ \nb = b -  \\alpha_{11} \\frac{\\partial J(\\vec{w},b)}{\\partial b} \\\\\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.263em;vertical-align:-0.836em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.836em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1.53em;vertical-align:-0.03em;\"></span><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.263em;vertical-align:-0.836em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.836em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">11</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span></span></span></span></p>\n<img src=\"/img/2404136.png\" style=\"zoom:40%\">\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># model</span></span><br><span class=\"line\">model = Sequential([</span><br><span class=\"line\">tI.keras.layers.Dense(units=<span class=\"number\">25</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>),</span><br><span class=\"line\">tf.keras.layers.Dense(units=<span class=\"number\">15</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>),</span><br><span class=\"line\">tf.keras.layers.Dense(units=<span class=\"number\">10</span>, activation=<span class=\"string\">&#x27;linear&#x27;</span>)</span><br><span class=\"line\">])</span><br><span class=\"line\"><span class=\"comment\"># compile 需要给一个初始的学习率</span></span><br><span class=\"line\">model.<span class=\"built_in\">compile</span>(optimizer=tf.keras.optimizers.Adam(learning_rate=<span class=\"number\">1e-3</span>),</span><br><span class=\"line\">loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=<span class=\"literal\">True</span>))</span><br><span class=\"line\"><span class=\"comment\"># fit</span></span><br><span class=\"line\">model.fit(X,Y,epochs=<span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"其他网络层类型\">其他网络层类型</h2>\n<p>密集层类型Dense：之前代码中，我们使用Dense函数构建的每一层的类型是密集层，密集层中每个神经元都使用了input<strong>全部的</strong>特征。<br>\n卷积层类型Convolutional：卷积层中的每个神经元仅仅使用input的<strong>一部分</strong>特征。这种做法更快、需要的训练数据更少而且不太容易过拟合。但是输入窗口的大小需要合理选择。<br>\n<img src=\"/img/24041310.png\" style=\"zoom:50%\"></p>\n<h1>优化模型</h1>\n<h2 id=\"模型评估\">模型评估</h2>\n<p>在训练模型的时候，我们会通过带有正则化项的损失函数来训练参数，但是在评估模型性能的时候，往往通过没有正则化项的损失函数来评估模型的性能。<br>\n我们可以将数据集分为两部分，一部分用作训练，一部分用作测试，比例可以是7：3或者8:2等。在评估模型的过程中需要做三个事情：<br>\n1.损失函数，带正则化项<br>\n2.计算test error:Jtest，用测试样本计算J，不带正则化项。Jtest用于判断该模型表现如何<br>\n3.计算train error:Jtrain，用训练样本计算J，不带正则化项。Jtrain衡量了该模型在训练集上表现如何</p>\n<p>对于分类问题，Jtest和Jtrain的定义有另一种更为常见的方式：不用逻辑回归的损失函数来计算二者，而分别用二者的错误分类分数来衡量。如Jtest是测试集中将0判断为1，将1判断为0的分数；Jtrain是训练集中将0判断为1，将1判断为0的分数。</p>\n<h2 id=\"模型选择\">模型选择</h2>\n<p>在一个问题中，有时我们不确定需要什么样子的模型，比如是用1次的线性模型还是更为高次的方程呢？此时我们可以构建多个模型，然后用训练集训练这些模型，训练好以后用测试集来评估这些模型的性能，选择一个Jtest最低的模型。此时Jtest其实做了两件事情：他通过评估每个模型的Jtest(第一件事)来选择了一个性能最好的模型（第二件事）。但是此时说Jtest起到了评估模型的作用其实有点儿不合适，此时Jtest对模型的评估往往比实际误差更小，因为Jtest参与了模型选择的工作，用它来评估自己选择出来的模型损失当然比较小。所以应该把Jtest仅仅作为模型选择的方式，而不应该用它继续做模型评估。<br>\n那对于这种情况，就需要新的数据集对已经选择出来的模型评估，所以上述将整个数据集划分为2部分已经不够用了，我们可以将整个数据集划分为三部分：训练集、交叉验证集（AKA验证集AKA开发集AKA dev集）和测试集（比例可以为0.6、0.2、0.2.），并用这三部分分别计算Jtrain、Jcv和Jtest.其中Jtrain用来训练模型，Jcv用来选择模型，到此为止模型已经选择完成了，然后再用Jtest用来评估泛化误差。由于Jtest并未参与模型选择之前的一切工作，因此用它来评估泛化误差会更为准确。<br>\n这种方法也可以用来选择神经网络架构：有几层？每层几个神经元？等。</p>\n<blockquote>\n<p>再次理解Jtest和Jcv都是20%的样本，为什么Jtest能更准确的得到误差？<br>\n因为用Jtrain训练好模型以后，我们使用Jcv来选择了一个损失最低的模型，就是说我们选择的模型是对应于Jcv这几个样本下的最好模型。至此模型就选择好了。<br>\n选择好以后再用Jtest来测试最终选择的模型的好坏，是因为Jtest的这几个样本全程没有参与，因此得到的模型的泛化损失更准确。</p>\n</blockquote>\n<h2 id=\"正则化、偏差、方差\">正则化、偏差、方差</h2>\n<p>高偏差的表现：Jtrain很高，如果模型的bias高，那么仅仅通过增加训练集，无法使模型得到优化。<br>\n<img src=\"/img/24042403.png\" style=\"zoom:50%\"><br>\n高方差的表现：Jcv远高于Jtrain，如果模型的variance高，那么可以通过仅仅增加训练集来优化模型。<br>\n<img src=\"/img/24042404.png\" style=\"zoom:50%\"><br>\n模型不错的表现：Jtrain低且Jcv没有远高于Jtrain.<br>\n通过下图所示的<em>学习曲线</em>可以较直观看出模型的偏差和方差（绘制学习曲线不一定用到整个训练集，可以取训练集的子集做一个预判）。<br>\n<img src=\"/img/24042402.png\" style=\"zoom:50%\"></p>\n<p>要注意，有时候Jtrain较高并不一定意味着模型不好，如语音识别，有时语音中有噪音，这导致了即使人工识别也会有误差，因此可以允许Jtrain稍大，此时需要与人工识别的误差做比较而不是仅仅关注Jtrain的表现，这其实将人工识别的准确性作为了评估性能的<strong>基准</strong>。<br>\n<img src=\"/img/24042401.png\" style=\"zoom:50%\"></p>\n<p>正则化参数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>对bias和variance的影响：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span> 过大，会导致w很小，导致f(x)趋向于b；<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span> 过小，导致w很大，则相当于没有正则化。<br>\n<img src=\"/img/24042801.png\" style=\"zoom:50%\"><br>\n所以要为模型选择合适的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>：选择<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>的方法和前面选择模型的方法很类似，也需要借助于Jcv.<br>\n<img src=\"/img/24042802.png\" style=\"zoom:50%\"><br>\n偏差和方差作为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>的函数有如下特性：<br>\n<img src=\"/img/24042803.png\" style=\"zoom:50%\"></p>\n<p>几个解决高偏差和高方差的方法：<br>\n1.神经网络可以解决high bias和high variance的均衡（tradeoff）问题<br>\n只要训练集不是很大，大型神经网络都是low bias的。<br>\n<img src=\"/img/24042406.png\" style=\"zoom:50%\"><br>\n大型神经网络会比小的慢，但是如果正则化得当，其表现只会比小的更好。<br>\n<img src=\"/img/24042407.png\" style=\"zoom:50%\"><br>\n<img src=\"/img/24042408.png\" style=\"zoom:50%\"></p>\n<p>2.可以参考如下的几种方式<br>\n<img src=\"/img/24042405.png\" style=\"zoom:50%\"></p>\n<h2 id=\"机器学习开发的迭代\">机器学习开发的迭代</h2>\n<p>第一次构建好一个机器学习的架构以后，往往该模型性能有待提高，可以通过如下方式循环提高模型的性能<br>\n<img src=\"/img/24042501.png\" style=\"zoom:50%\"></p>\n<p>其中<strong>误差分析</strong>是一种手动分析模型的方法：假设你的模型用于判断一个邮件是否为垃圾邮件，该模型误判断了100封邮件，此时为了进一步针对性地提高模型性能，你需要手动查看这100封邮件，看看该模型误判的这些邮件都是什么类型的。比如其中40封是医药相关的、7封是故意拼写错误的（故意拼写错误有时可以避免被当作垃圾邮件）、35封是钓鱼邮件等等。显然该模型对于医药相关邮件和钓鱼邮件的判断准确度不够，因此可以针对这两类邮件选择相应的方法来提高模型的准确性，像收集更多的数据等等。<br>\n<img src=\"/img/24042502.png\" style=\"zoom:50%\"></p>\n<p>增加数据的方法：<br>\n1.针对性的添加数据集，如上边的例子中，你当然可以在数据集中添加各种类型的垃圾邮件，但是如果针对性的添加模型表现不好的类型的数据，如添加医药相关的垃圾邮件和钓鱼邮件的数据，会更有性价比。<br>\n2.数据增强（由于对于图像和音频处理时）：通过修改已有的数据集来创建新的数据集。<br>\n如在图像识别中，训练集中已有一个A的图像，那么我们可以将该图像旋转、放大、缩小等，这实际上就差生了新的训练集（通过原来的x产生了新的x），但是y仍然没有改变（A还是A）。<br>\n<img src=\"/img/24042503.png\" style=\"zoom:50%\"></p>\n<p>除此之外，还可以将图像放置于网格中，然后扭曲该网格图来获取更多的训练集，这种做法可以提高程序的健壮性。<br>\n<img src=\"/img/24042504.png\" style=\"zoom:50%\"></p>\n<p>类似的，在语音识别中，可以通过给语音添加背景噪声的方法或者用稍微差一些的设备录音已获得新的训练集。<br>\n<img src=\"/img/24042505.png\" style=\"zoom:50%\"></p>\n<p>3.数据合成：人工创造新的训练集而不是将已有的数据集修改为新的。<br>\n如下图的OCR应用中，左图为在真实照片中识别到的数据，右图是人工合成的数据。右图的数据是通过在文本编辑器中，用不同的字体打字，然后截屏，再通过调整对比度等等得到的，这样就得到了可以用于ORC训练的数据集<br>\n<img src=\"/img/24042506.png\" style=\"zoom:50%\"></p>\n<p>4.迁移学习(transfer learning)：使用不同任务的数据来训练模型。<br>\n如有模型一用于识别图片中的猫狗等1000个类别，而你想搭建一个用于识别数字的模型二，你可以将模型一的输出层修改为自己需要的，比如数字识别中，输出层只需要10个units.于是只需要将模型一的输出层的1000个units改为10个units就得到了模型二。接下来有两种做法可以选择：第一种是保持模型二复制来的隐藏层参数不变，仅训练输出层的参数；另一种做法是将复制过来的所有隐藏层参数作为初始值，训练模型二的全部层的参数。在本例中，对模型一的训练称为<em>监督预训练(Supervised pretraining)</em>，对模型二的训练称为<em>微调(Fine tuning)</em>.<br>\n<img src=\"/img/24042507.png\" style=\"zoom:50%\"></p>\n<p>这么做是因为可能你用于模型二训练的数据集不够多，而用于训练模型一的数据集充足。而且迁移学习的一个好处是你也许不用亲自训练模型一，可以直接copy别人的。<br>\n迁移学习之所以有效是因为在图像识别模型中，第一个隐藏层总是识别边，第二个识别角，第三个识别范围更大一些的基本形状，这对识别任何图片都是有帮助的。因此若想有效的迁移学习，需要保证用于预训练的模型与用于微调的模型要有<strong>相同类型的输入</strong>。如你的任务是计算机视觉相关，那么预训练的模型的输入图片x需要与你的输入图片x有相同的维度。同样的，你的任务是语音识别，那预训练的模型也得是用语音数据训练的。<br>\n<img src=\"/img/24042508.png\" style=\"zoom:50%\"></p>\n<p>机器学习项目的完整周期可以用下图表示：<br>\n<img src=\"/img/24043001.png\" style=\"zoom:50%\"><br>\n关于部署：<br>\n<img src=\"/img/24043002.png\" style=\"zoom:50%\"><br>\n其中MLOps指的是构建，部署和维护机器学习系统，他也是机器学习的一个领域。</p>\n<h2 id=\"倾斜数据集的误差指标、精确率与召回率\">倾斜数据集的误差指标、精确率与召回率</h2>\n<p>倾斜数据集指的是数据集中的正例样本和负例样本差别非常大，远远不是55开，此时若使用准确度作为误差指标，结果往往不好。比如如果现在有一个病人的数据集，在该数据集中，仅有0.5%的患者患有一种罕见病，那么如果你的模型判断一个病人是否有这种罕见病的逻辑是<code>y=0</code>(一直预测病人没得这个病),那该模型的准确率也会达到99.5%,一个看起来不错的表现，但实际上这个模型并不行对吧。此时就需要其他的误差指标来衡量该模型的性能。<br>\n一对常用的指标是<strong>精确率</strong>和<strong>召回率</strong>。为了理解这两个概念，需要引入<strong>混淆矩阵</strong>。<br>\n<img src=\"/img/24043003.png\" style=\"zoom:50%\"><br>\n上图中的2<em>2矩阵就是混淆矩阵（以2</em>2为例，可以是n*n的，主对角线是预测对的，其余都是预测错的）。可以看出，精确率其实就是模型预测患病的病人中，多少人是真正患病的；召回率就是在所有真正患病病人中，该模型找到了多少。因此我们要追求这两个指标都高的模型。若一个模型仅仅用<code>y=0</code>作为预测，那么TP=0，进一步的精确率和召回率均为0，所以该模型并不是一个好模型，是个小垃圾。</p>\n<p>Trading off precision and recall:<br>\n在之前的例子中，我们通常选0.5作为门槛，但是如果想更强调精确度的话，可以将threhold提高；若想强调召回率，可以将threhold降低。观察精确度和召回率的公式：若将threhold提高，那其实预测为1的数量就会变低，因此TP就会变低，那precision的分子分母都会变小，不好判断。但从另一个角度，若提高threhold，说明该模型只在有较高把握的情况下才会做出y=1的判断，因此precision会提高；而实际上的y=1是不会变化的，因此recall会变低。下图反应了precision和recall对于threhold的关系：<br>\n<img src=\"/img/24043004.png\" style=\"zoom:50%\"></p>\n<p>如果想要自动均衡精确度和召回率，可以使用另一种误差指标<strong>F1 score</strong>,实际上就是precision和recall的调和平均值，该值更强调相对较小的数（若一个数很小，他在分母上就会变的很大，所以整体也会偏小，接近小的值）。这样就不需在二者之间做出均衡只看F1 score就可以了。<br>\n<img src=\"/img/24043005.png\" style=\"zoom:50%\"></p>\n<h1>决策树模型</h1>\n<p>下图为一个数据集，其输入特征x都是二元的，输出y也是二元的：<br>\n<img src=\"/img/24050600.png\" style=\"zoom:50%\"></p>\n<p>如下图所示为几个不同的决策树，其中的椭圆节点称为<strong>决策节点(decision nodes)</strong>,下边的矩形节点就是叶子结点(leaf nodes)。这些决策树可能是同一数据集训练出来的不同模型，决策树学习算法就是从这些模型中选择一个较好的。<br>\n<img src=\"/img/24050601.png\" style=\"zoom:50%\"></p>\n<h2 id=\"建立决策树的关键问题\">建立决策树的关键问题</h2>\n<p>首先，从输入的特征中选择一个特征作为决策树的根节点。比如此处将耳朵形状作为根节点；<br>\n<img src=\"/img/24050602.png\" style=\"zoom:50%\"></p>\n<p>然后，关注一个子树并确定该子树的根节点；<br>\n<img src=\"/img/24050603.png\" style=\"zoom:50%\"></p>\n<p>接着，重复上边的操作将数据集划分为合适的子集，并将这些子集作为叶子结点；<br>\n最后，回到step2并选择另外一个子树，重复上面的动作。<br>\n<img src=\"/img/24050604.png\" style=\"zoom:50%\"></p>\n<p>这其中有两个关键的问题：决策节点的选择和叶节点什么时候该出现。<br>\n在选择决策节点的时候，尽量选择一些可以将数据集划分为两个高纯度的子集：如本例中，可以在耳朵形状、脸型、是否有胡须中选择一个作为根 节点，他们的效果如下图所示。<br>\n<img src=\"/img/24050605.png\" style=\"zoom:50%\"><br>\n但是如果有一个特征是DNA，那么我们可以用DNA百分之百将整个数据集分为猫和非猫两个子集，所以DNA这个特征就可以作为一个很不错的决策节点。<br>\n而对于什么时候该出现叶节点了，通常有四个参考标准：第一是数据集已经完全划分为目标子集了，比如当前的所有子集都是要么全是猫，要么全部是猫；第二是如果继续向下分裂或导致超过决策树的最大高度。决策树的高度是有限制的，做出限制的原因有两个：其一是不会变的太大而笨重，其二是小树不容易过拟合。很多时候其实也是希望树高尽可能小，像二叉排序树这种的，树高往往代表的查找效率；第三是纯度分数的提高低于某个阈值；第四是某个节点的样本数量小于某个阈值。<br>\n<img src=\"/img/24050606.png\" style=\"zoom:50%\"></p>\n<h2 id=\"熵-entropy-和信息增益-information-gain\">熵(entropy)和信息增益(information gain)</h2>\n<p>一个数据集若全是猫，则该数据集很纯；一个数据集若全不是猫，则该数据集同样很纯；如果一个数据集有猫有其他的，则就可以用<strong>熵</strong>来衡量该数据集的纯度，熵越高，则数据集越不纯。<br>\n若将数据集中猫的比例记为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">p_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，则不是猫的比例<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mn>0</mn></msub><mo>=</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">p_0=1-p_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">p_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>的熵可以定义为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><msub><mi>p</mi><mn>1</mn></msub><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>p</mi><mn>1</mn><mo stretchy=\"false\">)</mo><mo>−</mo><msub><mi>p</mi><mn>0</mn></msub><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>0</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(p_1)=-p_1log_2(p1)-p_0log_2(p_0)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>,其中取2为底是因为当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub><mo>=</mo><msub><mi>p</mi><mn>0</mn></msub><mo>=</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">p_1=p_0=1/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1/2</span></span></span></span>时（二元分类二者相等只能为0.5），<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H()</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span></span></span></span>可以为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>.这样的意义看起来更明确方便一些。同时注意到熵的定义和逻辑回归模型的损失函数挺像的。<br>\n<img src=\"/img/24050607.png\" style=\"zoom:50%\"></p>\n<p>有了熵的帮助后，就可以更好的选择决策节点：应该选择使熵尽可能小的特征作为决策节点。<br>\n现在分别计算以不同特征为决策节点，得到的决策树的两个分支的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(p_1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>,由于每个树有两个熵，为了便于选择，求出两个熵的加权平均熵，选择最低的即可。<br>\n<img src=\"/img/24050608.png\" style=\"zoom:50%\"></p>\n<p>为了遵循决策树的惯例，上边的计算还没做完，需要进一步计算信息增益，但这并不会影响结果。决策树学习中，熵的减少称为<strong>信息增益(information gain)</strong>，他衡量了由于分裂而导致的树的熵的减少的量。<br>\n最初始的根节点中有5只猫和5只其他，那么<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub><mo>=</mo><mn>0.5</mn><mo separator=\"true\">,</mo><mi>H</mi><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">p_1=0.5,H(p_1)=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0.5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>，这是没有分裂时树的熵，用这个值减去树分裂后的加权平均熵即可得到信息增益，信息增益最大的决策树就是我们想要的。<br>\n<img src=\"/img/24050609.png\" style=\"zoom:50%\"></p>\n<p>此外，信息增益还可以帮助我们判断事都要继续分裂还是将当前节点作为叶子结点。若信息增益太小了，那表示即使分裂也不会使熵减少的太多，但是分裂导致的树高增加会导致过拟合，因此此时可以停止分裂，将当前数据集作为叶子结点。<br>\n下面给出了信息增益的严格定义：<br>\n<img src=\"/img/24050610.png\" style=\"zoom:50%\"></p>\n<h2 id=\"建立决策树的步骤\">建立决策树的步骤</h2>\n<img src=\"/img/24050611.png\" style=\"zoom:50%\">\n可以看出其实构建决策树是一个迭代的过程。\n<h2 id=\"one-hot编码\">one-hot编码</h2>\n<p>上边的数据集中，每个特征的取值只有两种情况。下边的数据集中，耳朵形状的取值有3个，若采用之前的方法将其作为决策节点，则可以构建出一个有三个子树的决策树：<br>\n<img src=\"/img/24050612.png\" style=\"zoom:50%\"><br>\n若将数据集稍作更改，其实可以将数据集变成和之前的数据集一样，每个特征只有两个取值：<br>\n<img src=\"/img/24050613.png\" style=\"zoom:50%\"><br>\n如果一个特征有k种取值，那么通过<strong>one-hot编码</strong>可以将该特征转换为k个2进制特征。同样的，若将Face shape的两种取值和Whiskers的两种取值分别记做0和1，那么该数据集就可以用来训练神经网络。</p>\n<h2 id=\"有连续值特征的决策树\">有连续值特征的决策树</h2>\n<p>若一个特征是有连续值的而不是离散值，我们可以为该连续特征选择一个阈值，以该阈值作为决策节点划分子树。<br>\n<img src=\"/img/24050614.png\" style=\"zoom:50%\"><br>\n选择阈值时，需要多尝试几次，计算一个最高的信息增益，用它来分割连续值的特征。<br>\n<img src=\"/img/24050615.png\" style=\"zoom:50%\"></p>\n<h2 id=\"回归树\">回归树</h2>\n<p>决策树可以预测离散的值，将其推广就可以得到可以解决回归问题（即预测连续值）的<strong>回归树</strong>。<br>\n比如此时想要预测一个动物的体重，假设此时已经有一个回归树，该回归树的叶子结点分别保存了不同的子数据集。在做出决策的时候，如果该样本落入了其中的一个节点，那么回归树会计算该节点中的所有数据的体重平均值，并预测此次样本的体重为该平均值。<br>\n<img src=\"/img/24050701.png\" style=\"zoom:50%\"></p>\n<p>回归树在选择划分节点的时候，不是以信息增益作为标准的，而是以<strong>子集的方差</strong>作为标准。计算好以不同特征划分的树的子集的平均加权方差后，选择最低的值作为划分特征。同样的，再平均加权方差的基础上，再算一下方差减少，选择最大的方差减少，这在选择结果上和选择最低的平均加权方差的特征是一样的。<br>\n<img src=\"/img/24050702.png\" style=\"zoom:50%\"></p>\n<h2 id=\"决策树集合\">决策树集合</h2>\n<p>单个决策树对数据的微小变化很敏感。比如一个数据集中原本的根节点是耳朵形状，但是把数据集中的一个样本换一下，就可能导致根节点变为了胡须，递归下去就会得到两个完全不一样的决策树。为了解决这个问题，可以使用<strong>树集合</strong>，也就是建立多个决策树。<br>\n训练好决策树集合后，对于新样本的预测，可以将该样本再所有树上都预测一遍，然后选择最多的预测结果作为最终的预测结果，如下图中2棵树认为它是猫，1棵认为它不是猫，那么最终的结果就是它是猫。<br>\n<img src=\"/img/24050703.png\" style=\"zoom:50%\"></p>\n<h3 id=\"替换采样\">替换采样</h3>\n<p>使用替换采样可以构建一个和原始数据集不同的数据集，这是构建树集合的关键一步。比如原数据集有10个动物，我们每次从这10个动物中随机选一个，然后将其放回，再随机选。这样选10次以后我们就会得到一个和原数据集不同的数据集，当然这个新数据集会有重复的数据，这无所谓。<br>\n<img src=\"/img/24050704.png\" style=\"zoom:50%\"></p>\n<h3 id=\"随机森林算法\">随机森林算法</h3>\n<p>有了替换采样后，我们可以得到不同的数据集，进而可以构建出B个决策树。其中B的取值可以为64-228中的任何值。更大的取值虽然不会对模型的性能有损害，但是在超过某个临界点的时候，他的性能提升已经不明显了但是速度却下降了，性价比低，所以也不建议太大。这种又特定实例树组成的集合有时也称为袋装决策树。<br>\n<img src=\"/img/24050705.png\" style=\"zoom:50%\"></p>\n<p>尽管已经构建了B个不同的树，但是在所有的B棵树中，也会遇到相同的根节点以及根节点附近的子树的根节点相同的情况。为了解决这个情况，可以进一步将数据集随机化。具体的做法是：每想选择一个特征作为决策节点的时候，若原数据集有n个特征，就随机选择其中k个子特征。每个节点选择的k个子特征都是随机选择，不一样的，不是说只选择一次，然后每个决策节点都用这k个。当n比较大时，k往往取n的平方根。这就是<strong>随机森林算法</strong>。<br>\n<img src=\"/img/24050706.png\" style=\"zoom:50%\"></p>\n<p>由于数据集选择的随机性，随机森林算法在构建树的时候就已经考虑到了很多微小的变化，因此整个模型再经过随机的数据集训练后，对一些小变化会有更好的健壮性。</p>\n<h3 id=\"增强决策树\">增强决策树</h3>\n<p>随机森林算法在构建新数据集上进一步增加了随机性，<strong>增强决策树</strong>则是在构建新数据集上更有针对性。对于之前构建的决策树分类失败的样本，增强决策树在选择新的数据集时给予这些样本更高的被选择到权重，这样就一步步加强了该模型原本的缺点。<br>\n<img src=\"/img/24050707.png\" style=\"zoom:50%\"><br>\n可以看到，第一棵树的数据集使用了替换采样，然后用原数据集测试这棵树，会发现几个分类错误的数据，那么接下来选择样本的时候，这些判断错误的数据将会有更大的概率被选中。具体大多少，为什么更大以后有时间深入研究一下吧。这样当构建了前B-1棵树后，第B棵树就有很多的前边错误分类的样本来参考。<br>\nSGBoost tree就是一种很强的<strong>增强决策树</strong><br>\n<img src=\"/img/24050708.png\" style=\"zoom:50%\"></p>\n<h2 id=\"决策树VS神经网络\">决策树VS神经网络</h2>\n<p>决策树一次只能训练一个，神经网络一次可以训练很多；<br>\n单个决策树成本低于决策树集合；<br>\n结构化数据如放假预测中，特征x可以存放在电子表格中。非结构化数据如图像声音文本等，不太方便存在表格中。<br>\n等等。<br>\n<img src=\"/img/24050708.png\" style=\"zoom:50%\"></p>\n<h1>遇到的问题</h1>\n<h2 id=\"为什么神经网络的每一层能自动知道自己需要做什么？\">为什么神经网络的每一层能自动知道自己需要做什么？</h2>\n<p>梯度下降，week1/TensorFlow/C2_W1_Lab02_CoffeeRoasting_TF.ipynb中最后部分提到了。</p>\n<h2 id=\"为什么通过反向传播计算导数更高效？\">为什么通过反向传播计算导数更高效？</h2>\n<p>查阅了相关资料加上自己的一点儿思考，对于代价函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>,现在有3种方法求导：</p>\n<ol>\n<li>利用导数定义求导数（以对<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>求导为例）：</li>\n</ol>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>j</mi></msub><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>j</mi></msub><mo>+</mo><mi>ε</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>J</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>j</mi></msub><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mi>ε</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{\\partial J(w_j,b)}{\\partial w_j}=\\frac{J(w_j+\\varepsilon ,b)-J(w_j,b)}{\\varepsilon }\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.3991em;vertical-align:-0.9721em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9721em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">ε</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>若有n个w，则需要计算n次<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>j</mi></msub><mo>+</mo><mi>ε</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(w_j+\\varepsilon ,b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">ε</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>.</p>\n<ol start=\"2\">\n<li>反向传播求导，其实就是链式法则：</li>\n</ol>\n<p>反向传播需要借助计算图<br>\n<img src=\"/img/2404137.png\" alt=\"computingGraph\" style=\"zoom:50%\"><br>\n如图所示中间部分就是一个计算图。在第一种方法中，计算每个参数的导数的时候都需要将计算图中的4个框都走一遍，假设有N个框，P个参数，那么总次数就为NP次。<br>\n而若利用计算图求导，在第一次从左至右计算出<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J()</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span></span></span></span>之后，就不需要重复计算了，只需要从右至左选择一条路径利用链式法则求偏导数即可求出每一个参数的导数，而这个过程中需要的计算数值，已经在第一次的从左至右计算中得到了。如J对d的导数为d，在正向传播中已经把d=2传递给了J对应的框中。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>d</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>d</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>a</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>a</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>c</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>c</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mn>1</mn></msub></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mn>2</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>d</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>d</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>a</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>a</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>c</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>c</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mn>2</mn></msub></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>d</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>d</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>a</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>a</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\\left\\{\\begin{matrix}\n \\frac{\\partial J}{\\partial w_1} = \\frac{\\partial J}{\\partial d}\\frac{\\partial d}{\\partial a}\\frac{\\partial a}{\\partial c}\\frac{\\partial c}{\\partial w_1}\\\\ \n\\frac{\\partial J}{\\partial w_2} = \\frac{\\partial J}{\\partial d}\\frac{\\partial d}{\\partial a}\\frac{\\partial a}{\\partial c}\\frac{\\partial c}{\\partial w_2}\\\\ \n\\vdots \\\\\n\\frac{\\partial J}{\\partial b} = \\frac{\\partial J}{\\partial d}\\frac{\\partial d}{\\partial a}\\frac{\\partial a}{\\partial b}\\\\\n\\end{matrix}\\right.\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.7505em;vertical-align:-2.6253em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.95em;\"><span style=\"top:-1.6em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-1.592em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.916em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='0.916em' style='width:0.8889em' viewBox='0 0 888.89 916' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V916 H384z M384 0 H504 V916 H384z'/></svg></span></span><span style=\"top:-3.15em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.292em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.916em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='0.916em' style='width:0.8889em' viewBox='0 0 888.89 916' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V916 H384z M384 0 H504 V916 H384z'/></svg></span></span><span style=\"top:-5.2em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.45em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1253em;\"><span style=\"top:-5.9327em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0269em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">d</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">a</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">c</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">a</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0269em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">c</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-4.6074em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0269em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">d</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">a</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">c</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">a</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0269em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">c</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.6623em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span><span style=\"top:-1.4222em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">d</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">a</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">a</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6253em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>a</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>d</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>d</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>a</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{\\partial J}{\\partial a} = \\frac{\\partial J}{\\partial d}\\frac{\\partial d}{\\partial a}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2251em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">a</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">d</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">a</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>这一项只计算一次即可，而这一项可以直接用于计算j对w和b的偏导数，因此总共需要计算N+P次。<br>\n<img src=\"/img/2404138.png\" style=\"zoom:50%\"></p>\n<ol start=\"3\">\n<li>利用公式求导计算</li>\n</ol>\n<p>其实最开始思考为什么反向传播快的时候，我第一反应是跟用求导公式比，但查资料的时候没发现有人用公式求导，疑惑了很久，这难道不应该是最先想到的办法吗？后来发现用公式计算应该就是反向传播<br>\n以计算w的偏导数为例：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mi>w</mi><mo>=</mo><mi>w</mi><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad w=w-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"comment\"># 前向传播</span></span><br><span class=\"line\">z = np.dot(W, x) + b</span><br><span class=\"line\">y = <span class=\"number\">1</span> / (<span class=\"number\">1</span> + np.exp(-z))</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 计算损失</span></span><br><span class=\"line\">loss = -(y_ * np.log(y) + (<span class=\"number\">1</span> - y_) * np.log(<span class=\"number\">1</span> - y))</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 反向传播</span></span><br><span class=\"line\">dy = (y - y_)</span><br><span class=\"line\">dw = np.dot(x, dy)</span><br><span class=\"line\">db = np.<span class=\"built_in\">sum</span>(dy)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 更新权重和偏差</span></span><br><span class=\"line\">W -= learning_rate * dw</span><br><span class=\"line\">b -= learning_rate * db</span><br></pre></td></tr></table></figure>\n<p>参考：<br>\n<a href=\"https://blog.csdn.net/qq_24568487/article/details/80782867/\">反向传播的直观理解</a><br>\n<a href=\"https://blog.csdn.net/weixin_42043935/article/details/128719354\">如何用计算图计算逻辑回归的偏导数</a></p>\n<h2 id=\"为什么不同型的矩阵相加没报错？\">为什么不同型的矩阵相加没报错？</h2>\n<p>在JupyterLab的C2_W1_Assignment.ipynb(9)中，实现一个简单函数过程中，虽然能运行，但中间有个小细节有个疑问：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">my_dense_v</span>(<span class=\"params\">A_in, W, b, g</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Computes dense layer</span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">      A_in (ndarray (m,n)) : Data, m examples, n features each</span></span><br><span class=\"line\"><span class=\"string\">      W    (ndarray (n,j)) : Weight matrix, n features per unit, j units</span></span><br><span class=\"line\"><span class=\"string\">      b    (ndarray (j,1)) : bias vector, j units  </span></span><br><span class=\"line\"><span class=\"string\">      g    activation function (e.g. sigmoid, relu..)</span></span><br><span class=\"line\"><span class=\"string\">    Returns</span></span><br><span class=\"line\"><span class=\"string\">      A_out (ndarray (m,j)) : m examples, j units</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">### START CODE HERE ### </span></span><br><span class=\"line\">    Z = np.matmul(A_in,W) + b <span class=\"comment\"># A_in乘M是m*j，为什么能和j行的b相加</span></span><br><span class=\"line\">    A_out = g(Z)</span><br><span class=\"line\"><span class=\"comment\">### END CODE HERE ### </span></span><br><span class=\"line\">    <span class=\"keyword\">return</span>(A_out)</span><br></pre></td></tr></table></figure>\n<p>查阅资料后发现NumPy可以通过广播(broadcasting)来扩展不同型的矩阵，使得两个矩阵可以进行逐元素运算如矩阵相加。他的操作过程是从两个矩阵的最后一个维度开始，向前比较两个矩阵的维度（即从右向左），如果比较的两个维度相等或者其中一个是1，那么这两个矩阵的维度是相容的，可以扩展他们使得二者可以运算，规则是低维向高维扩展。</p>\n<table border=\"0\">\n  <tr>\n    <td style=\"border: none;\"><img src=\"/img/2404131.PNG\" style=\"zoom:70%;\" /></td>\n    <td style=\"border: none;\"><img src=\"/img/2404132.gif\" style=\"zoom:70%;\" /></td>\n  </tr>\n</table>\n<h2 id=\"矩阵相乘问题\">矩阵相乘问题</h2>\n<p>在选择激活函数的小节提到的使用线性函数作为激活函数没有做用推倒的公式是用标量推导的，但是应该能推广到矩阵，暂时留着，以后有空推导一下怎么推广以及矩阵乘的意义。</p>\n","cover":"/img/wallpaper.jpg","cover_type":"img","excerpt":"","more":"<p>同一系列的<a href=\"https://b-white07.github.io/posts/acf03113.html\">监督学习</a>和<a href=\"https://b-white07.github.io/posts/9915f4c8.html\">无监督学习</a>相关笔记点击查看。</p>\n<h1>神经网络</h1>\n<p>为了进行更复杂的预测，我们可以使用<em>神经网络</em>（又称多层感知机multilayer perceptron）。如图所示为一简单的神经网络，该神经网络有4层，其中layer1-3是隐藏层，layer4是输出层，最左边的input也可以算作layer0作为输入层，但一般说层数时不将其算在内。每层中的圆是一个<em>神经元</em>，这些神经元承担了神经网络的计算任务。神经元中可以使用不同的算法进行计算，这里假设每个神经元使用了逻辑回归模型<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">g(z) = \\frac{1}{1+e^{-z}},</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2484em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7027em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span></span></span></span>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo>⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">z=\\vec{w}  \\cdot  \\vec{x}+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7973em;vertical-align:-0.0833em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>.当然，同一层中的不同神经元有不同的参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mtext>、</mtext><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">\\vec{w}、b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mord cjk_fallback\">、</span><span class=\"mord mathnormal\">b</span></span></span></span>.<br>\n为了区别同一层中的不同神经元的参数，可以用下表表示该参数属于哪个神经元，如右侧放的的layer3中，有三个神经元，不同神经元参数的下标分别是1、2和3，表示他们分别是神经元1、2和3的参数；为了区别不同层神经元的参数，可以用上标表示该参数属于哪个layer，比如图中放大的layer3，其实可以给每个神经元的参数加上上标[3],就像<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mover accent=\"true\"><mi>a</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">[</mo><mn>3</mn><mo stretchy=\"false\">]</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\vec{a}^{[3]}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">a</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">[</span><span class=\"mord mtight\">3</span><span class=\"mclose mtight\">]</span></span></span></span></span></span></span></span></span></span></span></span>这样，表示他们都是layer3的参数，只不过图中未标出。<br>\n<img src=\"/img/neuralNetwork.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n通过该图也可以大概了解神经网络的计算过程：将特征<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>输入给layer1，经过计算后layer1得到结果<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mover accent=\"true\"><mi>a</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">[</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow></msup></mrow><annotation encoding=\"application/x-tex\">\\vec{a}^{[1]}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.888em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">a</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.888em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">[</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">]</span></span></span></span></span></span></span></span></span></span></span></span>（每一层输出的计算结果称为activations）,将它作为layer2的输入，以此类推，最终的output层会通过上一层的输入，计算出最终的结果，该结果是一个标量，根据它我们就可以做出相应的预测，这种方式称为向前传播。</p>\n<blockquote>\n<p>个人思考：不同层中每个神经元参数的数量应该与上一层输出向量的维数有关。假设输入<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{x}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>是4纬向量，为了layer1中的每个神经元能够正常计算，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>明显应该也是4维的；再如layer3中每个神经元参数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover></mrow><annotation encoding=\"application/x-tex\">\\vec{w}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.714em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>的维度，应该是layer2输出的activation的维度，layer2中有5个神经元，显然输出的是5维向量，那<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mi>i</mi><mrow><mo stretchy=\"false\">[</mo><mn>3</mn><mo stretchy=\"false\">]</mo></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">\\vec{w}^{[3]}_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.3217em;vertical-align:-0.2769em;\"></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.0448em;\"><span style=\"top:-2.4231em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.2198em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">[</span><span class=\"mord mtight\">3</span><span class=\"mclose mtight\">]</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2769em;\"><span></span></span></span></span></span></span></span></span></span>应该都是5维的。</p>\n</blockquote>\n<p>如图所示为一人脸识别的应用，将一张图片分解为1000*1000个像素点，将这一百万个像素点作为输入特征，输入到一个有3个隐藏层的神经网络中，层层计算后，输出层会输出一个概率，来判断这个人是否匹配的概率。<br>\n<img src=\"/img/face1.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /><br>\n如果进一步看一下每一层的输出是什么，可以发现：第一层的输出是一个个细小的边缘，第二层的输出是范一些的小整体部分，像是耳朵眼睛什么的，第三层的输出范更大一些了，大概能看到一张脸。但是我们并没有告诉这个神经网络每一层应该做什么，他好像自己知道自己应该做什么一样。<br>\n<img src=\"/img/face2.png\" alt=\"costfunvs\" style=\"zoom:50%;\" /></p>\n<h1>使用tensorflow搭建神经网络</h1>\n<h2 id=\"训练模型\">训练模型</h2>\n<h3 id=\"step1创建模型\">step1创建模型</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 1使用Sequential创建神经网络</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf </span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras <span class=\"keyword\">import</span> Sequential </span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.layers <span class=\"keyword\">import</span> Dense</span><br><span class=\"line\">model = Sequential([</span><br><span class=\"line\">  Dense(units=<span class=\"number\">25</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>),</span><br><span class=\"line\">  Dense(units=<span class=\"number\">15</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>),</span><br><span class=\"line\">  Dense(units=<span class=\"number\">1</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>)</span><br><span class=\"line\">                  ])</span><br></pre></td></tr></table></figure>\n<p>这里调用了<code>Sequential()</code>函数，创建了一个三层神经网络并自动完成了向前传播。对于每一层中的所有神经元，都使用了sigmoid作为激活函数。</p>\n<h3 id=\"step2编译模型\">step2编译模型</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 2编译模型并指定二元交叉熵损失函数</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.losses <span class=\"keyword\">import</span> BinaryCrossentropy</span><br><span class=\"line\">model.<span class=\"built_in\">compile</span>(loss=BinaryCrossentropy ())</span><br></pre></td></tr></table></figure>\n<p>二元交叉熵函数实际上就是course1中，逻辑回归模型使用的代价函数，它是sigmoid函数常用的损失函数：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow><mo>−</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mrow><mo fence=\"true\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">loss(f_{\\vec{w},b}(\\vec{x}^{(i)}), y^{(i)}) = -y^{(i)} \\log\\left(f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right) - \\left( 1 - y^{(i)}\\right) \\log \\left( 1 - f_{\\vec{w},b}\\left( \\vec{x}^{(i)} \\right) \\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2291em;vertical-align:-0.2911em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.8em;vertical-align:-0.65em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">(</span></span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size2\">)</span></span></span></span></span></span></span></p>\n<h3 id=\"step3训练模型\">step3训练模型</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 3调用fit函数，使用step2中的损失函数拟合step1中的模型，epochs指定梯度下降运行次数</span></span><br><span class=\"line\">model.fit(X, y, epochs=<span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure>\n<p>这里调用的<code>fit()</code>函数实现了反向传播，它使得计算偏导数更加高效。</p>\n<h3 id=\"step4利用模型预测\">step4利用模型预测</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 4利用模型进行预测</span></span><br><span class=\"line\">model.predice(x_new)</span><br></pre></td></tr></table></figure>\n<h2 id=\"为什么需要激活函数以及如何选择\">为什么需要激活函数以及如何选择</h2>\n<p>激活函数是每一层中的神经元用于计算的函数，常见的激活函数有三种：线性函数、sigmoid函数和ReLU函数。<br>\n下面对这几个函数简单介绍，其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><mi>w</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">z=wx+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span></p>\n<ul>\n<li>线性函数</li>\n</ul>\n<p>最简单的，当所有隐藏层都使用线性函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">g(z)=z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span>作为激活函数：</p>\n<ol>\n<li>输出层也使用线性函数作为激活函数时，输出<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">a_1=w_1x+b_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>将作为下一层的输入，因此下一层的输出为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>2</mn></msub><mo>=</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>a</mi><mn>1</mn></msub><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><mo>=</mo><msub><mi>w</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><mo>=</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>w</mi><mn>1</mn></msub><mi>x</mi><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>b</mi><mn>1</mn></msub><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><mo>=</mo><mi>w</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">a_2=w_2a_1+b_2=w_2(w_1x+b_1)+b_2=w_2w_1x+w_2b_1+b_2=wx+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>.就是说构建了这么复杂的神经网络，得到的效果和线性回归模型一样，这显然是没有必要的；</li>\n<li>输出层使用sigmoid激活函数，同样能够证明，该神经网络也只能做到逻辑回归模型能做到的事情而已。</li>\n</ol>\n<p>基于上述两点，可以说当隐藏层使用线性函数作为激活函数时，该神经网络没有激活函数，因此需要选择其他合适的激活函数。</p>\n<ul>\n<li>sigmoid激活函数</li>\n</ul>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">g(z)=\\frac{1}{1+e^{-z}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2484em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7027em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>,只能得到0和1之间的数值，因此常用于二元分类问题。</p>\n<ul>\n<li>整流线性函数ReLU</li>\n</ul>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">(</mo><mi>z</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mi>z</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">g(z)=max(0,z)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">ma</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">)</span></span></span></span>,可以看出，该函数能得到大于等于0的值，因此可以用于多元分类。<br>\n<img src=\"/img/2404141.png\" style=\"zoom:50%;\" ><br>\n除此之外，可以看到sigmoid函数与ReLU函数的另一个区别：sigmoid函数在z较小和较大时，函数图像较为平坦，也就是说自变量即使有较大的变化，函数值变化依然很小，这就导致了代价函数对于参数w的偏导数很小，因此w每次更新的就会很慢，也就是梯度下降的很慢。相比之下，ReLU函数只在z&lt;0处平坦，另一边没有平坦的地方，因此梯度下降的会快一些。<br>\n综上，对于隐藏层和输出层的激活函数的选择可以参考以下方案：<br>\n隐藏层：使用ReLU较多，原因：1函数简单，计算更快; 2.只有左边是平坦的，而sigmoid两边都是平坦的，梯度下降遇到平坦的时候运行的很慢。<br>\n输出层：根据输出的结果选，二元分类可以选sigmoid，输出有正有负可以选线性激活，输出非负可以选ReLU；</p>\n<p>如</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.layers <span class=\"keyword\">import</span> Dense</span><br><span class=\"line\">model = Sequential([</span><br><span class=\"line\">  Dense(units=<span class=\"number\">25</span>, activation=<span class=\"string\">&#x27;relu&#x27;</span>),</span><br><span class=\"line\">  Dense(units=<span class=\"number\">15</span>, activation=<span class=\"string\">&#x27;relu&#x27;</span>),</span><br><span class=\"line\">  Dense(units=<span class=\"number\">1</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>)</span><br><span class=\"line\">                  ])</span><br></pre></td></tr></table></figure>\n<h2 id=\"多分类和多标签\">多分类和多标签</h2>\n<h3 id=\"多分类\">多分类</h3>\n<p>二元分类y只有两个结果，多元分类y仍是离散值，只不过有多种结果。在多分类问题中，常使用softmax回归模型。<br>\n假设输出值y有N个离散值（像数字识别0-9，y就有10个不同的离散值），softmax回归模型可以定义如下：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>z</mi><mi>j</mi></msub><mo>=</mo><mover accent=\"true\"><msub><mi>w</mi><mi>j</mi></msub><mo>⃗</mo></mover><mo separator=\"true\">⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><msub><mi>b</mi><mi>j</mi></msub><mtext>  </mtext><mtext>  </mtext><mtext>  </mtext><mi>j</mi><mo>=</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>2</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><mi>N</mi><mspace linebreak=\"newline\"></mspace><msub><mi>a</mi><mi>j</mi></msub><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mi>j</mi></msub></msup><mrow><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msup><mi>e</mi><msub><mi>z</mi><mi>k</mi></msub></msup></mrow></mfrac><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo>=</mo><mi>j</mi><mi mathvariant=\"normal\">∣</mi><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">z_j=\\vec{w_j}·\\vec{x}+b_j \\;\\;\\; j=1,2,...,N \\\\\na_j=\\frac{e^{z_j}}{\\sum_{k=1}^{N}e^{z_k}}=P(y=j|\\vec{x})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0001em;vertical-align:-0.2861em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9805em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8778em;vertical-align:-0.1944em;\"></span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.5123em;vertical-align:-1.1709em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3414em;\"><span style=\"top:-2.1288em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9812em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2997em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3488em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1512em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3281em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2819em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.1709em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord\">∣</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>特别的，当N=2时：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mn>1</mn></msub></msup><mrow><msup><mi>e</mi><msub><mi>z</mi><mn>1</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>2</mn></msub></msup></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mo stretchy=\"false\">(</mo><msub><mi>z</mi><mn>1</mn></msub><mo>−</mo><msub><mi>z</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>z</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">a_j=\\frac{e^{z_1}}{e^{z_1}+e^{z_2}}=\\frac{1}{1+e^{-(z_1-z_2)}}=\\frac{1}{1+e^{-z}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3143em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.911em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6293em;\"><span style=\"top:-2.8218em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2996em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6293em;\"><span style=\"top:-2.8218em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2996em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385em;\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2996em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.3137em;vertical-align:-0.4686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.5898em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8575em;\"><span style=\"top:-2.8575em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5357em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2996em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">2</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2996em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2484em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7027em;\"><span style=\"top:-2.786em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>,于是softmax就变成了sogmoid（自己想的，不知道对不对，应该对吧）.所以softmax是sogmoid的一般化。<br>\n如y有4个输出值，则</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>z</mi><mn>1</mn></msub><mo>=</mo><mover accent=\"true\"><msub><mi>w</mi><mn>1</mn></msub><mo>⃗</mo></mover><mo separator=\"true\">⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><msub><mi>b</mi><mn>1</mn></msub><mspace width=\"2em\"/><mspace width=\"2em\"/><msub><mi>a</mi><mn>1</mn></msub><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mn>1</mn></msub></msup><mrow><msup><mi>e</mi><msub><mi>z</mi><mn>1</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>2</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>3</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>4</mn></msub></msup></mrow></mfrac><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo>=</mo><mn>1</mn><mi mathvariant=\"normal\">∣</mi><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><msub><mi>z</mi><mn>2</mn></msub><mo>=</mo><mover accent=\"true\"><msub><mi>w</mi><mn>2</mn></msub><mo>⃗</mo></mover><mo separator=\"true\">⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><msub><mi>b</mi><mn>2</mn></msub><mspace width=\"2em\"/><mspace width=\"2em\"/><msub><mi>a</mi><mn>2</mn></msub><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mn>2</mn></msub></msup><mrow><msup><mi>e</mi><msub><mi>z</mi><mn>1</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>2</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>3</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>4</mn></msub></msup></mrow></mfrac><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo>=</mo><mn>2</mn><mi mathvariant=\"normal\">∣</mi><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><msub><mi>z</mi><mn>3</mn></msub><mo>=</mo><mover accent=\"true\"><msub><mi>w</mi><mn>3</mn></msub><mo>⃗</mo></mover><mo separator=\"true\">⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><msub><mi>b</mi><mn>3</mn></msub><mspace width=\"2em\"/><mspace width=\"2em\"/><msub><mi>a</mi><mn>3</mn></msub><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mn>3</mn></msub></msup><mrow><msup><mi>e</mi><msub><mi>z</mi><mn>1</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>2</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>3</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>4</mn></msub></msup></mrow></mfrac><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo>=</mo><mn>3</mn><mi mathvariant=\"normal\">∣</mi><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><msub><mi>z</mi><mn>4</mn></msub><mo>=</mo><mover accent=\"true\"><msub><mi>w</mi><mn>4</mn></msub><mo>⃗</mo></mover><mo separator=\"true\">⋅</mo><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo>+</mo><msub><mi>b</mi><mn>4</mn></msub><mspace width=\"2em\"/><mspace width=\"2em\"/><msub><mi>a</mi><mn>4</mn></msub><mo>=</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mn>4</mn></msub></msup><mrow><msup><mi>e</mi><msub><mi>z</mi><mn>1</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>2</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>3</mn></msub></msup><mo>+</mo><msup><mi>e</mi><msub><mi>z</mi><mn>4</mn></msub></msup></mrow></mfrac><mo>=</mo><mi>P</mi><mo stretchy=\"false\">(</mo><mi>y</mi><mo>=</mo><mn>4</mn><mi mathvariant=\"normal\">∣</mi><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mspace width=\"2em\"/><mspace width=\"2em\"/><mspace linebreak=\"newline\"></mspace><mi>i</mi><mi>n</mi><mspace width=\"1em\"/><mi>w</mi><mi>h</mi><mi>i</mi><mi>c</mi><mi>h</mi><mo>:</mo><mi>a</mi><mn>1</mn><mo>+</mo><mi>a</mi><mn>2</mn><mo>+</mo><mi>a</mi><mn>3</mn><mo>+</mo><mi>a</mi><mn>4</mn><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">z_1=\\vec{w_1}·\\vec{x}+b_1 \\qquad\\qquad\na_1=\\frac{e^{z_1}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}}=P(y=1|\\vec{x})\\\\\nz_2=\\vec{w_2}·\\vec{x}+b_2 \\qquad\\qquad\na_2=\\frac{e^{z_2}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}}=P(y=2|\\vec{x})\\\\\nz_3=\\vec{w_3}·\\vec{x}+b_3 \\qquad\\qquad\na_3=\\frac{e^{z_3}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}}=P(y=3|\\vec{x})\\\\\nz_4=\\vec{w_4}·\\vec{x}+b_4 \\qquad\\qquad\na_4=\\frac{e^{z_4}}{e^{z_1}+e^{z_2}+e^{z_3}+e^{z_4}}=P(y=4|\\vec{x})\\\\\n\\qquad\\qquad \\\\\nin \\quad which: a1 + a2 + a3 + a4 = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.864em;vertical-align:-0.15em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1107em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3414em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1∣</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.864em;vertical-align:-0.15em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1107em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3414em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2∣</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.864em;vertical-align:-0.15em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1107em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3414em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">3∣</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.864em;vertical-align:-0.15em;\"></span><span class=\"mord accent\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2355em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span><span class=\"mpunct\">⋅</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">b</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1107em;vertical-align:-0.7693em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3414em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.044em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">4</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">4∣</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span><span class=\"mspace\" style=\"margin-right:2em;\"></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">in</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">hi</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">h</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span></p>\n<p>softmax的损失函数</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mn>1</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>N</mi></msub><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mn>2</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>a</mi><mi>N</mi></msub><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mi>N</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">loss(a1,...,a_N,y) = \\left\\{\\begin{matrix}\n -\\log a_1, &amp; if \\quad y=1\\\\\n -\\log a_2, &amp; if \\quad  y=2\\\\\n \\vdots \\\\\n  -\\log a_N, &amp; if \\quad  y=N\n\\end{matrix}\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:5.46em;vertical-align:-2.48em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.95em;\"><span style=\"top:-1.6em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-1.592em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.916em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='0.916em' style='width:0.8889em' viewBox='0 0 888.89 916' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V916 H384z M384 0 H504 V916 H384z'/></svg></span></span><span style=\"top:-3.15em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.292em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.916em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='0.916em' style='width:0.8889em' viewBox='0 0 888.89 916' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V916 H384z M384 0 H504 V916 H384z'/></svg></span></span><span style=\"top:-5.2em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.45em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.98em;\"><span style=\"top:-5.8275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-4.6275em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-2.7675em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span><span style=\"top:-1.5675em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.48em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.98em;\"><span style=\"top:-5.14em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-3.94em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">2</span></span></span><span style=\"top:-0.88em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.48em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>其实和二元逻辑回归很类似，如果将二元回归中y=1的概率记为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">a_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，那么y=0的概率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>2</mn></msub><mo>=</mo><mn>1</mn><mo>−</mo><msub><mi>a</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">a_2=1-a_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>则二元逻辑回归损失函数就变成了：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo>=</mo><mo>−</mo><mi>y</mi><mi>log</mi><mo>⁡</mo><msub><mi>a</mi><mn>1</mn></msub><mo>−</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><mi>y</mi><mo fence=\"true\">)</mo></mrow><mi>log</mi><mo>⁡</mo><mrow><mo fence=\"true\">(</mo><mn>1</mn><mo>−</mo><msub><mi>a</mi><mn>1</mn></msub><mo fence=\"true\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">loss = -y \\log a_1- \\left( 1 - y\\right) \\log \\left( 1 - a_1\\right)\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span></span></span></span></span></p>\n<p>即</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">loss = \\left\\{\\begin{matrix}\n -\\log a_1, &amp; if \\quad y=1\\\\\n -\\log a_2, &amp; if \\quad  y=0\\\\\n\\end{matrix}\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.4em;vertical-align:-0.95em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size3\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.45em;\"><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.95em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>将softmax函数作为输出层，则输出层有10个单元，不同于sigmoid作为输出层函数，只有一个神经元。而且线性激活函数、ReLU激活函数、sigmoid激活函数作为输出层时，每个输出结果<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>只与<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">z_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>有关，而softmax的每个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>与所有的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>z</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">z_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.044em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>都有关。</p>\n<p>tensorflow实现</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf </span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras <span class=\"keyword\">import</span> Sequential </span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.layers <span class=\"keyword\">import</span> Dense</span><br><span class=\"line\">model = Sequential ([</span><br><span class=\"line\">  Dense(units=<span class=\"number\">25</span>, activation=<span class=\"string\">&#x27;relu&#x27;</span>),</span><br><span class=\"line\">  Dense(units=<span class=\"number\">15</span>, activation=<span class=\"string\">&#x27;relu&#x27;</span>),</span><br><span class=\"line\">  Dense(units=<span class=\"number\">10</span>, activation=<span class=\"string\">&#x27;softmax&#x27;</span>)</span><br><span class=\"line\">                    ])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.losses <span class=\"keyword\">import</span> SparseCategoricalCrossentropy</span><br><span class=\"line\">model.<span class=\"built_in\">compile</span>(loss=SparseCategoricalCrossentropy())</span><br><span class=\"line\"></span><br><span class=\"line\">model. fit(X,Y,epochs=<span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure>\n<p>上边的代码可以运行softmax但是不推荐，下边的代码实现的softmax神经网络可以减少舍入误差。<br>\n改进后：将输出层的激活函数换成linear,同时改变compile中SparseCategoricalCrossentrop的参数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tensorflow <span class=\"keyword\">as</span> tf</span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras <span class=\"keyword\">import</span> Sequential</span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.layers <span class=\"keyword\">import</span> Dense</span><br><span class=\"line\">model = Sequential([</span><br><span class=\"line\">  Dense(units=<span class=\"number\">25</span>, activation=<span class=\"string\">&#x27;relu&#x27;</span>),</span><br><span class=\"line\">  Dense(units=<span class=\"number\">15</span>, activation=<span class=\"string\">&#x27;relu&#x27;</span>),</span><br><span class=\"line\">  Dense(units=<span class=\"number\">10</span>, activation=<span class=\"string\">&#x27;linear&#x27;</span>) </span><br><span class=\"line\">                  ])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> tensorflow.keras.losses <span class=\"keyword\">import</span> SparseCategoricalCrossentropy</span><br><span class=\"line\">model.<span class=\"built_in\">compile</span>(...,loss=SparseCategoricalCrossentrop(from_logits=<span class=\"literal\">True</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">model.fit(X,Y,epochs=<span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure>\n<p>参数from_logits默认为False,那么对应的输出层此时激活函数为softmax，此时输出层的结果是经过了softmax处理的，最后的概率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>,然后将<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>作为中间量传递给损失函数，这就导致了误差的产生。而若将参数设置为True,那么对应的此时输出层的激活函数为linear,他所计算的是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><mi>w</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">z=wx+b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span>的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span>，而不是最后的概率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>.此时tensorflow做的是将整个softmax函数作为参数传递给损失函数，于是损失函数就变成了</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo stretchy=\"false\">(</mo><mi>a</mi><mn>1</mn><mo separator=\"true\">,</mo><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">.</mi><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>N</mi></msub><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mn>1</mn></msub></msup><mrow><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msup><mi>e</mi><msub><mi>z</mi><mi>k</mi></msub></msup></mrow></mfrac><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><mfrac><msup><mi>e</mi><msub><mi>z</mi><mi>j</mi></msub></msup><mrow><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msup><mi>e</mi><msub><mi>z</mi><mi>k</mi></msub></msup></mrow></mfrac><mo separator=\"true\">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>i</mi><mi>f</mi><mspace width=\"1em\"/><mi>y</mi><mo>=</mo><mi>N</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">loss(a1,...,a_N,y) = \\left\\{\\begin{matrix}\n -\\log \\frac{e^{z_1}}{\\sum_{k=1}^{N}e^{z_k}}, &amp; if \\quad y=1\\\\\n \\vdots \\\\\n  -\\log \\frac{e^{z_j}}{\\sum_{k=1}^{N}e^{z_k}}, &amp; if \\quad  y=N\n\\end{matrix}\\right.</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">oss</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">...</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3283em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:5.0196em;vertical-align:-2.2598em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-1.9em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-1.892em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.616em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='0.616em' style='width:0.8889em' viewBox='0 0 888.89 616' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V616 H384z M384 0 H504 V616 H384z'/></svg></span></span><span style=\"top:-3.15em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.292em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.616em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='0.616em' style='width:0.8889em' viewBox='0 0 888.89 616' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V616 H384z M384 0 H504 V616 H384z'/></svg></span></span><span style=\"top:-4.9em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7598em;\"><span style=\"top:-5.5363em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.911em;\"><span style=\"top:-2.5703em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mop op-symbol small-op mtight\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8852em;\"><span style=\"top:-2.1786em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-2.8971em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3214em;\"><span></span></span></span></span></span></span><span class=\"mspace mtight\" style=\"margin-right:0.1952em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.665em;\"><span style=\"top:-2.8575em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6944em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3496em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7385em;\"><span style=\"top:-2.931em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6444em;\"></span><span class=\"mord mtight\">1</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2996em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6547em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span></span></span><span style=\"top:-3.3817em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span><span style=\"top:-2.0824em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9393em;\"><span style=\"top:-2.5703em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mop mtight\"><span class=\"mop op-symbol small-op mtight\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8852em;\"><span style=\"top:-2.1786em;margin-left:0em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-2.8971em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3214em;\"><span></span></span></span></span></span></span><span class=\"mspace mtight\" style=\"margin-right:0.1952em;\"></span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.665em;\"><span style=\"top:-2.8575em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6944em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3496em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">e</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.779em;\"><span style=\"top:-2.9714em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3448em;margin-left:-0.044em;margin-right:0.1em;\"><span class=\"pstrut\" style=\"height:2.6595em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5092em;\"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6547em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.2598em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.7598em;\"><span style=\"top:-4.8488em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\">1</span></span></span><span style=\"top:-1.3949em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.2598em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>也就没有了中间变量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>带来的误差。然后对于上边的式子，tensorflow会重新排列其顺序，使误差更小（重新排列会避免一些很大或很小的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span>值，从而避免一些舍入，因此精度也会提高）。<br>\n参考：<a href=\"https://blog.csdn.net/muyuu/article/details/122762442\">keras.losses中from_logits的作用</a></p>\n<blockquote>\n<p>关于舍入误差<br>\n<img src=\"/img/2404151.png\" style=\"zoom:50%\"><br>\n可以看出，使用不同的形式计算同一个值会出现不同的结果，原因是精度问题。由于存储字长的限制，很多小数是无法精确在计算机内部表示的，所以如果存在中间变量，那么存到这个中间变量中的结果是经过舍入的。如b中的1+1/10000和1-1/10000,这两部分是经过舍入后的结果，因此最终结果会有一定偏差。</p>\n</blockquote>\n<h3 id=\"多标签\">多标签</h3>\n<p>多分类中，以识别数字为例，输出y是一个标量，对于一个输入x，他要做的事判断x是什么。而多标签问题中，输出y是一个向量，对于一个输入x，他想表达的是x的一些属性，比如：<br>\n<img src=\"/img/2404152.png\" style=\"zoom:50%\"><br>\n对于同一张图片，我们想要知道该图片中是否有行人、汽车和公交。可以将这三个视为该图片的属性。可以看出来，判断每个属性其实就是一个二元分类问题，我们可以根据属性个数构建对应个数的神经网络，但这很繁琐，我们完全可以构建一个神经网络，只不过让输出层有3个输出就可以了。由于每个属性都是二元分类，因此输出层的每个神经元使用sigmoid就可以了。</p>\n<h2 id=\"代价函数高级优化方法\">代价函数高级优化方法</h2>\n<p>梯度下降算法中，选择合适的学习率<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>很关键，太大太小都不好。Adam算法可以在梯度下降的过程中自动调整<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>的大小：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>小了让它大一些；<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>大了则让他变小。因此他比梯度下降算法快很多。除此之外，梯度下降算法中，所有的参数共用一个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>，但是Adam算法中，每个参数有自己的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>.即</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><mo>−</mo><msub><mi>α</mi><mn>1</mn></msub><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mn>1</mn></msub></mrow></mfrac><mspace linebreak=\"newline\"></mspace><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi><mspace linebreak=\"newline\"></mspace><msub><mi>w</mi><mn>10</mn></msub><mo>=</mo><msub><mi>w</mi><mn>10</mn></msub><mo>−</mo><msub><mi>α</mi><mn>10</mn></msub><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mn>10</mn></msub></mrow></mfrac><mspace linebreak=\"newline\"></mspace><mi>b</mi><mo>=</mo><mi>b</mi><mo>−</mo><msub><mi>α</mi><mn>11</mn></msub><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac><mspace linebreak=\"newline\"></mspace></mrow><annotation encoding=\"application/x-tex\">w_1 = w_1 -  \\alpha_1 \\frac{\\partial J(\\vec{w},b)}{\\partial w_1} \\\\ \n\\vdots \\\\\nw_{10} = w_{10} -  \\alpha_{10} \\frac{\\partial J(\\vec{w},b)}{\\partial w_{10}} \\\\ \nb = b -  \\alpha_{11} \\frac{\\partial J(\\vec{w},b)}{\\partial b} \\\\\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.263em;vertical-align:-0.836em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.836em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:1.53em;vertical-align:-0.03em;\"></span><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.5806em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.263em;vertical-align:-0.836em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">10</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.836em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7778em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">11</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\">b</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span></span></span></span></p>\n<img src=\"/img/2404136.png\" style=\"zoom:40%\">\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># model</span></span><br><span class=\"line\">model = Sequential([</span><br><span class=\"line\">tI.keras.layers.Dense(units=<span class=\"number\">25</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>),</span><br><span class=\"line\">tf.keras.layers.Dense(units=<span class=\"number\">15</span>, activation=<span class=\"string\">&#x27;sigmoid&#x27;</span>),</span><br><span class=\"line\">tf.keras.layers.Dense(units=<span class=\"number\">10</span>, activation=<span class=\"string\">&#x27;linear&#x27;</span>)</span><br><span class=\"line\">])</span><br><span class=\"line\"><span class=\"comment\"># compile 需要给一个初始的学习率</span></span><br><span class=\"line\">model.<span class=\"built_in\">compile</span>(optimizer=tf.keras.optimizers.Adam(learning_rate=<span class=\"number\">1e-3</span>),</span><br><span class=\"line\">loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=<span class=\"literal\">True</span>))</span><br><span class=\"line\"><span class=\"comment\"># fit</span></span><br><span class=\"line\">model.fit(X,Y,epochs=<span class=\"number\">100</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"其他网络层类型\">其他网络层类型</h2>\n<p>密集层类型Dense：之前代码中，我们使用Dense函数构建的每一层的类型是密集层，密集层中每个神经元都使用了input<strong>全部的</strong>特征。<br>\n卷积层类型Convolutional：卷积层中的每个神经元仅仅使用input的<strong>一部分</strong>特征。这种做法更快、需要的训练数据更少而且不太容易过拟合。但是输入窗口的大小需要合理选择。<br>\n<img src=\"/img/24041310.png\" style=\"zoom:50%\"></p>\n<h1>优化模型</h1>\n<h2 id=\"模型评估\">模型评估</h2>\n<p>在训练模型的时候，我们会通过带有正则化项的损失函数来训练参数，但是在评估模型性能的时候，往往通过没有正则化项的损失函数来评估模型的性能。<br>\n我们可以将数据集分为两部分，一部分用作训练，一部分用作测试，比例可以是7：3或者8:2等。在评估模型的过程中需要做三个事情：<br>\n1.损失函数，带正则化项<br>\n2.计算test error:Jtest，用测试样本计算J，不带正则化项。Jtest用于判断该模型表现如何<br>\n3.计算train error:Jtrain，用训练样本计算J，不带正则化项。Jtrain衡量了该模型在训练集上表现如何</p>\n<p>对于分类问题，Jtest和Jtrain的定义有另一种更为常见的方式：不用逻辑回归的损失函数来计算二者，而分别用二者的错误分类分数来衡量。如Jtest是测试集中将0判断为1，将1判断为0的分数；Jtrain是训练集中将0判断为1，将1判断为0的分数。</p>\n<h2 id=\"模型选择\">模型选择</h2>\n<p>在一个问题中，有时我们不确定需要什么样子的模型，比如是用1次的线性模型还是更为高次的方程呢？此时我们可以构建多个模型，然后用训练集训练这些模型，训练好以后用测试集来评估这些模型的性能，选择一个Jtest最低的模型。此时Jtest其实做了两件事情：他通过评估每个模型的Jtest(第一件事)来选择了一个性能最好的模型（第二件事）。但是此时说Jtest起到了评估模型的作用其实有点儿不合适，此时Jtest对模型的评估往往比实际误差更小，因为Jtest参与了模型选择的工作，用它来评估自己选择出来的模型损失当然比较小。所以应该把Jtest仅仅作为模型选择的方式，而不应该用它继续做模型评估。<br>\n那对于这种情况，就需要新的数据集对已经选择出来的模型评估，所以上述将整个数据集划分为2部分已经不够用了，我们可以将整个数据集划分为三部分：训练集、交叉验证集（AKA验证集AKA开发集AKA dev集）和测试集（比例可以为0.6、0.2、0.2.），并用这三部分分别计算Jtrain、Jcv和Jtest.其中Jtrain用来训练模型，Jcv用来选择模型，到此为止模型已经选择完成了，然后再用Jtest用来评估泛化误差。由于Jtest并未参与模型选择之前的一切工作，因此用它来评估泛化误差会更为准确。<br>\n这种方法也可以用来选择神经网络架构：有几层？每层几个神经元？等。</p>\n<blockquote>\n<p>再次理解Jtest和Jcv都是20%的样本，为什么Jtest能更准确的得到误差？<br>\n因为用Jtrain训练好模型以后，我们使用Jcv来选择了一个损失最低的模型，就是说我们选择的模型是对应于Jcv这几个样本下的最好模型。至此模型就选择好了。<br>\n选择好以后再用Jtest来测试最终选择的模型的好坏，是因为Jtest的这几个样本全程没有参与，因此得到的模型的泛化损失更准确。</p>\n</blockquote>\n<h2 id=\"正则化、偏差、方差\">正则化、偏差、方差</h2>\n<p>高偏差的表现：Jtrain很高，如果模型的bias高，那么仅仅通过增加训练集，无法使模型得到优化。<br>\n<img src=\"/img/24042403.png\" style=\"zoom:50%\"><br>\n高方差的表现：Jcv远高于Jtrain，如果模型的variance高，那么可以通过仅仅增加训练集来优化模型。<br>\n<img src=\"/img/24042404.png\" style=\"zoom:50%\"><br>\n模型不错的表现：Jtrain低且Jcv没有远高于Jtrain.<br>\n通过下图所示的<em>学习曲线</em>可以较直观看出模型的偏差和方差（绘制学习曲线不一定用到整个训练集，可以取训练集的子集做一个预判）。<br>\n<img src=\"/img/24042402.png\" style=\"zoom:50%\"></p>\n<p>要注意，有时候Jtrain较高并不一定意味着模型不好，如语音识别，有时语音中有噪音，这导致了即使人工识别也会有误差，因此可以允许Jtrain稍大，此时需要与人工识别的误差做比较而不是仅仅关注Jtrain的表现，这其实将人工识别的准确性作为了评估性能的<strong>基准</strong>。<br>\n<img src=\"/img/24042401.png\" style=\"zoom:50%\"></p>\n<p>正则化参数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>对bias和variance的影响：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span> 过大，会导致w很小，导致f(x)趋向于b；<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span> 过小，导致w很大，则相当于没有正则化。<br>\n<img src=\"/img/24042801.png\" style=\"zoom:50%\"><br>\n所以要为模型选择合适的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>：选择<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>的方法和前面选择模型的方法很类似，也需要借助于Jcv.<br>\n<img src=\"/img/24042802.png\" style=\"zoom:50%\"><br>\n偏差和方差作为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>λ</mi></mrow><annotation encoding=\"application/x-tex\">\\lambda</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">λ</span></span></span></span>的函数有如下特性：<br>\n<img src=\"/img/24042803.png\" style=\"zoom:50%\"></p>\n<p>几个解决高偏差和高方差的方法：<br>\n1.神经网络可以解决high bias和high variance的均衡（tradeoff）问题<br>\n只要训练集不是很大，大型神经网络都是low bias的。<br>\n<img src=\"/img/24042406.png\" style=\"zoom:50%\"><br>\n大型神经网络会比小的慢，但是如果正则化得当，其表现只会比小的更好。<br>\n<img src=\"/img/24042407.png\" style=\"zoom:50%\"><br>\n<img src=\"/img/24042408.png\" style=\"zoom:50%\"></p>\n<p>2.可以参考如下的几种方式<br>\n<img src=\"/img/24042405.png\" style=\"zoom:50%\"></p>\n<h2 id=\"机器学习开发的迭代\">机器学习开发的迭代</h2>\n<p>第一次构建好一个机器学习的架构以后，往往该模型性能有待提高，可以通过如下方式循环提高模型的性能<br>\n<img src=\"/img/24042501.png\" style=\"zoom:50%\"></p>\n<p>其中<strong>误差分析</strong>是一种手动分析模型的方法：假设你的模型用于判断一个邮件是否为垃圾邮件，该模型误判断了100封邮件，此时为了进一步针对性地提高模型性能，你需要手动查看这100封邮件，看看该模型误判的这些邮件都是什么类型的。比如其中40封是医药相关的、7封是故意拼写错误的（故意拼写错误有时可以避免被当作垃圾邮件）、35封是钓鱼邮件等等。显然该模型对于医药相关邮件和钓鱼邮件的判断准确度不够，因此可以针对这两类邮件选择相应的方法来提高模型的准确性，像收集更多的数据等等。<br>\n<img src=\"/img/24042502.png\" style=\"zoom:50%\"></p>\n<p>增加数据的方法：<br>\n1.针对性的添加数据集，如上边的例子中，你当然可以在数据集中添加各种类型的垃圾邮件，但是如果针对性的添加模型表现不好的类型的数据，如添加医药相关的垃圾邮件和钓鱼邮件的数据，会更有性价比。<br>\n2.数据增强（由于对于图像和音频处理时）：通过修改已有的数据集来创建新的数据集。<br>\n如在图像识别中，训练集中已有一个A的图像，那么我们可以将该图像旋转、放大、缩小等，这实际上就差生了新的训练集（通过原来的x产生了新的x），但是y仍然没有改变（A还是A）。<br>\n<img src=\"/img/24042503.png\" style=\"zoom:50%\"></p>\n<p>除此之外，还可以将图像放置于网格中，然后扭曲该网格图来获取更多的训练集，这种做法可以提高程序的健壮性。<br>\n<img src=\"/img/24042504.png\" style=\"zoom:50%\"></p>\n<p>类似的，在语音识别中，可以通过给语音添加背景噪声的方法或者用稍微差一些的设备录音已获得新的训练集。<br>\n<img src=\"/img/24042505.png\" style=\"zoom:50%\"></p>\n<p>3.数据合成：人工创造新的训练集而不是将已有的数据集修改为新的。<br>\n如下图的OCR应用中，左图为在真实照片中识别到的数据，右图是人工合成的数据。右图的数据是通过在文本编辑器中，用不同的字体打字，然后截屏，再通过调整对比度等等得到的，这样就得到了可以用于ORC训练的数据集<br>\n<img src=\"/img/24042506.png\" style=\"zoom:50%\"></p>\n<p>4.迁移学习(transfer learning)：使用不同任务的数据来训练模型。<br>\n如有模型一用于识别图片中的猫狗等1000个类别，而你想搭建一个用于识别数字的模型二，你可以将模型一的输出层修改为自己需要的，比如数字识别中，输出层只需要10个units.于是只需要将模型一的输出层的1000个units改为10个units就得到了模型二。接下来有两种做法可以选择：第一种是保持模型二复制来的隐藏层参数不变，仅训练输出层的参数；另一种做法是将复制过来的所有隐藏层参数作为初始值，训练模型二的全部层的参数。在本例中，对模型一的训练称为<em>监督预训练(Supervised pretraining)</em>，对模型二的训练称为<em>微调(Fine tuning)</em>.<br>\n<img src=\"/img/24042507.png\" style=\"zoom:50%\"></p>\n<p>这么做是因为可能你用于模型二训练的数据集不够多，而用于训练模型一的数据集充足。而且迁移学习的一个好处是你也许不用亲自训练模型一，可以直接copy别人的。<br>\n迁移学习之所以有效是因为在图像识别模型中，第一个隐藏层总是识别边，第二个识别角，第三个识别范围更大一些的基本形状，这对识别任何图片都是有帮助的。因此若想有效的迁移学习，需要保证用于预训练的模型与用于微调的模型要有<strong>相同类型的输入</strong>。如你的任务是计算机视觉相关，那么预训练的模型的输入图片x需要与你的输入图片x有相同的维度。同样的，你的任务是语音识别，那预训练的模型也得是用语音数据训练的。<br>\n<img src=\"/img/24042508.png\" style=\"zoom:50%\"></p>\n<p>机器学习项目的完整周期可以用下图表示：<br>\n<img src=\"/img/24043001.png\" style=\"zoom:50%\"><br>\n关于部署：<br>\n<img src=\"/img/24043002.png\" style=\"zoom:50%\"><br>\n其中MLOps指的是构建，部署和维护机器学习系统，他也是机器学习的一个领域。</p>\n<h2 id=\"倾斜数据集的误差指标、精确率与召回率\">倾斜数据集的误差指标、精确率与召回率</h2>\n<p>倾斜数据集指的是数据集中的正例样本和负例样本差别非常大，远远不是55开，此时若使用准确度作为误差指标，结果往往不好。比如如果现在有一个病人的数据集，在该数据集中，仅有0.5%的患者患有一种罕见病，那么如果你的模型判断一个病人是否有这种罕见病的逻辑是<code>y=0</code>(一直预测病人没得这个病),那该模型的准确率也会达到99.5%,一个看起来不错的表现，但实际上这个模型并不行对吧。此时就需要其他的误差指标来衡量该模型的性能。<br>\n一对常用的指标是<strong>精确率</strong>和<strong>召回率</strong>。为了理解这两个概念，需要引入<strong>混淆矩阵</strong>。<br>\n<img src=\"/img/24043003.png\" style=\"zoom:50%\"><br>\n上图中的2<em>2矩阵就是混淆矩阵（以2</em>2为例，可以是n*n的，主对角线是预测对的，其余都是预测错的）。可以看出，精确率其实就是模型预测患病的病人中，多少人是真正患病的；召回率就是在所有真正患病病人中，该模型找到了多少。因此我们要追求这两个指标都高的模型。若一个模型仅仅用<code>y=0</code>作为预测，那么TP=0，进一步的精确率和召回率均为0，所以该模型并不是一个好模型，是个小垃圾。</p>\n<p>Trading off precision and recall:<br>\n在之前的例子中，我们通常选0.5作为门槛，但是如果想更强调精确度的话，可以将threhold提高；若想强调召回率，可以将threhold降低。观察精确度和召回率的公式：若将threhold提高，那其实预测为1的数量就会变低，因此TP就会变低，那precision的分子分母都会变小，不好判断。但从另一个角度，若提高threhold，说明该模型只在有较高把握的情况下才会做出y=1的判断，因此precision会提高；而实际上的y=1是不会变化的，因此recall会变低。下图反应了precision和recall对于threhold的关系：<br>\n<img src=\"/img/24043004.png\" style=\"zoom:50%\"></p>\n<p>如果想要自动均衡精确度和召回率，可以使用另一种误差指标<strong>F1 score</strong>,实际上就是precision和recall的调和平均值，该值更强调相对较小的数（若一个数很小，他在分母上就会变的很大，所以整体也会偏小，接近小的值）。这样就不需在二者之间做出均衡只看F1 score就可以了。<br>\n<img src=\"/img/24043005.png\" style=\"zoom:50%\"></p>\n<h1>决策树模型</h1>\n<p>下图为一个数据集，其输入特征x都是二元的，输出y也是二元的：<br>\n<img src=\"/img/24050600.png\" style=\"zoom:50%\"></p>\n<p>如下图所示为几个不同的决策树，其中的椭圆节点称为<strong>决策节点(decision nodes)</strong>,下边的矩形节点就是叶子结点(leaf nodes)。这些决策树可能是同一数据集训练出来的不同模型，决策树学习算法就是从这些模型中选择一个较好的。<br>\n<img src=\"/img/24050601.png\" style=\"zoom:50%\"></p>\n<h2 id=\"建立决策树的关键问题\">建立决策树的关键问题</h2>\n<p>首先，从输入的特征中选择一个特征作为决策树的根节点。比如此处将耳朵形状作为根节点；<br>\n<img src=\"/img/24050602.png\" style=\"zoom:50%\"></p>\n<p>然后，关注一个子树并确定该子树的根节点；<br>\n<img src=\"/img/24050603.png\" style=\"zoom:50%\"></p>\n<p>接着，重复上边的操作将数据集划分为合适的子集，并将这些子集作为叶子结点；<br>\n最后，回到step2并选择另外一个子树，重复上面的动作。<br>\n<img src=\"/img/24050604.png\" style=\"zoom:50%\"></p>\n<p>这其中有两个关键的问题：决策节点的选择和叶节点什么时候该出现。<br>\n在选择决策节点的时候，尽量选择一些可以将数据集划分为两个高纯度的子集：如本例中，可以在耳朵形状、脸型、是否有胡须中选择一个作为根 节点，他们的效果如下图所示。<br>\n<img src=\"/img/24050605.png\" style=\"zoom:50%\"><br>\n但是如果有一个特征是DNA，那么我们可以用DNA百分之百将整个数据集分为猫和非猫两个子集，所以DNA这个特征就可以作为一个很不错的决策节点。<br>\n而对于什么时候该出现叶节点了，通常有四个参考标准：第一是数据集已经完全划分为目标子集了，比如当前的所有子集都是要么全是猫，要么全部是猫；第二是如果继续向下分裂或导致超过决策树的最大高度。决策树的高度是有限制的，做出限制的原因有两个：其一是不会变的太大而笨重，其二是小树不容易过拟合。很多时候其实也是希望树高尽可能小，像二叉排序树这种的，树高往往代表的查找效率；第三是纯度分数的提高低于某个阈值；第四是某个节点的样本数量小于某个阈值。<br>\n<img src=\"/img/24050606.png\" style=\"zoom:50%\"></p>\n<h2 id=\"熵-entropy-和信息增益-information-gain\">熵(entropy)和信息增益(information gain)</h2>\n<p>一个数据集若全是猫，则该数据集很纯；一个数据集若全不是猫，则该数据集同样很纯；如果一个数据集有猫有其他的，则就可以用<strong>熵</strong>来衡量该数据集的纯度，熵越高，则数据集越不纯。<br>\n若将数据集中猫的比例记为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">p_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，则不是猫的比例<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mn>0</mn></msub><mo>=</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">p_0=1-p_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>,则<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">p_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>的熵可以定义为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><msub><mi>p</mi><mn>1</mn></msub><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><mi>p</mi><mn>1</mn><mo stretchy=\"false\">)</mo><mo>−</mo><msub><mi>p</mi><mn>0</mn></msub><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>0</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(p_1)=-p_1log_2(p1)-p_0log_2(p_0)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">p</span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>,其中取2为底是因为当<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub><mo>=</mo><msub><mi>p</mi><mn>0</mn></msub><mo>=</mo><mn>1</mn><mi mathvariant=\"normal\">/</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">p_1=p_0=1/2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1/2</span></span></span></span>时（二元分类二者相等只能为0.5），<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H()</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span></span></span></span>可以为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>.这样的意义看起来更明确方便一些。同时注意到熵的定义和逻辑回归模型的损失函数挺像的。<br>\n<img src=\"/img/24050607.png\" style=\"zoom:50%\"></p>\n<p>有了熵的帮助后，就可以更好的选择决策节点：应该选择使熵尽可能小的特征作为决策节点。<br>\n现在分别计算以不同特征为决策节点，得到的决策树的两个分支的<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>H</mi><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">H(p_1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>,由于每个树有两个熵，为了便于选择，求出两个熵的加权平均熵，选择最低的即可。<br>\n<img src=\"/img/24050608.png\" style=\"zoom:50%\"></p>\n<p>为了遵循决策树的惯例，上边的计算还没做完，需要进一步计算信息增益，但这并不会影响结果。决策树学习中，熵的减少称为<strong>信息增益(information gain)</strong>，他衡量了由于分裂而导致的树的熵的减少的量。<br>\n最初始的根节点中有5只猫和5只其他，那么<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mn>1</mn></msub><mo>=</mo><mn>0.5</mn><mo separator=\"true\">,</mo><mi>H</mi><mo stretchy=\"false\">(</mo><msub><mi>p</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">p_1=0.5,H(p_1)=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0.5</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3011em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span>，这是没有分裂时树的熵，用这个值减去树分裂后的加权平均熵即可得到信息增益，信息增益最大的决策树就是我们想要的。<br>\n<img src=\"/img/24050609.png\" style=\"zoom:50%\"></p>\n<p>此外，信息增益还可以帮助我们判断事都要继续分裂还是将当前节点作为叶子结点。若信息增益太小了，那表示即使分裂也不会使熵减少的太多，但是分裂导致的树高增加会导致过拟合，因此此时可以停止分裂，将当前数据集作为叶子结点。<br>\n下面给出了信息增益的严格定义：<br>\n<img src=\"/img/24050610.png\" style=\"zoom:50%\"></p>\n<h2 id=\"建立决策树的步骤\">建立决策树的步骤</h2>\n<img src=\"/img/24050611.png\" style=\"zoom:50%\">\n可以看出其实构建决策树是一个迭代的过程。\n<h2 id=\"one-hot编码\">one-hot编码</h2>\n<p>上边的数据集中，每个特征的取值只有两种情况。下边的数据集中，耳朵形状的取值有3个，若采用之前的方法将其作为决策节点，则可以构建出一个有三个子树的决策树：<br>\n<img src=\"/img/24050612.png\" style=\"zoom:50%\"><br>\n若将数据集稍作更改，其实可以将数据集变成和之前的数据集一样，每个特征只有两个取值：<br>\n<img src=\"/img/24050613.png\" style=\"zoom:50%\"><br>\n如果一个特征有k种取值，那么通过<strong>one-hot编码</strong>可以将该特征转换为k个2进制特征。同样的，若将Face shape的两种取值和Whiskers的两种取值分别记做0和1，那么该数据集就可以用来训练神经网络。</p>\n<h2 id=\"有连续值特征的决策树\">有连续值特征的决策树</h2>\n<p>若一个特征是有连续值的而不是离散值，我们可以为该连续特征选择一个阈值，以该阈值作为决策节点划分子树。<br>\n<img src=\"/img/24050614.png\" style=\"zoom:50%\"><br>\n选择阈值时，需要多尝试几次，计算一个最高的信息增益，用它来分割连续值的特征。<br>\n<img src=\"/img/24050615.png\" style=\"zoom:50%\"></p>\n<h2 id=\"回归树\">回归树</h2>\n<p>决策树可以预测离散的值，将其推广就可以得到可以解决回归问题（即预测连续值）的<strong>回归树</strong>。<br>\n比如此时想要预测一个动物的体重，假设此时已经有一个回归树，该回归树的叶子结点分别保存了不同的子数据集。在做出决策的时候，如果该样本落入了其中的一个节点，那么回归树会计算该节点中的所有数据的体重平均值，并预测此次样本的体重为该平均值。<br>\n<img src=\"/img/24050701.png\" style=\"zoom:50%\"></p>\n<p>回归树在选择划分节点的时候，不是以信息增益作为标准的，而是以<strong>子集的方差</strong>作为标准。计算好以不同特征划分的树的子集的平均加权方差后，选择最低的值作为划分特征。同样的，再平均加权方差的基础上，再算一下方差减少，选择最大的方差减少，这在选择结果上和选择最低的平均加权方差的特征是一样的。<br>\n<img src=\"/img/24050702.png\" style=\"zoom:50%\"></p>\n<h2 id=\"决策树集合\">决策树集合</h2>\n<p>单个决策树对数据的微小变化很敏感。比如一个数据集中原本的根节点是耳朵形状，但是把数据集中的一个样本换一下，就可能导致根节点变为了胡须，递归下去就会得到两个完全不一样的决策树。为了解决这个问题，可以使用<strong>树集合</strong>，也就是建立多个决策树。<br>\n训练好决策树集合后，对于新样本的预测，可以将该样本再所有树上都预测一遍，然后选择最多的预测结果作为最终的预测结果，如下图中2棵树认为它是猫，1棵认为它不是猫，那么最终的结果就是它是猫。<br>\n<img src=\"/img/24050703.png\" style=\"zoom:50%\"></p>\n<h3 id=\"替换采样\">替换采样</h3>\n<p>使用替换采样可以构建一个和原始数据集不同的数据集，这是构建树集合的关键一步。比如原数据集有10个动物，我们每次从这10个动物中随机选一个，然后将其放回，再随机选。这样选10次以后我们就会得到一个和原数据集不同的数据集，当然这个新数据集会有重复的数据，这无所谓。<br>\n<img src=\"/img/24050704.png\" style=\"zoom:50%\"></p>\n<h3 id=\"随机森林算法\">随机森林算法</h3>\n<p>有了替换采样后，我们可以得到不同的数据集，进而可以构建出B个决策树。其中B的取值可以为64-228中的任何值。更大的取值虽然不会对模型的性能有损害，但是在超过某个临界点的时候，他的性能提升已经不明显了但是速度却下降了，性价比低，所以也不建议太大。这种又特定实例树组成的集合有时也称为袋装决策树。<br>\n<img src=\"/img/24050705.png\" style=\"zoom:50%\"></p>\n<p>尽管已经构建了B个不同的树，但是在所有的B棵树中，也会遇到相同的根节点以及根节点附近的子树的根节点相同的情况。为了解决这个情况，可以进一步将数据集随机化。具体的做法是：每想选择一个特征作为决策节点的时候，若原数据集有n个特征，就随机选择其中k个子特征。每个节点选择的k个子特征都是随机选择，不一样的，不是说只选择一次，然后每个决策节点都用这k个。当n比较大时，k往往取n的平方根。这就是<strong>随机森林算法</strong>。<br>\n<img src=\"/img/24050706.png\" style=\"zoom:50%\"></p>\n<p>由于数据集选择的随机性，随机森林算法在构建树的时候就已经考虑到了很多微小的变化，因此整个模型再经过随机的数据集训练后，对一些小变化会有更好的健壮性。</p>\n<h3 id=\"增强决策树\">增强决策树</h3>\n<p>随机森林算法在构建新数据集上进一步增加了随机性，<strong>增强决策树</strong>则是在构建新数据集上更有针对性。对于之前构建的决策树分类失败的样本，增强决策树在选择新的数据集时给予这些样本更高的被选择到权重，这样就一步步加强了该模型原本的缺点。<br>\n<img src=\"/img/24050707.png\" style=\"zoom:50%\"><br>\n可以看到，第一棵树的数据集使用了替换采样，然后用原数据集测试这棵树，会发现几个分类错误的数据，那么接下来选择样本的时候，这些判断错误的数据将会有更大的概率被选中。具体大多少，为什么更大以后有时间深入研究一下吧。这样当构建了前B-1棵树后，第B棵树就有很多的前边错误分类的样本来参考。<br>\nSGBoost tree就是一种很强的<strong>增强决策树</strong><br>\n<img src=\"/img/24050708.png\" style=\"zoom:50%\"></p>\n<h2 id=\"决策树VS神经网络\">决策树VS神经网络</h2>\n<p>决策树一次只能训练一个，神经网络一次可以训练很多；<br>\n单个决策树成本低于决策树集合；<br>\n结构化数据如放假预测中，特征x可以存放在电子表格中。非结构化数据如图像声音文本等，不太方便存在表格中。<br>\n等等。<br>\n<img src=\"/img/24050708.png\" style=\"zoom:50%\"></p>\n<h1>遇到的问题</h1>\n<h2 id=\"为什么神经网络的每一层能自动知道自己需要做什么？\">为什么神经网络的每一层能自动知道自己需要做什么？</h2>\n<p>梯度下降，week1/TensorFlow/C2_W1_Lab02_CoffeeRoasting_TF.ipynb中最后部分提到了。</p>\n<h2 id=\"为什么通过反向传播计算导数更高效？\">为什么通过反向传播计算导数更高效？</h2>\n<p>查阅了相关资料加上自己的一点儿思考，对于代价函数<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(\\vec{w},b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>,现在有3种方法求导：</p>\n<ol>\n<li>利用导数定义求导数（以对<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>w</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">w_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7167em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>求导为例）：</li>\n</ol>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>j</mi></msub><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>j</mi></msub><mo>+</mo><mi>ε</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>J</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>j</mi></msub><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><mi>ε</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{\\partial J(w_j,b)}{\\partial w_j}=\\frac{J(w_j+\\varepsilon ,b)-J(w_j,b)}{\\varepsilon }\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.3991em;vertical-align:-0.9721em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9721em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.113em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">ε</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\">ε</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>若有n个w，则需要计算n次<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mi>j</mi></msub><mo>+</mo><mi>ε</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J(w_j+\\varepsilon ,b)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0361em;vertical-align:-0.2861em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">ε</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">)</span></span></span></span>.</p>\n<ol start=\"2\">\n<li>反向传播求导，其实就是链式法则：</li>\n</ol>\n<p>反向传播需要借助计算图<br>\n<img src=\"/img/2404137.png\" alt=\"computingGraph\" style=\"zoom:50%\"><br>\n如图所示中间部分就是一个计算图。在第一种方法中，计算每个参数的导数的时候都需要将计算图中的4个框都走一遍，假设有N个框，P个参数，那么总次数就为NP次。<br>\n而若利用计算图求导，在第一次从左至右计算出<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">J()</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span></span></span></span>之后，就不需要重复计算了，只需要从右至左选择一条路径利用链式法则求偏导数即可求出每一个参数的导数，而这个过程中需要的计算数值，已经在第一次的从左至右计算中得到了。如J对d的导数为d，在正向传播中已经把d=2传递给了J对应的框中。</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.16em\" columnalign=\"center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>d</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>d</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>a</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>a</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>c</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>c</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mn>1</mn></msub></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mn>2</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>d</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>d</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>a</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>a</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>c</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>c</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><msub><mi>w</mi><mn>2</mn></msub></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mi><mi mathvariant=\"normal\">⋮</mi><mpadded height=\"0em\" voffset=\"0em\"><mspace mathbackground=\"black\" width=\"0em\" height=\"1.5em\"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>d</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>d</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>a</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>a</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>b</mi></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding=\"application/x-tex\">\\left\\{\\begin{matrix}\n \\frac{\\partial J}{\\partial w_1} = \\frac{\\partial J}{\\partial d}\\frac{\\partial d}{\\partial a}\\frac{\\partial a}{\\partial c}\\frac{\\partial c}{\\partial w_1}\\\\ \n\\frac{\\partial J}{\\partial w_2} = \\frac{\\partial J}{\\partial d}\\frac{\\partial d}{\\partial a}\\frac{\\partial a}{\\partial c}\\frac{\\partial c}{\\partial w_2}\\\\ \n\\vdots \\\\\n\\frac{\\partial J}{\\partial b} = \\frac{\\partial J}{\\partial d}\\frac{\\partial d}{\\partial a}\\frac{\\partial a}{\\partial b}\\\\\n\\end{matrix}\\right.\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:5.7505em;vertical-align:-2.6253em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.95em;\"><span style=\"top:-1.6em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎩</span></span></span><span style=\"top:-1.592em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.916em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='0.916em' style='width:0.8889em' viewBox='0 0 888.89 916' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V916 H384z M384 0 H504 V916 H384z'/></svg></span></span><span style=\"top:-3.15em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎨</span></span></span><span style=\"top:-4.292em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span style=\"height:0.916em;width:0.8889em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.8889em' height='0.916em' style='width:0.8889em' viewBox='0 0 888.89 916' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V916 H384z M384 0 H504 V916 H384z'/></svg></span></span><span style=\"top:-5.2em;\"><span class=\"pstrut\" style=\"height:3.15em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎧</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.45em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:3.1253em;\"><span style=\"top:-5.9327em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0269em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">d</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">a</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">c</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">a</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0269em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">c</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-4.6074em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0269em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">d</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">a</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">c</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">a</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3173em;\"><span style=\"top:-2.357em;margin-left:-0.0269em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">c</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4451em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-2.6623em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">⋮</span><span class=\"mord rule\" style=\"border-right-width:0em;border-top-width:1.5em;bottom:0em;\"></span></span></span></span><span style=\"top:-1.4222em;\"><span class=\"pstrut\" style=\"height:3.6875em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">d</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">a</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">b</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">a</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.6253em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>其中<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>a</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>J</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>d</mi></mrow></mfrac><mfrac><mrow><mi mathvariant=\"normal\">∂</mi><mi>d</mi></mrow><mrow><mi mathvariant=\"normal\">∂</mi><mi>a</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{\\partial J}{\\partial a} = \\frac{\\partial J}{\\partial d}\\frac{\\partial d}{\\partial a}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2251em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">a</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">d</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.09618em;\">J</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">a</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\" style=\"margin-right:0.05556em;\">∂</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>这一项只计算一次即可，而这一项可以直接用于计算j对w和b的偏导数，因此总共需要计算N+P次。<br>\n<img src=\"/img/2404138.png\" style=\"zoom:50%\"></p>\n<ol start=\"3\">\n<li>利用公式求导计算</li>\n</ol>\n<p>其实最开始思考为什么反向传播快的时候，我第一反应是跟用求导公式比，但查资料的时候没发现有人用公式求导，疑惑了很久，这难道不应该是最先想到的办法吗？后来发现用公式计算应该就是反向传播<br>\n以计算w的偏导数为例：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mspace width=\"1em\"/><mspace width=\"1em\"/><mi>w</mi><mo>=</mo><mi>w</mi><mo>−</mo><mi>α</mi><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mrow><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mover accent=\"true\"><mi>w</mi><mo>⃗</mo></mover><mo separator=\"true\">,</mo><mi>b</mi></mrow></msub><mo stretchy=\"false\">(</mo><msup><mover accent=\"true\"><mi>x</mi><mo>⃗</mo></mover><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup><mo stretchy=\"false\">)</mo><msup><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow></msup></mrow></mrow><annotation encoding=\"application/x-tex\">\\quad\\quad w=w-\\alpha\\frac{1}{m}\\sum_{i=1}^m {(f_{\\vec{w},b} (\\vec{x}^{(i)}) - y^{(i)})x^{(i)}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.9291em;vertical-align:-1.2777em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">m</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8723em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">m</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2777em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.545em;margin-left:-0.1076em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord accent mtight\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span><span style=\"top:-2.714em;\"><span class=\"pstrut\" style=\"height:2.714em;\"></span><span class=\"accent-body\" style=\"left:-0.1522em;\"><span class=\"overlay mtight\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2911em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord accent\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.714em;\"><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord mathnormal\">x</span></span><span style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"accent-body\" style=\"left:-0.2077em;\"><span class=\"overlay\" style=\"height:0.714em;width:0.471em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.938em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> numpy <span class=\"keyword\">as</span> np</span><br><span class=\"line\"><span class=\"comment\"># 前向传播</span></span><br><span class=\"line\">z = np.dot(W, x) + b</span><br><span class=\"line\">y = <span class=\"number\">1</span> / (<span class=\"number\">1</span> + np.exp(-z))</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 计算损失</span></span><br><span class=\"line\">loss = -(y_ * np.log(y) + (<span class=\"number\">1</span> - y_) * np.log(<span class=\"number\">1</span> - y))</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 反向传播</span></span><br><span class=\"line\">dy = (y - y_)</span><br><span class=\"line\">dw = np.dot(x, dy)</span><br><span class=\"line\">db = np.<span class=\"built_in\">sum</span>(dy)</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\"># 更新权重和偏差</span></span><br><span class=\"line\">W -= learning_rate * dw</span><br><span class=\"line\">b -= learning_rate * db</span><br></pre></td></tr></table></figure>\n<p>参考：<br>\n<a href=\"https://blog.csdn.net/qq_24568487/article/details/80782867/\">反向传播的直观理解</a><br>\n<a href=\"https://blog.csdn.net/weixin_42043935/article/details/128719354\">如何用计算图计算逻辑回归的偏导数</a></p>\n<h2 id=\"为什么不同型的矩阵相加没报错？\">为什么不同型的矩阵相加没报错？</h2>\n<p>在JupyterLab的C2_W1_Assignment.ipynb(9)中，实现一个简单函数过程中，虽然能运行，但中间有个小细节有个疑问：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">my_dense_v</span>(<span class=\"params\">A_in, W, b, g</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Computes dense layer</span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">      A_in (ndarray (m,n)) : Data, m examples, n features each</span></span><br><span class=\"line\"><span class=\"string\">      W    (ndarray (n,j)) : Weight matrix, n features per unit, j units</span></span><br><span class=\"line\"><span class=\"string\">      b    (ndarray (j,1)) : bias vector, j units  </span></span><br><span class=\"line\"><span class=\"string\">      g    activation function (e.g. sigmoid, relu..)</span></span><br><span class=\"line\"><span class=\"string\">    Returns</span></span><br><span class=\"line\"><span class=\"string\">      A_out (ndarray (m,j)) : m examples, j units</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"comment\">### START CODE HERE ### </span></span><br><span class=\"line\">    Z = np.matmul(A_in,W) + b <span class=\"comment\"># A_in乘M是m*j，为什么能和j行的b相加</span></span><br><span class=\"line\">    A_out = g(Z)</span><br><span class=\"line\"><span class=\"comment\">### END CODE HERE ### </span></span><br><span class=\"line\">    <span class=\"keyword\">return</span>(A_out)</span><br></pre></td></tr></table></figure>\n<p>查阅资料后发现NumPy可以通过广播(broadcasting)来扩展不同型的矩阵，使得两个矩阵可以进行逐元素运算如矩阵相加。他的操作过程是从两个矩阵的最后一个维度开始，向前比较两个矩阵的维度（即从右向左），如果比较的两个维度相等或者其中一个是1，那么这两个矩阵的维度是相容的，可以扩展他们使得二者可以运算，规则是低维向高维扩展。</p>\n<table border=\"0\">\n  <tr>\n    <td style=\"border: none;\"><img src=\"/img/2404131.PNG\" style=\"zoom:70%;\" /></td>\n    <td style=\"border: none;\"><img src=\"/img/2404132.gif\" style=\"zoom:70%;\" /></td>\n  </tr>\n</table>\n<h2 id=\"矩阵相乘问题\">矩阵相乘问题</h2>\n<p>在选择激活函数的小节提到的使用线性函数作为激活函数没有做用推倒的公式是用标量推导的，但是应该能推广到矩阵，暂时留着，以后有空推导一下怎么推广以及矩阵乘的意义。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm55g3gar0001biub7gwkbxp2","category_id":"cm55g3gat0004biub54gedomx","_id":"cm55g3gax000hbiub18vdb7cx"},{"post_id":"cm55g3gat0003biubbpg76xbx","category_id":"cm55g3gat0004biub54gedomx","_id":"cm55g3gay000nbiub3vqcbx3g"},{"post_id":"cm55g3gau0007biubfr5e91it","category_id":"cm55g3gat0004biub54gedomx","_id":"cm55g3gay000sbiubdumfbc8z"},{"post_id":"cm55g3gav0009biubhs5o6tef","category_id":"cm55g3gay000mbiubhtal3xlk","_id":"cm55g3gaz000wbiubabtwc9rg"},{"post_id":"cm55g3gay000rbiub69zfaukw","category_id":"cm55g3gay000mbiubhtal3xlk","_id":"cm55g3gaz000zbiub04e8cu9a"},{"post_id":"cm55g3gay000vbiub2c780e0c","category_id":"cm55g3gay000tbiub5lx3c1w4","_id":"cm55g3gaz0010biubevcx5h9h"},{"post_id":"cm55g3gav000abiub0ie5gvcj","category_id":"cm55g3gay000tbiub5lx3c1w4","_id":"cm55g3gaz0013biub7lthhu4y"},{"post_id":"cm55g3gaw000ebiub5ltue9rt","category_id":"cm55g3gaz000xbiubgs6798sz","_id":"cm55g3gaz0017biub7kflc982"},{"post_id":"cm55g3gax000fbiub4tbg6e3j","category_id":"cm55g3gay000tbiub5lx3c1w4","_id":"cm55g3gb0001cbiub50z072qj"},{"post_id":"cm55g3gax000kbiub9mt18lp1","category_id":"cm55g3gay000tbiub5lx3c1w4","_id":"cm55g3gb0001fbiubheuc5nbz"},{"post_id":"cm55g3gax000lbiub3neae091","category_id":"cm55g3gay000mbiubhtal3xlk","_id":"cm55g3gb0001hbiub2tul2kiv"},{"post_id":"cm55g3gay000qbiubgl4l3gvg","category_id":"cm55g3gb0001ebiubfauob3yg","_id":"cm55g3gb0001kbiubazb3fvgg"},{"post_id":"cm55g3gb2002abiub3ggl19ok","category_id":"cm55g3gay000mbiubhtal3xlk","_id":"cm55g3gb3002jbiub8bil9vpm"},{"post_id":"cm55g3gb3002fbiub43rngd7w","category_id":"cm55g3gb0001ebiubfauob3yg","_id":"cm55g3gb3002nbiub6nvle45c"},{"post_id":"cm55g3gb20029biub8ain30bu","category_id":"cm55g3gb2002bbiub6mljbda1","_id":"cm55g3gb3002pbiub2ylq99hp"},{"post_id":"cm55g3gb3002ibiub740jbsf8","category_id":"cm55g3gb0001ebiubfauob3yg","_id":"cm55g3gb3002rbiub3amkgy6o"},{"post_id":"cm55g3gb3002dbiubdyp0b6tc","category_id":"cm55g3gb3002kbiubgat4dm6m","_id":"cm55g3gb3002tbiub1bh52ife"}],"PostTag":[{"post_id":"cm55g3gar0001biub7gwkbxp2","tag_id":"cm55g3gau0005biubb0lthim5","_id":"cm55g3gaw000dbiube7dv2b1r"},{"post_id":"cm55g3gat0003biubbpg76xbx","tag_id":"cm55g3gau0005biubb0lthim5","_id":"cm55g3gax000jbiubeaus5fgl"},{"post_id":"cm55g3gau0007biubfr5e91it","tag_id":"cm55g3gau0005biubb0lthim5","_id":"cm55g3gay000pbiub25skc7c8"},{"post_id":"cm55g3gav0009biubhs5o6tef","tag_id":"cm55g3gay000obiub6w1ffovm","_id":"cm55g3gaz0014biubh2sqb6ub"},{"post_id":"cm55g3gav0009biubhs5o6tef","tag_id":"cm55g3gay000ubiubcpjc2qmv","_id":"cm55g3gaz0015biub110l7b3e"},{"post_id":"cm55g3gav0009biubhs5o6tef","tag_id":"cm55g3gaz000ybiubgpg88v3o","_id":"cm55g3gb00019biub27yz9a3t"},{"post_id":"cm55g3gav000abiub0ie5gvcj","tag_id":"cm55g3gaz0012biub9p3b5vsw","_id":"cm55g3gb0001abiub7fod58cv"},{"post_id":"cm55g3gaw000ebiub5ltue9rt","tag_id":"cm55g3gaz0018biub7qsf3yyg","_id":"cm55g3gb0001jbiub1rifb8zc"},{"post_id":"cm55g3gaw000ebiub5ltue9rt","tag_id":"cm55g3gb0001dbiub7gx60cmk","_id":"cm55g3gb0001lbiubfcofedj3"},{"post_id":"cm55g3gaw000ebiub5ltue9rt","tag_id":"cm55g3gb0001gbiub24d82yx0","_id":"cm55g3gb0001nbiub7etu7tiv"},{"post_id":"cm55g3gax000fbiub4tbg6e3j","tag_id":"cm55g3gaz0012biub9p3b5vsw","_id":"cm55g3gb0001pbiub91opcdyh"},{"post_id":"cm55g3gax000fbiub4tbg6e3j","tag_id":"cm55g3gb0001mbiubht4scqg3","_id":"cm55g3gb1001qbiubh8b90jeb"},{"post_id":"cm55g3gax000kbiub9mt18lp1","tag_id":"cm55g3gaz0012biub9p3b5vsw","_id":"cm55g3gb1001tbiuba36382e7"},{"post_id":"cm55g3gax000kbiub9mt18lp1","tag_id":"cm55g3gb0001mbiubht4scqg3","_id":"cm55g3gb1001ubiub6sil894x"},{"post_id":"cm55g3gax000lbiub3neae091","tag_id":"cm55g3gb1001sbiubg7ueev0x","_id":"cm55g3gb1001xbiubew558u5m"},{"post_id":"cm55g3gax000lbiub3neae091","tag_id":"cm55g3gb1001vbiubgbkzhauu","_id":"cm55g3gb1001ybiubc0au0hq4"},{"post_id":"cm55g3gay000qbiubgl4l3gvg","tag_id":"cm55g3gb1001sbiubg7ueev0x","_id":"cm55g3gb10021biubaxny9usd"},{"post_id":"cm55g3gay000qbiubgl4l3gvg","tag_id":"cm55g3gb1001zbiub10l5a6of","_id":"cm55g3gb10022biub7gwshxb9"},{"post_id":"cm55g3gay000rbiub69zfaukw","tag_id":"cm55g3gay000obiub6w1ffovm","_id":"cm55g3gb10025biub4jl9ec6q"},{"post_id":"cm55g3gay000rbiub69zfaukw","tag_id":"cm55g3gay000ubiubcpjc2qmv","_id":"cm55g3gb10026biub9ihb1top"},{"post_id":"cm55g3gay000rbiub69zfaukw","tag_id":"cm55g3gaz000ybiubgpg88v3o","_id":"cm55g3gb10027biubeoye7ym8"},{"post_id":"cm55g3gay000vbiub2c780e0c","tag_id":"cm55g3gaz0012biub9p3b5vsw","_id":"cm55g3gb10028biubcfdx4scu"},{"post_id":"cm55g3gb20029biub8ain30bu","tag_id":"cm55g3gb1001vbiubgbkzhauu","_id":"cm55g3gb3002cbiub5u948b82"},{"post_id":"cm55g3gb2002abiub3ggl19ok","tag_id":"cm55g3gay000obiub6w1ffovm","_id":"cm55g3gb3002ebiubh7fxfsq5"},{"post_id":"cm55g3gb2002abiub3ggl19ok","tag_id":"cm55g3gaz000ybiubgpg88v3o","_id":"cm55g3gb3002hbiubb9fu9rfo"},{"post_id":"cm55g3gb3002fbiub43rngd7w","tag_id":"cm55g3gb1001sbiubg7ueev0x","_id":"cm55g3gb3002lbiubf9lreq8x"},{"post_id":"cm55g3gb3002fbiub43rngd7w","tag_id":"cm55g3gb1001zbiub10l5a6of","_id":"cm55g3gb3002mbiubeldid8ql"},{"post_id":"cm55g3gb3002ibiub740jbsf8","tag_id":"cm55g3gb1001sbiubg7ueev0x","_id":"cm55g3gb3002obiub057afp09"},{"post_id":"cm55g3gb3002ibiub740jbsf8","tag_id":"cm55g3gb1001zbiub10l5a6of","_id":"cm55g3gb3002qbiubb3d4abkq"},{"post_id":"cm55g3gb3002dbiubdyp0b6tc","tag_id":"cm55g3gb3002gbiubacd4bnqy","_id":"cm55g3gb3002sbiub5u0x8f3w"}],"Tag":[{"name":"diary","_id":"cm55g3gau0005biubb0lthim5"},{"name":"hexo","_id":"cm55g3gay000obiub6w1ffovm"},{"name":"GitHub","_id":"cm55g3gay000ubiubcpjc2qmv"},{"name":"博客搭建","_id":"cm55g3gaz000ybiubgpg88v3o"},{"name":"shortcut","_id":"cm55g3gaz0012biub9p3b5vsw"},{"name":"STL","_id":"cm55g3gaz0018biub7qsf3yyg"},{"name":"C++","_id":"cm55g3gb0001dbiub7gx60cmk"},{"name":"algorithm","_id":"cm55g3gb0001gbiub24d82yx0"},{"name":"macos","_id":"cm55g3gb0001mbiubht4scqg3"},{"name":"AI","_id":"cm55g3gb1001sbiubg7ueev0x"},{"name":"homebrew","_id":"cm55g3gb1001vbiubgbkzhauu"},{"name":"machine learning","_id":"cm55g3gb1001zbiub10l5a6of"},{"name":"python","_id":"cm55g3gb3002gbiubacd4bnqy"}]}}